/*
Deployment script for iExchange_Alnatheer

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


USE iExchange_Alnatheer;
select * into [EX_Cashiers_compare] from [EX_Cashiers]
go
select * into [EX_Currencies_compare] from [EX_Currencies]
--Deleteing
GO
--/*
--The table [dbo].[Countries] is being dropped and re-created since all non-computed columns within the table have been redefined.
--*/

--IF EXISTS (select top 1 1 from [dbo].[Countries])
--    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

--GO
--/*
--The column [dbo].[EX_BranchTransfers].[CashierID] is being dropped, data loss could occur.
--*/

--IF EXISTS (select top 1 1 from [dbo].[EX_BranchTransfers])
--    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

--GO
--/*
--The column [dbo].[EX_Clients].[CRExpiryDate] is being dropped, data loss could occur.
--*/

--IF EXISTS (select top 1 1 from [dbo].[EX_Clients])
--    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

--GO
--/*
--The column [dbo].[EX_InternalTransfers].[CashierID] is being dropped, data loss could occur.
--*/

--IF EXISTS (select top 1 1 from [dbo].[EX_InternalTransfers])
--    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

--GO
--/*
--The column [dbo].[EX_Invoices].[CashierID] is being dropped, data loss could occur.
--*/

--IF EXISTS (select top 1 1 from [dbo].[EX_Invoices])
--    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

--GO
--/*
--The column [dbo].[EX_WholeInvoices].[CashierID] is being dropped, data loss could occur.
--*/

--IF EXISTS (select top 1 1 from [dbo].[EX_WholeInvoices])
--    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

--GO
--/*
--The column [dbo].[Sec_UsersForms].[UserID] is being dropped, data loss could occur.

--The column [dbo].[Sec_UsersForms].[PermissionTypeId] on table [dbo].[Sec_UsersForms] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
--*/

--IF EXISTS (select top 1 1 from [dbo].[Sec_UsersForms])
--    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

--GO
--/*
--The column [dbo].[Sec_UsersFunctions].[UserID] is being dropped, data loss could occur.

--The column [dbo].[Sec_UsersFunctions].[PermissionTypeId] on table [dbo].[Sec_UsersFunctions] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
--*/

--IF EXISTS (select top 1 1 from [dbo].[Sec_UsersFunctions])
--    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

--GO
--/*
--Table [dbo].[EX_Cashiers] is being dropped.  Deployment will halt if the table contains data.
--*/

--IF EXISTS (select top 1 1 from [dbo].[EX_Cashiers])
--    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

--GO
--/*
--Table [dbo].[EX_Currencies] is being dropped.  Deployment will halt if the table contains data.
--*/

--IF EXISTS (select top 1 1 from [dbo].[EX_Currencies])
--    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping Trigger [dbo].[TRG_A_Accounts_Delete]...';


GO
DROP TRIGGER [dbo].[TRG_A_Accounts_Delete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_A_Accounts_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_A_Accounts_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_A_Accounts_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_A_Accounts_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_A_Accounts_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_A_Accounts_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_A_CashFlow_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_A_CashFlow_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_A_CashFlow_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_A_CashFlow_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_A_CashFlow_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_A_CashFlow_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_A_JVs_Delete]...';


GO
DROP TRIGGER [dbo].[TRG_A_JVs_Delete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_A_JVs_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_A_JVs_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_A_JVs_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_A_JVs_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_A_JVs_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_A_JVs_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_A_JVsDetails_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_A_JVsDetails_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_A_JVsDetails_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_A_JVsDetails_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_A_JVsDetails_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_A_JVsDetails_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_A_Settlements_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_A_Settlements_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_A_Settlements_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_A_Settlements_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_A_Settlements_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_A_Settlements_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Countries_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_Countries_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Countries_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_Countries_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Countries_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_Countries_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_Banks_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_Banks_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_Banks_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_Banks_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_Banks_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_Banks_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_BranchTransfers_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_BranchTransfers_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_BranchTransfers_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_BranchTransfers_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_BranchTransfers_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_BranchTransfers_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_BranchTransfersDetails_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_BranchTransfersDetails_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_BranchTransfersDetails_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_BranchTransfersDetails_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_BranchTransfersDetails_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_BranchTransfersDetails_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_ClientJob_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_ClientJob_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_ClientJob_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_ClientJob_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_ClientJob_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_ClientJob_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_Clients_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_Clients_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_Clients_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_Clients_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_Clients_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_Clients_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_Clients_Modify]...';


GO
DROP TRIGGER [dbo].[TRG_EX_Clients_Modify];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_ClientsAttachments_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_ClientsAttachments_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_ClientsAttachments_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_ClientsAttachments_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_ClientsAttachments_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_ClientsAttachments_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_ClientsMemberships_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_ClientsMemberships_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_ClientsMemberships_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_ClientsMemberships_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_ClientsMemberships_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_ClientsMemberships_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_ClientsRepresentatives_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_ClientsRepresentatives_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_ClientsRepresentatives_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_ClientsRepresentatives_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_ClientsRepresentatives_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_ClientsRepresentatives_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_CurrenciesBVR_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_CurrenciesBVR_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_CurrenciesBVR_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_CurrenciesBVR_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_CurrenciesBVR_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_CurrenciesBVR_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_CurrenciesMarketPrices_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_CurrenciesMarketPrices_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_CurrenciesMarketPrices_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_CurrenciesMarketPrices_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_CurrenciesMarketPrices_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_CurrenciesMarketPrices_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_ExchangePurposes_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_ExchangePurposes_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_ExchangePurposes_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_ExchangePurposes_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_ExchangePurposes_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_ExchangePurposes_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_IDSources_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_IDSources_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_IDSources_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_IDSources_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_IDSources_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_IDSources_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_IncomeSources_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_IncomeSources_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_IncomeSources_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_IncomeSources_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_IncomeSources_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_IncomeSources_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_InternalTransfers_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_InternalTransfers_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_InternalTransfers_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_InternalTransfers_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_InternalTransfers_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_InternalTransfers_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_InternalTransfersClosingDetails_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_InternalTransfersClosingDetails_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_InternalTransfersClosingDetails_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_InternalTransfersClosingDetails_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_InternalTransfersClosingDetails_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_InternalTransfersClosingDetails_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_InternalTransfersDetails_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_InternalTransfersDetails_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_InternalTransfersDetails_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_InternalTransfersDetails_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_InternalTransfersDetails_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_InternalTransfersDetails_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_InternalTransfersDetailsTemp_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_InternalTransfersDetailsTemp_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_InternalTransfersDetailsTemp_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_InternalTransfersDetailsTemp_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_InternalTransfersDetailsTemp_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_InternalTransfersDetailsTemp_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_Invoices_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_Invoices_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_Invoices_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_Invoices_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_Invoices_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_Invoices_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_InvoicesDetails_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_InvoicesDetails_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_InvoicesDetails_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_InvoicesDetails_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_InvoicesDetails_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_InvoicesDetails_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_LocallyWanted_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_LocallyWanted_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_LocallyWanted_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_LocallyWanted_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_LocallyWanted_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_LocallyWanted_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_Settings_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_Settings_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_Settings_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_Settings_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_Settings_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_Settings_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_StatisticalDataVars_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_StatisticalDataVars_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_StatisticalDataVars_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_StatisticalDataVars_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_StatisticalDataVars_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_StatisticalDataVars_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_Suppliers_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_Suppliers_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_Suppliers_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_Suppliers_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_Suppliers_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_Suppliers_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_WholeInvoices_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_WholeInvoices_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_WholeInvoices_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_WholeInvoices_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_WholeInvoices_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_WholeInvoices_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_WholeInvoicesDetails_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_EX_WholeInvoicesDetails_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_WholeInvoicesDetails_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_EX_WholeInvoicesDetails_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_EX_WholeInvoicesDetails_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_EX_WholeInvoicesDetails_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sec_Users_Delete]...';


GO
DROP TRIGGER [dbo].[TRG_Sec_Users_Delete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sec_Users_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_Sec_Users_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sec_Users_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_Sec_Users_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sec_Users_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_Sec_Users_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sec_Users_Insert]...';


GO
DROP TRIGGER [dbo].[TRG_Sec_Users_Insert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sec_Users_Update]...';


GO
DROP TRIGGER [dbo].[TRG_Sec_Users_Update];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sec_UsersForms_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_Sec_UsersForms_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sec_UsersForms_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_Sec_UsersForms_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sec_UsersForms_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_Sec_UsersForms_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sec_UsersFunctions_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_Sec_UsersFunctions_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sec_UsersFunctions_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_Sec_UsersFunctions_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sec_UsersFunctions_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_Sec_UsersFunctions_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sys_Branches]...';


GO
DROP TRIGGER [dbo].[TRG_Sys_Branches];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sys_Settings_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_Sys_Settings_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sys_Settings_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_Sys_Settings_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sys_Settings_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_Sys_Settings_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sys_SystemInfo_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_Sys_SystemInfo_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sys_SystemInfo_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_Sys_SystemInfo_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sys_SystemInfo_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_Sys_SystemInfo_DxUpdate];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sys_SystemOptions_DxDelete]...';


GO
DROP TRIGGER [dbo].[TRG_Sys_SystemOptions_DxDelete];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sys_SystemOptions_DxInsert]...';


GO
DROP TRIGGER [dbo].[TRG_Sys_SystemOptions_DxInsert];


GO
PRINT N'Dropping Trigger [dbo].[TRG_Sys_SystemOptions_DxUpdate]...';


GO
DROP TRIGGER [dbo].[TRG_Sys_SystemOptions_DxUpdate];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_A_CashFlow_StatusID]...';


GO
ALTER TABLE [dbo].[A_CashFlow] DROP CONSTRAINT [DF_A_CashFlow_StatusID];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_A_JVs_Generated]...';


GO
ALTER TABLE [dbo].[A_JVs] DROP CONSTRAINT [DF_A_JVs_Generated];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_BranchTransfers_StatusID]...';


GO
ALTER TABLE [dbo].[EX_BranchTransfers] DROP CONSTRAINT [DF_EX_BranchTransfers_StatusID];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_Clients_SuspicionCount]...';


GO
ALTER TABLE [dbo].[EX_Clients] DROP CONSTRAINT [DF_EX_Clients_SuspicionCount];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_Clients_SuspiciousUpdated]...';


GO
ALTER TABLE [dbo].[EX_Clients] DROP CONSTRAINT [DF_EX_Clients_SuspiciousUpdated];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_Clients_SuspiciousCountLocal]...';


GO
ALTER TABLE [dbo].[EX_Clients] DROP CONSTRAINT [DF_EX_Clients_SuspiciousCountLocal];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_Clients_HasFullData]...';


GO
ALTER TABLE [dbo].[EX_Clients] DROP CONSTRAINT [DF_EX_Clients_HasFullData];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_Clients_IsSuspended]...';


GO
ALTER TABLE [dbo].[EX_Clients] DROP CONSTRAINT [DF_EX_Clients_IsSuspended];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_ClientsAttachments_IsOptimized]...';


GO
ALTER TABLE [dbo].[EX_ClientsAttachments] DROP CONSTRAINT [DF_EX_ClientsAttachments_IsOptimized];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_ClientsAttachments_HasAttachment]...';


GO
ALTER TABLE [dbo].[EX_ClientsAttachments] DROP CONSTRAINT [DF_EX_ClientsAttachments_HasAttachment];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_ClientsAttachments_HasAttachmentPdf]...';


GO
ALTER TABLE [dbo].[EX_ClientsAttachments] DROP CONSTRAINT [DF_EX_ClientsAttachments_HasAttachmentPdf];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_ClientMemberships_Salary]...';


GO
ALTER TABLE [dbo].[EX_ClientsMemberships] DROP CONSTRAINT [DF_EX_ClientMemberships_Salary];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_ClientsRepresentatives_AttachmentIsOptimized]...';


GO
ALTER TABLE [dbo].[EX_ClientsRepresentatives] DROP CONSTRAINT [DF_EX_ClientsRepresentatives_AttachmentIsOptimized];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_InternalTransfers_Closed]...';


GO
ALTER TABLE [dbo].[EX_InternalTransfers] DROP CONSTRAINT [DF_EX_InternalTransfers_Closed];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_InternalTransfersDetails_TransferType]...';


GO
ALTER TABLE [dbo].[EX_InternalTransfersDetails] DROP CONSTRAINT [DF_EX_InternalTransfersDetails_TransferType];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_Invoices_PostedAsJV]...';


GO
ALTER TABLE [dbo].[EX_Invoices] DROP CONSTRAINT [DF_EX_Invoices_PostedAsJV];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_Invoices_AvTaxPercentage]...';


GO
ALTER TABLE [dbo].[EX_Invoices] DROP CONSTRAINT [DF_EX_Invoices_AvTaxPercentage];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_Invoices_AvTaxAmount]...';


GO
ALTER TABLE [dbo].[EX_Invoices] DROP CONSTRAINT [DF_EX_Invoices_AvTaxAmount];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_Invoices_FormingStatusID]...';


GO
ALTER TABLE [dbo].[EX_Invoices] DROP CONSTRAINT [DF_EX_Invoices_FormingStatusID];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_Suppliers_CurrencyExRate]...';


GO
ALTER TABLE [dbo].[EX_Suppliers] DROP CONSTRAINT [DF_EX_Suppliers_CurrencyExRate];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_Suppliers_IsMainBranch]...';


GO
ALTER TABLE [dbo].[EX_Suppliers] DROP CONSTRAINT [DF_EX_Suppliers_IsMainBranch];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_WholeInvoices_Posted]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoices] DROP CONSTRAINT [DF_EX_WholeInvoices_Posted];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_WholeInvoices_IsNotified]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoices] DROP CONSTRAINT [DF_EX_WholeInvoices_IsNotified];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_WholeInvoices_UpdatedCount]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoices] DROP CONSTRAINT [DF_EX_WholeInvoices_UpdatedCount];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_WholeInvoices_AvTaxPercentage]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoices] DROP CONSTRAINT [DF_EX_WholeInvoices_AvTaxPercentage];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_WholeInvoices_AvTaxAmount]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoices] DROP CONSTRAINT [DF_EX_WholeInvoices_AvTaxAmount];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_Sec_UsersForms_Selected]...';


GO
ALTER TABLE [dbo].[Sec_UsersForms] DROP CONSTRAINT [DF_Sec_UsersForms_Selected];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_Sec_UsersFunctions_Selected]...';


GO
ALTER TABLE [dbo].[Sec_UsersFunctions] DROP CONSTRAINT [DF_Sec_UsersFunctions_Selected];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_Currencies_OpeningBalance]...';


GO
ALTER TABLE [dbo].[EX_Currencies] DROP CONSTRAINT [DF_EX_Currencies_OpeningBalance];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_EX_Currencies_ShowInPricesScreen]...';


GO
ALTER TABLE [dbo].[EX_Currencies] DROP CONSTRAINT [DF_EX_Currencies_ShowInPricesScreen];


GO
PRINT N'Dropping Default Constraint [dbo].[DF_Countries_SeverityID]...';


GO
ALTER TABLE [dbo].[Countries] DROP CONSTRAINT [DF_Countries_SeverityID];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_A_JVs_A_CashFlow]...';


GO
ALTER TABLE [dbo].[A_JVs] DROP CONSTRAINT [FK_A_JVs_A_CashFlow];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_A_CashFlow_A_CashFlowStatus]...';


GO
ALTER TABLE [dbo].[A_CashFlow] DROP CONSTRAINT [FK_A_CashFlow_A_CashFlowStatus];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_A_CashFlow_Sec_Users]...';


GO
ALTER TABLE [dbo].[A_CashFlow] DROP CONSTRAINT [FK_A_CashFlow_Sec_Users];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_A_CashFlow_EX_Suppliers]...';


GO
ALTER TABLE [dbo].[A_CashFlow] DROP CONSTRAINT [FK_A_CashFlow_EX_Suppliers];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_A_CashFlow_A_CashFlowType]...';


GO
ALTER TABLE [dbo].[A_CashFlow] DROP CONSTRAINT [FK_A_CashFlow_A_CashFlowType];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_A_CashFlow_EX_Currencies]...';


GO
ALTER TABLE [dbo].[A_CashFlow] DROP CONSTRAINT [FK_A_CashFlow_EX_Currencies];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_A_JVsDetails_A_JVs]...';


GO
ALTER TABLE [dbo].[A_JVsDetails] DROP CONSTRAINT [FK_A_JVsDetails_A_JVs];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_A_JVs_A_JVStatus]...';


GO
ALTER TABLE [dbo].[A_JVs] DROP CONSTRAINT [FK_A_JVs_A_JVStatus];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_A_JVs_A_JVType]...';


GO
ALTER TABLE [dbo].[A_JVs] DROP CONSTRAINT [FK_A_JVs_A_JVType];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_A_JVs_EX_BranchTransfers]...';


GO
ALTER TABLE [dbo].[A_JVs] DROP CONSTRAINT [FK_A_JVs_EX_BranchTransfers];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_A_JVs_EX_Invoices]...';


GO
ALTER TABLE [dbo].[A_JVs] DROP CONSTRAINT [FK_A_JVs_EX_Invoices];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_A_JVs_EX_WholeInvoices]...';


GO
ALTER TABLE [dbo].[A_JVs] DROP CONSTRAINT [FK_A_JVs_EX_WholeInvoices];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_A_JVsDetails_A_Accounts]...';


GO
ALTER TABLE [dbo].[A_JVsDetails] DROP CONSTRAINT [FK_A_JVsDetails_A_Accounts];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_A_JVsDetails_EX_Currencies]...';


GO
ALTER TABLE [dbo].[A_JVsDetails] DROP CONSTRAINT [FK_A_JVsDetails_EX_Currencies];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_Countries_EX_ClientJobSeverity]...';


GO
ALTER TABLE [dbo].[Countries] DROP CONSTRAINT [FK_Countries_EX_ClientJobSeverity];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_IDSources_Countries]...';


GO
ALTER TABLE [dbo].[EX_IDSources] DROP CONSTRAINT [FK_EX_IDSources_Countries];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_Clients_Nationality]...';


GO
ALTER TABLE [dbo].[EX_Clients] DROP CONSTRAINT [FK_EX_Clients_Nationality];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_Clients_BirthCountry]...';


GO
ALTER TABLE [dbo].[EX_Clients] DROP CONSTRAINT [FK_EX_Clients_BirthCountry];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_Suppliers_Countries]...';


GO
ALTER TABLE [dbo].[EX_Suppliers] DROP CONSTRAINT [FK_EX_Suppliers_Countries];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_BranchTransfers_EX_BranchTransferStatus]...';


GO
ALTER TABLE [dbo].[EX_BranchTransfers] DROP CONSTRAINT [FK_EX_BranchTransfers_EX_BranchTransferStatus];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_BranchTransfers_EX_BranchTransferType]...';


GO
ALTER TABLE [dbo].[EX_BranchTransfers] DROP CONSTRAINT [FK_EX_BranchTransfers_EX_BranchTransferType];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_BranchTransfers_EX_Cashiers]...';


GO
ALTER TABLE [dbo].[EX_BranchTransfers] DROP CONSTRAINT [FK_EX_BranchTransfers_EX_Cashiers];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_BranchTransfers_Sys_Branches]...';


GO
ALTER TABLE [dbo].[EX_BranchTransfers] DROP CONSTRAINT [FK_EX_BranchTransfers_Sys_Branches];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_BranchTransfersDetails_EX_BranchTransfers]...';


GO
ALTER TABLE [dbo].[EX_BranchTransfersDetails] DROP CONSTRAINT [FK_EX_BranchTransfersDetails_EX_BranchTransfers];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_ClientsAttachments_EX_Clients]...';


GO
ALTER TABLE [dbo].[EX_ClientsAttachments] DROP CONSTRAINT [FK_EX_ClientsAttachments_EX_Clients];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_ClientMemberships_EX_Clients]...';


GO
ALTER TABLE [dbo].[EX_ClientsMemberships] DROP CONSTRAINT [FK_EX_ClientMemberships_EX_Clients];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_Invoices_EX_Clients]...';


GO
ALTER TABLE [dbo].[EX_Invoices] DROP CONSTRAINT [FK_EX_Invoices_EX_Clients];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_ClientsRepresentatives_EX_Clients]...';


GO
ALTER TABLE [dbo].[EX_ClientsRepresentatives] DROP CONSTRAINT [FK_EX_ClientsRepresentatives_EX_Clients];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_Clients_EX_IncomeSources]...';


GO
ALTER TABLE [dbo].[EX_Clients] DROP CONSTRAINT [FK_EX_Clients_EX_IncomeSources];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_Clients_BirthCity]...';


GO
ALTER TABLE [dbo].[EX_Clients] DROP CONSTRAINT [FK_EX_Clients_BirthCity];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_Clients_EX_ExchangePurposes]...';


GO
ALTER TABLE [dbo].[EX_Clients] DROP CONSTRAINT [FK_EX_Clients_EX_ExchangePurposes];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_Clients_EX_IDSources]...';


GO
ALTER TABLE [dbo].[EX_Clients] DROP CONSTRAINT [FK_EX_Clients_EX_IDSources];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_ClientsAttachments_EX_AttachmentType]...';


GO
ALTER TABLE [dbo].[EX_ClientsAttachments] DROP CONSTRAINT [FK_EX_ClientsAttachments_EX_AttachmentType];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_Invoices_EX_InternalTransfers]...';


GO
ALTER TABLE [dbo].[EX_Invoices] DROP CONSTRAINT [FK_EX_Invoices_EX_InternalTransfers];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_InternalTransfersDetailsTemp_EX_InternalTransfers]...';


GO
ALTER TABLE [dbo].[EX_InternalTransfersDetailsTemp] DROP CONSTRAINT [FK_EX_InternalTransfersDetailsTemp_EX_InternalTransfers];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_InternalTransfers_Details_EX_InternalTransfers]...';


GO
ALTER TABLE [dbo].[EX_InternalTransfersDetails] DROP CONSTRAINT [FK_EX_InternalTransfers_Details_EX_InternalTransfers];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_InternalTransfersClosingDetails_EX_InternalTransfers]...';


GO
ALTER TABLE [dbo].[EX_InternalTransfersClosingDetails] DROP CONSTRAINT [FK_EX_InternalTransfersClosingDetails_EX_InternalTransfers];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_InternalTransfers_EX_Cashiers]...';


GO
ALTER TABLE [dbo].[EX_InternalTransfers] DROP CONSTRAINT [FK_EX_InternalTransfers_EX_Cashiers];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_InternalTransfers_Details_Ex_Currencies]...';


GO
ALTER TABLE [dbo].[EX_InternalTransfersDetails] DROP CONSTRAINT [FK_EX_InternalTransfers_Details_Ex_Currencies];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_InvoicesDetails_EX_Invoices]...';


GO
ALTER TABLE [dbo].[EX_InvoicesDetails] DROP CONSTRAINT [FK_EX_InvoicesDetails_EX_Invoices];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_Invoices_EX_Banks]...';


GO
ALTER TABLE [dbo].[EX_Invoices] DROP CONSTRAINT [FK_EX_Invoices_EX_Banks];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_Invoices_EX_Cashiers]...';


GO
ALTER TABLE [dbo].[EX_Invoices] DROP CONSTRAINT [FK_EX_Invoices_EX_Cashiers];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_Invoices_EX_InvoiceStatus]...';


GO
ALTER TABLE [dbo].[EX_Invoices] DROP CONSTRAINT [FK_EX_Invoices_EX_InvoiceStatus];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_Invoices_EX_InvoicesType]...';


GO
ALTER TABLE [dbo].[EX_Invoices] DROP CONSTRAINT [FK_EX_Invoices_EX_InvoicesType];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_Invoices_Sec_Users]...';


GO
ALTER TABLE [dbo].[EX_Invoices] DROP CONSTRAINT [FK_EX_Invoices_Sec_Users];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_InvoicesDetails_EX_Currencies]...';


GO
ALTER TABLE [dbo].[EX_InvoicesDetails] DROP CONSTRAINT [FK_EX_InvoicesDetails_EX_Currencies];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_WholeInvoices_EX_Suppliers]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoices] DROP CONSTRAINT [FK_EX_WholeInvoices_EX_Suppliers];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_Suppliers_A_Accounts]...';


GO
ALTER TABLE [dbo].[EX_Suppliers] DROP CONSTRAINT [FK_EX_Suppliers_A_Accounts];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_Suppliers_EX_SuppliersType]...';


GO
ALTER TABLE [dbo].[EX_Suppliers] DROP CONSTRAINT [FK_EX_Suppliers_EX_SuppliersType];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_Suppliers_EX_Currencies]...';


GO
ALTER TABLE [dbo].[EX_Suppliers] DROP CONSTRAINT [FK_EX_Suppliers_EX_Currencies];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_WholeInvoices_Details_EX_WholeInvoices]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoicesDetails] DROP CONSTRAINT [FK_EX_WholeInvoices_Details_EX_WholeInvoices];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_WholeInvoices_EX_Banks]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoices] DROP CONSTRAINT [FK_EX_WholeInvoices_EX_Banks];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_WholeInvoices_EX_Cashiers]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoices] DROP CONSTRAINT [FK_EX_WholeInvoices_EX_Cashiers];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_WholeInvoices_EX_InvoicesType]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoices] DROP CONSTRAINT [FK_EX_WholeInvoices_EX_InvoicesType];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_WholeInvoices_EX_WholeInvoiceStatus]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoices] DROP CONSTRAINT [FK_EX_WholeInvoices_EX_WholeInvoiceStatus];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_WholeInvoices_EX_Currencies]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoices] DROP CONSTRAINT [FK_EX_WholeInvoices_EX_Currencies];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_WholeInvoices_Details_EX_Currencies]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoicesDetails] DROP CONSTRAINT [FK_EX_WholeInvoices_Details_EX_Currencies];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_Sec_FormsFunctions_Sec_Forms]...';


GO
ALTER TABLE [dbo].[Sec_FormsFunctions] DROP CONSTRAINT [FK_Sec_FormsFunctions_Sec_Forms];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_Sec_FormsFunctions_Sec_Functions]...';


GO
ALTER TABLE [dbo].[Sec_FormsFunctions] DROP CONSTRAINT [FK_Sec_FormsFunctions_Sec_Functions];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_Sec_UsersFunctions_Sec_FormsFunctions]...';


GO
ALTER TABLE [dbo].[Sec_UsersFunctions] DROP CONSTRAINT [FK_Sec_UsersFunctions_Sec_FormsFunctions];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_Sec_UsersForms_Sec_Forms]...';


GO
ALTER TABLE [dbo].[Sec_UsersForms] DROP CONSTRAINT [FK_Sec_UsersForms_Sec_Forms];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_Sec_UsersForms_Sec_Users]...';


GO
ALTER TABLE [dbo].[Sec_UsersForms] DROP CONSTRAINT [FK_Sec_UsersForms_Sec_Users];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_Sec_UsersFunctions_Sec_Users]...';


GO
ALTER TABLE [dbo].[Sec_UsersFunctions] DROP CONSTRAINT [FK_Sec_UsersFunctions_Sec_Users];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_BranchTransfersDetails_EX_Currencies]...';


GO
ALTER TABLE [dbo].[EX_BranchTransfersDetails] DROP CONSTRAINT [FK_EX_BranchTransfersDetails_EX_Currencies];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_CurrenciesValRates_EX_Currencies]...';


GO
ALTER TABLE [dbo].[EX_CurrenciesBVR] DROP CONSTRAINT [FK_EX_CurrenciesValRates_EX_Currencies];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_EX_InternalTransfersDetailsTemp_EX_Currencies]...';


GO
ALTER TABLE [dbo].[EX_InternalTransfersDetailsTemp] DROP CONSTRAINT [FK_EX_InternalTransfersDetailsTemp_EX_Currencies];


GO
PRINT N'Dropping Function [dbo].[ChkValidEmail]...';


GO
DROP FUNCTION [dbo].[ChkValidEmail];


GO
PRINT N'Dropping Function [dbo].[GetBvrFirstMissingID]...';


GO
DROP FUNCTION [dbo].[GetBvrFirstMissingID];


GO
PRINT N'Dropping Function [dbo].[GetCurrencyBalanceWithCashiers]...';


GO
DROP FUNCTION [dbo].[GetCurrencyBalanceWithCashiers];


GO
PRINT N'Dropping Function [dbo].[GetCurrencyFullBalance]...';


GO
DROP FUNCTION [dbo].[GetCurrencyFullBalance];


GO
PRINT N'Dropping Function [dbo].[GetCurrencyValRateFIFO]...';


GO
DROP FUNCTION [dbo].[GetCurrencyValRateFIFO];


GO
PRINT N'Dropping Function [dbo].[GetDatedCurrencyBranchTransferOut_Equivalent]...';


GO
DROP FUNCTION [dbo].[GetDatedCurrencyBranchTransferOut_Equivalent];


GO
PRINT N'Dropping Function [dbo].[GetDatedCurrencyBranchTransferIn_Equivalent]...';


GO
DROP FUNCTION [dbo].[GetDatedCurrencyBranchTransferIn_Equivalent];


GO
PRINT N'Dropping Function [dbo].[GetDatedCurrencyFullBalance0]...';


GO
DROP FUNCTION [dbo].[GetDatedCurrencyFullBalance0];


GO
PRINT N'Dropping Function [dbo].[GetDatedCurrencyBranchTransferIn]...';


GO
DROP FUNCTION [dbo].[GetDatedCurrencyBranchTransferIn];


GO
PRINT N'Dropping Function [dbo].[GetDatedCurrencyBranchTransferOut]...';


GO
DROP FUNCTION [dbo].[GetDatedCurrencyBranchTransferOut];


GO
PRINT N'Dropping Function [dbo].[GetDatedCurrencyFullBalance4BT]...';


GO
DROP FUNCTION [dbo].[GetDatedCurrencyFullBalance4BT];


GO
PRINT N'Dropping Function [dbo].[GetDatedCurrencyPurchases_EquivalentAll]...';


GO
DROP FUNCTION [dbo].[GetDatedCurrencyPurchases_EquivalentAll];


GO
PRINT N'Dropping Function [dbo].[GetFileBinary]...';


GO
DROP FUNCTION [dbo].[GetFileBinary];


GO
PRINT N'Dropping Function [dbo].[GetLookupName]...';


GO
DROP FUNCTION [dbo].[GetLookupName];


GO
PRINT N'Dropping Function [dbo].[GetNameSimilarityAr]...';


GO
DROP FUNCTION [dbo].[GetNameSimilarityAr];


GO
PRINT N'Dropping Function [dbo].[ISIL_GetListCount]...';


GO
DROP FUNCTION [dbo].[ISIL_GetListCount];


GO
PRINT N'Dropping Function [dbo].[ResolveSimilarCharactersAr]...';


GO
DROP FUNCTION [dbo].[ResolveSimilarCharactersAr];


GO
PRINT N'Dropping Procedure [dbo].[_InstallInternalData]...';


GO
DROP PROCEDURE [dbo].[_InstallInternalData];


GO
PRINT N'Dropping Procedure [dbo].[A_Accounts_DepreciableAccounts]...';


GO
DROP PROCEDURE [dbo].[A_Accounts_DepreciableAccounts];


GO
PRINT N'Dropping Procedure [dbo].[A_Accounts_FullInfo]...';


GO
DROP PROCEDURE [dbo].[A_Accounts_FullInfo];


GO
PRINT N'Dropping Procedure [dbo].[A_Accounts_FullInfoByLastLevel]...';


GO
DROP PROCEDURE [dbo].[A_Accounts_FullInfoByLastLevel];


GO
PRINT N'Dropping Procedure [dbo].[A_Accounts_GetDefaultCurrencyID]...';


GO
DROP PROCEDURE [dbo].[A_Accounts_GetDefaultCurrencyID];


GO
PRINT N'Dropping Procedure [dbo].[A_CashFlow_GenerateJVForMany]...';


GO
DROP PROCEDURE [dbo].[A_CashFlow_GenerateJVForMany];


GO
PRINT N'Dropping Procedure [dbo].[A_CashFlow_GenerateJVsByDay]...';


GO
DROP PROCEDURE [dbo].[A_CashFlow_GenerateJVsByDay];


GO
PRINT N'Dropping Procedure [dbo].[A_CashFlow_GetOriginalBalanceData]...';


GO
DROP PROCEDURE [dbo].[A_CashFlow_GetOriginalBalanceData];


GO
PRINT N'Dropping Procedure [dbo].[A_JVs_DeleteMany]...';


GO
DROP PROCEDURE [dbo].[A_JVs_DeleteMany];


GO
PRINT N'Dropping Procedure [dbo].[A_JVs_GetOriginalBalanceData]...';


GO
DROP PROCEDURE [dbo].[A_JVs_GetOriginalBalanceData];


GO
PRINT N'Dropping Procedure [dbo].[A_JVs_PrepareInitJvDetails]...';


GO
DROP PROCEDURE [dbo].[A_JVs_PrepareInitJvDetails];


GO
PRINT N'Dropping Procedure [dbo].[A_JVsDetails_InitiationJVPreparation]...';


GO
DROP PROCEDURE [dbo].[A_JVsDetails_InitiationJVPreparation];


GO
PRINT N'Dropping Procedure [dbo].[A_Settlements_CheckForPreviousEffect]...';


GO
DROP PROCEDURE [dbo].[A_Settlements_CheckForPreviousEffect];


GO
PRINT N'Dropping Procedure [dbo].[A_Settlements_DeleteSettlementJVs]...';


GO
DROP PROCEDURE [dbo].[A_Settlements_DeleteSettlementJVs];


GO
PRINT N'Dropping Procedure [dbo].[A_Settlements_DeleteSettlementJVsByDay]...';


GO
DROP PROCEDURE [dbo].[A_Settlements_DeleteSettlementJVsByDay];


GO
PRINT N'Dropping Procedure [dbo].[A_Settlements_Finalize]...';


GO
DROP PROCEDURE [dbo].[A_Settlements_Finalize];


GO
PRINT N'Dropping Procedure [dbo].[A_Settlements_GetFirstDayToGenerate]...';


GO
DROP PROCEDURE [dbo].[A_Settlements_GetFirstDayToGenerate];


GO
PRINT N'Dropping Procedure [dbo].[A_Settlements_GetSettlementData]...';


GO
DROP PROCEDURE [dbo].[A_Settlements_GetSettlementData];


GO
PRINT N'Dropping Procedure [dbo].[A_Settlements_GetSettlementDurationStartDate]...';


GO
DROP PROCEDURE [dbo].[A_Settlements_GetSettlementDurationStartDate];


GO
PRINT N'Dropping Procedure [dbo].[A_Settlements_GetSettlementItems]...';


GO
DROP PROCEDURE [dbo].[A_Settlements_GetSettlementItems];


GO
PRINT N'Dropping Procedure [dbo].[A_Settlements_InsertMissingAccountsForCurrencies]...';


GO
DROP PROCEDURE [dbo].[A_Settlements_InsertMissingAccountsForCurrencies];


GO
PRINT N'Dropping Procedure [dbo].[A_Settlements_Search]...';


GO
DROP PROCEDURE [dbo].[A_Settlements_Search];


GO
PRINT N'Dropping Procedure [dbo].[DX_Transactions_LogDelete]...';


GO
DROP PROCEDURE [dbo].[DX_Transactions_LogDelete];


GO
PRINT N'Dropping Procedure [dbo].[DX_Transactions_LogInsert]...';


GO
DROP PROCEDURE [dbo].[DX_Transactions_LogInsert];


GO
PRINT N'Dropping Procedure [dbo].[DX_Transactions_LogUpdate]...';


GO
DROP PROCEDURE [dbo].[DX_Transactions_LogUpdate];


GO
PRINT N'Dropping Procedure [dbo].[EX_BranchTransfers_GenerateJV]...';


GO
DROP PROCEDURE [dbo].[EX_BranchTransfers_GenerateJV];


GO
PRINT N'Dropping Procedure [dbo].[EX_BranchTransfers_GetDetails]...';


GO
DROP PROCEDURE [dbo].[EX_BranchTransfers_GetDetails];


GO
PRINT N'Dropping Procedure [dbo].[EX_BranchTransfers_GetOriginalBalanceData]...';


GO
DROP PROCEDURE [dbo].[EX_BranchTransfers_GetOriginalBalanceData];


GO
PRINT N'Dropping Procedure [dbo].[EX_BranchTransfers_Void]...';


GO
DROP PROCEDURE [dbo].[EX_BranchTransfers_Void];


GO
PRINT N'Dropping Procedure [dbo].[EX_Cashiers_GetCashiersWithActiveTransfer]...';


GO
DROP PROCEDURE [dbo].[EX_Cashiers_GetCashiersWithActiveTransfer];


GO
PRINT N'Dropping Procedure [dbo].[EX_Clients_CheckAllowDelete]...';


GO
DROP PROCEDURE [dbo].[EX_Clients_CheckAllowDelete];


GO
PRINT N'Dropping Procedure [dbo].[EX_Clients_CheckDuplication4Code]...';


GO
DROP PROCEDURE [dbo].[EX_Clients_CheckDuplication4Code];


GO
PRINT N'Dropping Procedure [dbo].[EX_Clients_CheckDuplication4IDNumber]...';


GO
DROP PROCEDURE [dbo].[EX_Clients_CheckDuplication4IDNumber];


GO
PRINT N'Dropping Procedure [dbo].[EX_Clients_CheckDuplication4NameAr]...';


GO
DROP PROCEDURE [dbo].[EX_Clients_CheckDuplication4NameAr];


GO
PRINT N'Dropping Procedure [dbo].[EX_Clients_CheckToDeleteMembership]...';


GO
DROP PROCEDURE [dbo].[EX_Clients_CheckToDeleteMembership];


GO
PRINT N'Dropping Procedure [dbo].[EX_Clients_ClientHistory]...';


GO
DROP PROCEDURE [dbo].[EX_Clients_ClientHistory];


GO
PRINT N'Dropping Procedure [dbo].[EX_Clients_ClientHistoryInvoices]...';


GO
DROP PROCEDURE [dbo].[EX_Clients_ClientHistoryInvoices];


GO
PRINT N'Dropping Procedure [dbo].[EX_Clients_GetAnnualInvTotal]...';


GO
DROP PROCEDURE [dbo].[EX_Clients_GetAnnualInvTotal];


GO
PRINT N'Dropping Procedure [dbo].[EX_Clients_GetFormingStatus]...';


GO
DROP PROCEDURE [dbo].[EX_Clients_GetFormingStatus];


GO
PRINT N'Dropping Procedure [dbo].[EX_Clients_GetMemberships]...';


GO
DROP PROCEDURE [dbo].[EX_Clients_GetMemberships];


GO
PRINT N'Dropping Procedure [dbo].[EX_Clients_IsilList]...';


GO
DROP PROCEDURE [dbo].[EX_Clients_IsilList];


GO
PRINT N'Dropping Procedure [dbo].[EX_Clients_Lookup]...';


GO
DROP PROCEDURE [dbo].[EX_Clients_Lookup];


GO
PRINT N'Dropping Procedure [dbo].[EX_Clients_ProcessISIL]...';


GO
DROP PROCEDURE [dbo].[EX_Clients_ProcessISIL];


GO
PRINT N'Dropping Procedure [dbo].[EX_Clients_SetSuspiciousLocal]...';


GO
DROP PROCEDURE [dbo].[EX_Clients_SetSuspiciousLocal];


GO
PRINT N'Dropping Procedure [dbo].[EX_Clients_SuspiciousInter]...';


GO
DROP PROCEDURE [dbo].[EX_Clients_SuspiciousInter];


GO
PRINT N'Dropping Procedure [dbo].[EX_Clients_SuspiciousLocal]...';


GO
DROP PROCEDURE [dbo].[EX_Clients_SuspiciousLocal];


GO
PRINT N'Dropping Procedure [dbo].[EX_Clients_WithMembershipByCode]...';


GO
DROP PROCEDURE [dbo].[EX_Clients_WithMembershipByCode];


GO
PRINT N'Dropping Procedure [dbo].[EX_Currencies_GetCurrentBalance]...';


GO
DROP PROCEDURE [dbo].[EX_Currencies_GetCurrentBalance];


GO
PRINT N'Dropping Procedure [dbo].[EX_Currencies_GetValRate]...';


GO
DROP PROCEDURE [dbo].[EX_Currencies_GetValRate];


GO
PRINT N'Dropping Procedure [dbo].[EX_Currencies_MarketPrices]...';


GO
DROP PROCEDURE [dbo].[EX_Currencies_MarketPrices];


GO
PRINT N'Dropping Procedure [dbo].[EX_Currencies_RecalculateValuationPrices]...';


GO
DROP PROCEDURE [dbo].[EX_Currencies_RecalculateValuationPrices];


GO
PRINT N'Dropping Procedure [dbo].[EX_Currencies_TrackTodayInvoices]...';


GO
DROP PROCEDURE [dbo].[EX_Currencies_TrackTodayInvoices];


GO
PRINT N'Dropping Procedure [dbo].[EX_Currencies_UpdateMarketPrice]...';


GO
DROP PROCEDURE [dbo].[EX_Currencies_UpdateMarketPrice];


GO
PRINT N'Dropping Procedure [dbo].[EX_CurrenciesBVR_Initialize]...';


GO
DROP PROCEDURE [dbo].[EX_CurrenciesBVR_Initialize];


GO
PRINT N'Dropping Procedure [dbo].[EX_CurrenciesBVR_MarkToBeRemoved]...';


GO
DROP PROCEDURE [dbo].[EX_CurrenciesBVR_MarkToBeRemoved];


GO
PRINT N'Dropping Procedure [dbo].[EX_CurrenciesBVR_Process]...';


GO
DROP PROCEDURE [dbo].[EX_CurrenciesBVR_Process];


GO
PRINT N'Dropping Procedure [dbo].[EX_CurrenciesBVR_RecalculateBVR]...';


GO
DROP PROCEDURE [dbo].[EX_CurrenciesBVR_RecalculateBVR];


GO
PRINT N'Dropping Procedure [dbo].[EX_CurrenciesBVR_RemoveBVR]...';


GO
DROP PROCEDURE [dbo].[EX_CurrenciesBVR_RemoveBVR];


GO
PRINT N'Dropping Procedure [dbo].[EX_InternalTransfers_AcceptTransfer]...';


GO
DROP PROCEDURE [dbo].[EX_InternalTransfers_AcceptTransfer];


GO
PRINT N'Dropping Procedure [dbo].[EX_InternalTransfers_ChangeState]...';


GO
DROP PROCEDURE [dbo].[EX_InternalTransfers_ChangeState];


GO
PRINT N'Dropping Procedure [dbo].[EX_InternalTransfers_CurrencyList]...';


GO
DROP PROCEDURE [dbo].[EX_InternalTransfers_CurrencyList];


GO
PRINT N'Dropping Procedure [dbo].[EX_InternalTransfers_Deficits]...';


GO
DROP PROCEDURE [dbo].[EX_InternalTransfers_Deficits];


GO
PRINT N'Dropping Procedure [dbo].[EX_InternalTransfers_DeleteExceededClosingDetails]...';


GO
DROP PROCEDURE [dbo].[EX_InternalTransfers_DeleteExceededClosingDetails];


GO
PRINT N'Dropping Procedure [dbo].[EX_InternalTransfers_GetActiveTransferID]...';


GO
DROP PROCEDURE [dbo].[EX_InternalTransfers_GetActiveTransferID];


GO
PRINT N'Dropping Procedure [dbo].[EX_InternalTransfers_GetClosingDetails]...';


GO
DROP PROCEDURE [dbo].[EX_InternalTransfers_GetClosingDetails];


GO
PRINT N'Dropping Procedure [dbo].[EX_InternalTransfers_GetDetails]...';


GO
DROP PROCEDURE [dbo].[EX_InternalTransfers_GetDetails];


GO
PRINT N'Dropping Procedure [dbo].[EX_InternalTransfers_GetOriginalBalanceData]...';


GO
DROP PROCEDURE [dbo].[EX_InternalTransfers_GetOriginalBalanceData];


GO
PRINT N'Dropping Procedure [dbo].[EX_InternalTransfers_GetValidClosingDates]...';


GO
DROP PROCEDURE [dbo].[EX_InternalTransfers_GetValidClosingDates];


GO
PRINT N'Dropping Procedure [dbo].[EX_InternalTransfers_MarkAsNotified]...';


GO
DROP PROCEDURE [dbo].[EX_InternalTransfers_MarkAsNotified];


GO
PRINT N'Dropping Procedure [dbo].[EX_InternalTransfers_RejectTransfer]...';


GO
DROP PROCEDURE [dbo].[EX_InternalTransfers_RejectTransfer];


GO
PRINT N'Dropping Procedure [dbo].[EX_InternalTransfers_TransferToCashier]...';


GO
DROP PROCEDURE [dbo].[EX_InternalTransfers_TransferToCashier];


GO
PRINT N'Dropping Procedure [dbo].[EX_InternalTransfersDetailsTemp_DeleteTransferDetail]...';


GO
DROP PROCEDURE [dbo].[EX_InternalTransfersDetailsTemp_DeleteTransferDetail];


GO
PRINT N'Dropping Procedure [dbo].[EX_InternalTransfersDetailsTemp_DeleteTransferDetailTree]...';


GO
DROP PROCEDURE [dbo].[EX_InternalTransfersDetailsTemp_DeleteTransferDetailTree];


GO
PRINT N'Dropping Procedure [dbo].[EX_Invoices_GenerateJVForMany]...';


GO
DROP PROCEDURE [dbo].[EX_Invoices_GenerateJVForMany];


GO
PRINT N'Dropping Procedure [dbo].[EX_Invoices_GenerateJVsByDay]...';


GO
DROP PROCEDURE [dbo].[EX_Invoices_GenerateJVsByDay];


GO
PRINT N'Dropping Procedure [dbo].[EX_Invoices_GetDetails]...';


GO
DROP PROCEDURE [dbo].[EX_Invoices_GetDetails];


GO
PRINT N'Dropping Procedure [dbo].[EX_Invoices_GetOriginalBalanceData]...';


GO
DROP PROCEDURE [dbo].[EX_Invoices_GetOriginalBalanceData];


GO
PRINT N'Dropping Procedure [dbo].[EX_Invoices_Stats]...';


GO
DROP PROCEDURE [dbo].[EX_Invoices_Stats];


GO
PRINT N'Dropping Procedure [dbo].[EX_Invoices_TrackingCashiers]...';


GO
DROP PROCEDURE [dbo].[EX_Invoices_TrackingCashiers];


GO
PRINT N'Dropping Procedure [dbo].[EX_Invoices_TrackingCurrencies]...';


GO
DROP PROCEDURE [dbo].[EX_Invoices_TrackingCurrencies];


GO
PRINT N'Dropping Procedure [dbo].[EX_Invoices_TrackingInvoices]...';


GO
DROP PROCEDURE [dbo].[EX_Invoices_TrackingInvoices];


GO
PRINT N'Dropping Procedure [dbo].[EX_Invoices_Unposted]...';


GO
DROP PROCEDURE [dbo].[EX_Invoices_Unposted];


GO
PRINT N'Dropping Procedure [dbo].[EX_Invoices_ValidateBalance]...';


GO
DROP PROCEDURE [dbo].[EX_Invoices_ValidateBalance];


GO
PRINT N'Dropping Procedure [dbo].[EX_Invoices_Void]...';


GO
DROP PROCEDURE [dbo].[EX_Invoices_Void];


GO
PRINT N'Dropping Procedure [dbo].[EX_WholeInvoices_GenerateJVsByDay]...';


GO
DROP PROCEDURE [dbo].[EX_WholeInvoices_GenerateJVsByDay];


GO
PRINT N'Dropping Procedure [dbo].[EX_WholeInvoices_GetDetails]...';


GO
DROP PROCEDURE [dbo].[EX_WholeInvoices_GetDetails];


GO
PRINT N'Dropping Procedure [dbo].[EX_WholeInvoices_GetOriginalBalanceData]...';


GO
DROP PROCEDURE [dbo].[EX_WholeInvoices_GetOriginalBalanceData];


GO
PRINT N'Dropping Procedure [dbo].[EX_WholeInvoices_Stats]...';


GO
DROP PROCEDURE [dbo].[EX_WholeInvoices_Stats];


GO
PRINT N'Dropping Procedure [dbo].[EX_WholeInvoices_Unposted]...';


GO
DROP PROCEDURE [dbo].[EX_WholeInvoices_Unposted];


GO
PRINT N'Dropping Procedure [dbo].[EX_WholeInvoices_ValidateInvoiceAmount]...';


GO
DROP PROCEDURE [dbo].[EX_WholeInvoices_ValidateInvoiceAmount];


GO
PRINT N'Dropping Procedure [dbo].[EX_WholeInvoices_Void]...';


GO
DROP PROCEDURE [dbo].[EX_WholeInvoices_Void];


GO
PRINT N'Dropping Procedure [dbo].[ISIL_List_Search]...';


GO
DROP PROCEDURE [dbo].[ISIL_List_Search];


GO
PRINT N'Dropping Procedure [dbo].[ISIL_List_UpdateList]...';


GO
DROP PROCEDURE [dbo].[ISIL_List_UpdateList];


GO
PRINT N'Dropping Procedure [dbo].[ISIL_XmlData_GetLastUpdateDate]...';


GO
DROP PROCEDURE [dbo].[ISIL_XmlData_GetLastUpdateDate];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_A_AnalyticalStatement]...';


GO
DROP PROCEDURE [dbo].[Rpt_A_AnalyticalStatement];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_A_AnalyticalStatement2]...';


GO
DROP PROCEDURE [dbo].[Rpt_A_AnalyticalStatement2];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_A_CashVoucher]...';


GO
DROP PROCEDURE [dbo].[Rpt_A_CashVoucher];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_A_FinancialStatement]...';


GO
DROP PROCEDURE [dbo].[Rpt_A_FinancialStatement];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_A_IncomeStatement]...';


GO
DROP PROCEDURE [dbo].[Rpt_A_IncomeStatement];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_A_JvItem]...';


GO
DROP PROCEDURE [dbo].[Rpt_A_JvItem];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_A_JVs]...';


GO
DROP PROCEDURE [dbo].[Rpt_A_JVs];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_A_TrialBalance]...';


GO
DROP PROCEDURE [dbo].[Rpt_A_TrialBalance];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_A_TrialBalance2]...';


GO
DROP PROCEDURE [dbo].[Rpt_A_TrialBalance2];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_AccountStatement]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_AccountStatement];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_AnnualInvoicesForIndividuals]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_AnnualInvoicesForIndividuals];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_AssetsBalancies_Capital]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_AssetsBalancies_Capital];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_AssetsBalancies_Details]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_AssetsBalancies_Details];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_BiannualStatistics]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_BiannualStatistics];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_BranchTransfer]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_BranchTransfer];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_BranchTransferDetails]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_BranchTransferDetails];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_ClientMembership]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_ClientMembership];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_CreditLimit]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_CreditLimit];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_Currencies_Balancies]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_Currencies_Balancies];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_Currencies_BalanciesRUC]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_Currencies_BalanciesRUC];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_Currencies_CashierBalancies]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_Currencies_CashierBalancies];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_Currencies_CashierBalanciesRUC]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_Currencies_CashierBalanciesRUC];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_CurrenciesBalancies]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_CurrenciesBalancies];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_CurrenciesBalancies_Details]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_CurrenciesBalancies_Details];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_CurrenciesTransactions]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_CurrenciesTransactions];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_ExchangeAnalysis_RevenuePath]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_ExchangeAnalysis_RevenuePath];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_ExchangeAnalysis_RevenuePathTopN]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_ExchangeAnalysis_RevenuePathTopN];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_ExchangeAnalysis_SaleCost]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_ExchangeAnalysis_SaleCost];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_ExchangeAnalysis_SalePurchaseRate]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_ExchangeAnalysis_SalePurchaseRate];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_ExchangeAnalysis_SalesBelowCost]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_ExchangeAnalysis_SalesBelowCost];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_ExchangeInvoices_Detailed]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_ExchangeInvoices_Detailed];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_ExchangeInvoices_Statistics]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_ExchangeInvoices_Statistics];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_ExchangeInvoices_Summarized]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_ExchangeInvoices_Summarized];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_ExchangeWholeInvoices_Detailed]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_ExchangeWholeInvoices_Detailed];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_ExchangeWholeInvoices_Summarized]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_ExchangeWholeInvoices_Summarized];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_InternalTransfer]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_InternalTransfer];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_InternalTransfer_Details]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_InternalTransfer_Details];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_InternalTransferClosing_Details]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_InternalTransferClosing_Details];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_InternalTransfers_Statement]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_InternalTransfers_Statement];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_Invoice]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_Invoice];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_Invoice_ClientMembershipData]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_Invoice_ClientMembershipData];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_InvoiceDetails]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_InvoiceDetails];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_InvoiceFull]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_InvoiceFull];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency1_Details_Transfer]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency1_Details_Transfer];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency1_Header]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency1_Header];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency2_Header]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency2_Header];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency3_Header]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency3_Header];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency4_Header]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency4_Header];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency5_Header]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency5_Header];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency6_Details_old]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency6_Details_old];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency6_Header]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency6_Header];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency7_Details]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency7_Details];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency7_Header]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency7_Header];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency8_Details]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency8_Details];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency8_Header]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency8_Header];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency9_Header]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency9_Header];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonthlyReport]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonthlyReport];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonthlyReportPOSReport]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonthlyReportPOSReport];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_Months]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_Months];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_OfficialQuarterlyIndividualReport]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_OfficialQuarterlyIndividualReport];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_OfficialQuarterlyReport]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_OfficialQuarterlyReport];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_OfficialStatistics]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_OfficialStatistics];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_Revenue_MarketValue]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_Revenue_MarketValue];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_RevenueCIWA]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_RevenueCIWA];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_RevenuePIWA]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_RevenuePIWA];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_SalesPurchases]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_SalesPurchases];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_TrackRevenueCIWA]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_TrackRevenueCIWA];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_TrackValRateCIWA]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_TrackValRateCIWA];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_WholesaleInvoice]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_WholesaleInvoice];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_WholesaleInvoiceDetails]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_WholesaleInvoiceDetails];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_Sys_Settings_GetReportHeader]...';


GO
DROP PROCEDURE [dbo].[Rpt_Sys_Settings_GetReportHeader];


GO
PRINT N'Dropping Procedure [dbo].[Sec_Forms_FormsFunctions]...';


GO
DROP PROCEDURE [dbo].[Sec_Forms_FormsFunctions];


GO
PRINT N'Dropping Procedure [dbo].[Sec_FormsFunctions_SaveItem]...';


GO
DROP PROCEDURE [dbo].[Sec_FormsFunctions_SaveItem];


GO
PRINT N'Dropping Procedure [dbo].[Sec_TransactionLog_Actions]...';


GO
DROP PROCEDURE [dbo].[Sec_TransactionLog_Actions];


GO
PRINT N'Dropping Procedure [dbo].[Sec_TransactionLog_GetLog]...';


GO
DROP PROCEDURE [dbo].[Sec_TransactionLog_GetLog];


GO
PRINT N'Dropping Procedure [dbo].[Sec_TransactionLog_Search]...';


GO
DROP PROCEDURE [dbo].[Sec_TransactionLog_Search];


GO
PRINT N'Dropping Procedure [dbo].[Sec_Users_CheckPrivilege]...';


GO
DROP PROCEDURE [dbo].[Sec_Users_CheckPrivilege];


GO
PRINT N'Dropping Procedure [dbo].[Sec_Users_CheckPrivilegeByUserID]...';


GO
DROP PROCEDURE [dbo].[Sec_Users_CheckPrivilegeByUserID];


GO
PRINT N'Dropping Procedure [dbo].[Sec_Users_GetNotifications]...';


GO
DROP PROCEDURE [dbo].[Sec_Users_GetNotifications];


GO
PRINT N'Dropping Procedure [dbo].[Sec_Users_GetUserData]...';


GO
DROP PROCEDURE [dbo].[Sec_Users_GetUserData];


GO
PRINT N'Dropping Procedure [dbo].[Sec_Users_UserPrivileges]...';


GO
DROP PROCEDURE [dbo].[Sec_Users_UserPrivileges];


GO
PRINT N'Dropping Procedure [dbo].[Sec_UsersForms_UserForms]...';


GO
DROP PROCEDURE [dbo].[Sec_UsersForms_UserForms];


GO
PRINT N'Dropping Procedure [dbo].[Sec_UsersFunctions_UserFunctions]...';


GO
DROP PROCEDURE [dbo].[Sec_UsersFunctions_UserFunctions];


GO
PRINT N'Dropping Procedure [dbo].[Sys_Backups_InsertBackupItem]...';


GO
DROP PROCEDURE [dbo].[Sys_Backups_InsertBackupItem];


GO
PRINT N'Dropping Procedure [dbo].[Sys_Branches_GetStatus]...';


GO
DROP PROCEDURE [dbo].[Sys_Branches_GetStatus];


GO
PRINT N'Dropping Procedure [dbo].[Sys_MobileIntegration_TodayData]...';


GO
DROP PROCEDURE [dbo].[Sys_MobileIntegration_TodayData];


GO
PRINT N'Dropping Function [dbo].[ConvertDateToString]...';


GO
DROP FUNCTION [dbo].[ConvertDateToString];


GO
PRINT N'Dropping Function [dbo].[ConvertToHijriDate]...';


GO
DROP FUNCTION [dbo].[ConvertToHijriDate];


GO
PRINT N'Dropping Function [dbo].[EX_Clients_GetSuspiciousLocalCount]...';


GO
DROP FUNCTION [dbo].[EX_Clients_GetSuspiciousLocalCount];


GO
PRINT N'Dropping Function [dbo].[GetCurrencyBalanceByBVR]...';


GO
DROP FUNCTION [dbo].[GetCurrencyBalanceByBVR];


GO
PRINT N'Dropping Function [dbo].[GetCurrencyValRateCIWA]...';


GO
DROP FUNCTION [dbo].[GetCurrencyValRateCIWA];


GO
PRINT N'Dropping Function [dbo].[GetCurrencyValRatePIWA]...';


GO
DROP FUNCTION [dbo].[GetCurrencyValRatePIWA];


GO
PRINT N'Dropping Function [dbo].[GetDatedBankBalance]...';


GO
DROP FUNCTION [dbo].[GetDatedBankBalance];


GO
PRINT N'Dropping Function [dbo].[GetDatedBranchTransfers]...';


GO
DROP FUNCTION [dbo].[GetDatedBranchTransfers];


GO
PRINT N'Dropping Function [dbo].[GetDatedCurrencyBalanceWithCashiers]...';


GO
DROP FUNCTION [dbo].[GetDatedCurrencyBalanceWithCashiers];


GO
PRINT N'Dropping Function [dbo].[GetDatedCurrencyFullBalance]...';


GO
DROP FUNCTION [dbo].[GetDatedCurrencyFullBalance];


GO
PRINT N'Dropping Function [dbo].[GetDatedCurrencyPurchases]...';


GO
DROP FUNCTION [dbo].[GetDatedCurrencyPurchases];


GO
PRINT N'Dropping Function [dbo].[GetDatedCurrencyPurchases_Equivalent]...';


GO
DROP FUNCTION [dbo].[GetDatedCurrencyPurchases_Equivalent];


GO
PRINT N'Dropping Function [dbo].[GetDatedCurrencySales]...';


GO
DROP FUNCTION [dbo].[GetDatedCurrencySales];


GO
PRINT N'Dropping Function [dbo].[GetDatedCurrencySales_Equivalent]...';


GO
DROP FUNCTION [dbo].[GetDatedCurrencySales_Equivalent];


GO
PRINT N'Dropping Function [dbo].[GetDatedCurrencySales_EquivalentAll]...';


GO
DROP FUNCTION [dbo].[GetDatedCurrencySales_EquivalentAll];


GO
PRINT N'Dropping Function [dbo].[GetDatedSupplierBalance]...';


GO
DROP FUNCTION [dbo].[GetDatedSupplierBalance];


GO
PRINT N'Dropping Function [dbo].[GetMoneytaryCount]...';


GO
DROP FUNCTION [dbo].[GetMoneytaryCount];


GO
PRINT N'Dropping Function [dbo].[GetMoneytaryValue]...';


GO
DROP FUNCTION [dbo].[GetMoneytaryValue];


GO
PRINT N'Dropping Function [dbo].[GetNameSimilarityEn]...';


GO
DROP FUNCTION [dbo].[GetNameSimilarityEn];


GO
PRINT N'Dropping Function [dbo].[GetSpentCurrencyAmount]...';


GO
DROP FUNCTION [dbo].[GetSpentCurrencyAmount];


GO
PRINT N'Dropping Function [dbo].[ResolveSimilarCharactersEn]...';


GO
DROP FUNCTION [dbo].[ResolveSimilarCharactersEn];


GO
PRINT N'Dropping Function [dbo].[ToArabicSearchRegEx]...';


GO
DROP FUNCTION [dbo].[ToArabicSearchRegEx];


GO
PRINT N'Dropping Function [dbo].[ToDisplayDate]...';


GO
DROP FUNCTION [dbo].[ToDisplayDate];


GO
PRINT N'Dropping Function [dbo].[ToDisplayDateTime]...';


GO
DROP FUNCTION [dbo].[ToDisplayDateTime];


GO
PRINT N'Dropping Function [dbo].[EX_Clients_GetSuspiciousLocal]...';


GO
DROP FUNCTION [dbo].[EX_Clients_GetSuspiciousLocal];


GO
PRINT N'Dropping Table [dbo].[EX_Cashiers]...';


GO
DROP TABLE [dbo].[EX_Cashiers];


GO
PRINT N'Dropping Procedure [dbo].[A_CashFlow_GenerateJV]...';


GO
DROP PROCEDURE [dbo].[A_CashFlow_GenerateJV];


GO
PRINT N'Dropping Procedure [dbo].[A_JVs_InsertJV]...';


GO
DROP PROCEDURE [dbo].[A_JVs_InsertJV];


GO
PRINT N'Dropping Procedure [dbo].[EX_Clients_GetAnnualSaleInvTotal]...';


GO
DROP PROCEDURE [dbo].[EX_Clients_GetAnnualSaleInvTotal];


GO
PRINT N'Dropping Procedure [dbo].[EX_Clients_WithMembership]...';


GO
DROP PROCEDURE [dbo].[EX_Clients_WithMembership];


GO
PRINT N'Dropping Procedure [dbo].[EX_Currencies_Balancies]...';


GO
DROP PROCEDURE [dbo].[EX_Currencies_Balancies];


GO
PRINT N'Dropping Procedure [dbo].[EX_Currencies_CashierBalancies]...';


GO
DROP PROCEDURE [dbo].[EX_Currencies_CashierBalancies];


GO
PRINT N'Dropping Procedure [dbo].[EX_CurrenciesBVR_MarkAsNotProcessed]...';


GO
DROP PROCEDURE [dbo].[EX_CurrenciesBVR_MarkAsNotProcessed];


GO
PRINT N'Dropping Procedure [dbo].[EX_Invoices_GenerateJV]...';


GO
DROP PROCEDURE [dbo].[EX_Invoices_GenerateJV];


GO
PRINT N'Dropping Procedure [dbo].[EX_WholeInvoices_GenerateJV]...';


GO
DROP PROCEDURE [dbo].[EX_WholeInvoices_GenerateJV];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency1_Details_Purchase]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency1_Details_Purchase];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency1_Details_Sale]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency1_Details_Sale];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency2_Details]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency2_Details];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency3_P1_Details]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency3_P1_Details];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency3_P2_Details]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency3_P2_Details];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency3_P3_Details]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency3_P3_Details];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency4_Details]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency4_Details];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency5_Details]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency5_Details];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency6_Details]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency6_Details];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonetaryAgency8_DetailsAll]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonetaryAgency8_DetailsAll];


GO
PRINT N'Dropping Procedure [dbo].[Rpt_EX_MonthlyReportPOS]...';


GO
DROP PROCEDURE [dbo].[Rpt_EX_MonthlyReportPOS];


GO
PRINT N'Dropping Function [dbo].[GetCurrencyBalanceByCashier]...';


GO
DROP FUNCTION [dbo].[GetCurrencyBalanceByCashier];


GO
PRINT N'Dropping Function [dbo].[GetCurrencyBalanceInSafe]...';


GO
DROP FUNCTION [dbo].[GetCurrencyBalanceInSafe];


GO
PRINT N'Dropping Function [dbo].[GetDatedCurrencyBalanceByCashier]...';


GO
DROP FUNCTION [dbo].[GetDatedCurrencyBalanceByCashier];


GO
PRINT N'Dropping Function [dbo].[GetDatedCurrencyBalanceInSafe]...';


GO
DROP FUNCTION [dbo].[GetDatedCurrencyBalanceInSafe];


GO
PRINT N'Dropping Function [dbo].[GetNameSimilarity]...';


GO
DROP FUNCTION [dbo].[GetNameSimilarity];


GO
PRINT N'Dropping Function [dbo].[ResolveSimilarCharacters]...';


GO
DROP FUNCTION [dbo].[ResolveSimilarCharacters];


GO
PRINT N'Dropping Function [dbo].[Trim]...';


GO
DROP FUNCTION [dbo].[Trim];


GO
PRINT N'Dropping Primary Key [dbo].[PK_Country]...';


GO
ALTER TABLE [dbo].[Countries] DROP CONSTRAINT [PK_Country];


GO
PRINT N'Dropping Table [dbo].[Countries]...';


GO
DROP TABLE [dbo].[Countries];


GO
PRINT N'Dropping Table [dbo].[EX_Currencies]...';


GO
DROP TABLE [dbo].[EX_Currencies];


GO
PRINT N'Dropping Procedure [dbo].[EX_Suppliers_CheckIfBranch]...';


GO
DROP PROCEDURE [dbo].[EX_Suppliers_CheckIfBranch];


--end deleting
GO
--PRINT N'Creating User [ahmed]...';


--GO
--CREATE USER [ahmed] FOR LOGIN [ahmed];


--GO
--PRINT N'Creating Role Membership [db_ddladmin] for [ahmed]...';


--GO
--EXECUTE sp_addrolemember @rolename = N'db_ddladmin', @membername = N'ahmed';


--GO
--PRINT N'Creating Role Membership [db_owner] for [ahmed]...';


--GO
--EXECUTE sp_addrolemember @rolename = N'db_owner', @membername = N'ahmed';


GO
PRINT N'Altering Table [dbo].[A_Accounts]...';


GO
ALTER TABLE [dbo].[A_Accounts]
    ADD [HasDetailedAccounts] BIT NULL;


GO
PRINT N'Creating Index [dbo].[A_Accounts].[IX_A_Accounts_CostCenterID]...';


GO
CREATE NONCLUSTERED INDEX [IX_A_Accounts_CostCenterID]
    ON [dbo].[A_Accounts]([CostCenterID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[A_CashFlow]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_A_CashFlow] (
    [VoucherID]     INT             IDENTITY (1, 1) NOT NULL,
    [VoucherNo]     INT             NOT NULL,
    [VoucherDate]   DATETIME        NOT NULL,
    [VoucherTime]   DATETIME        NOT NULL,
    [VoucherTypeID] INT             NOT NULL,
    [SupplierID]    INT             NULL,
    [PaymentMethod] INT             NOT NULL,
    [CheckNo]       NVARCHAR (20)   NULL,
    [BankID]        INT             NULL,
    [Amount]        DECIMAL (18, 2) NOT NULL,
    [CurrencyID]    INT             NOT NULL,
    [Remarks]       NVARCHAR (200)  NULL,
    [UserID]        INT             NOT NULL,
    [StatusID]      INT             CONSTRAINT [DF_A_CashFlow_StatusID] DEFAULT ((1)) NOT NULL,
    [BranchID]      INT             NULL,
    [IsDeleted]     BIT             CONSTRAINT [DF__A_CashFlo__IsDel__4AADF94F] DEFAULT (CONVERT (BIT, (0))) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_A_CashFlow1] PRIMARY KEY CLUSTERED ([VoucherID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[A_CashFlow])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_A_CashFlow] ON;
        INSERT INTO [dbo].[tmp_ms_xx_A_CashFlow] ([VoucherID], [VoucherNo], [VoucherDate], [VoucherTime], [VoucherTypeID], [SupplierID], [PaymentMethod], [CheckNo], [BankID], [Amount], [CurrencyID], [Remarks], [UserID], [StatusID])
        SELECT   [VoucherID],
                 [VoucherNo],
                 [VoucherDate],
                 [VoucherTime],
                 [VoucherTypeID],
                 [SupplierID],
                 [PaymentMethod],
                 [CheckNo],
                 [BankID],
                 [Amount],
                 [CurrencyID],
                 [Remarks],
                 [UserID],
                 [StatusID]
        FROM     [dbo].[A_CashFlow]
        ORDER BY [VoucherID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_A_CashFlow] OFF;
    END

DROP TABLE [dbo].[A_CashFlow];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_A_CashFlow]', N'A_CashFlow';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_A_CashFlow1]', N'PK_A_CashFlow', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Index [dbo].[A_CashFlow].[IX_A_CashFlow_BranchID]...';


GO
CREATE NONCLUSTERED INDEX [IX_A_CashFlow_BranchID]
    ON [dbo].[A_CashFlow]([BranchID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[A_JVs]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_A_JVs] (
    [JVID]                     INT            IDENTITY (1, 1) NOT NULL,
    [JVNo]                     INT            NOT NULL,
    [JVDate]                   DATETIME       NOT NULL,
    [JVTime]                   DATETIME       NOT NULL,
    [JVTypeID]                 INT            NOT NULL,
    [JVStatusID]               INT            NOT NULL,
    [Remarks]                  NVARCHAR (200) NULL,
    [Generated]                BIT            CONSTRAINT [DF_A_JVs_Generated] DEFAULT ((0)) NOT NULL,
    [InvoiceID]                INT            NULL,
    [WholeInvoiceID]           INT            NULL,
    [CashFlowID]               INT            NULL,
    [BranchTransferID]         INT            NULL,
    [TaswyaTransferId]         INT            NULL,
    [TreasuryTransferId]       INT            NULL,
    [IsDeleted]                BIT            DEFAULT (CONVERT (BIT, (0))) NOT NULL,
    [BranchID]                 INT            NULL,
    [BanksTransfereId]         BIGINT         NULL,
    [BanksTreasuryTransfereId] BIGINT         NULL,
    [UserId]                   INT            NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_A_JVs1] PRIMARY KEY CLUSTERED ([JVID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[A_JVs])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_A_JVs] ON;
        INSERT INTO [dbo].[tmp_ms_xx_A_JVs] ([JVID], [JVNo], [JVDate], [JVTime], [JVTypeID], [JVStatusID], [Remarks], [Generated], [InvoiceID], [WholeInvoiceID], [CashFlowID], [BranchTransferID])
        SELECT   [JVID],
                 [JVNo],
                 [JVDate],
                 [JVTime],
                 [JVTypeID],
                 [JVStatusID],
                 [Remarks],
                 [Generated],
                 [InvoiceID],
                 [WholeInvoiceID],
                 [CashFlowID],
                 [BranchTransferID]
        FROM     [dbo].[A_JVs]
        ORDER BY [JVID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_A_JVs] OFF;
    END

DROP TABLE [dbo].[A_JVs];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_A_JVs]', N'A_JVs';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_A_JVs1]', N'PK_A_JVs', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Index [dbo].[A_JVs].[IX_A_JVs_01]...';


GO
CREATE NONCLUSTERED INDEX [IX_A_JVs_01]
    ON [dbo].[A_JVs]([Generated] ASC, [JVTime] ASC)
    INCLUDE([JVID]);


GO
PRINT N'Creating Index [dbo].[A_JVs].[IX_A_JVs_TaswyaTransferId]...';


GO
CREATE NONCLUSTERED INDEX [IX_A_JVs_TaswyaTransferId]
    ON [dbo].[A_JVs]([TaswyaTransferId] ASC);


GO
PRINT N'Creating Index [dbo].[A_JVs].[IX_A_JVs_TreasuryTransferId]...';


GO
CREATE NONCLUSTERED INDEX [IX_A_JVs_TreasuryTransferId]
    ON [dbo].[A_JVs]([TreasuryTransferId] ASC);


GO
PRINT N'Creating Index [dbo].[A_JVs].[IX_A_JVs_BranchID]...';


GO
CREATE NONCLUSTERED INDEX [IX_A_JVs_BranchID]
    ON [dbo].[A_JVs]([BranchID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[A_JVsDetails]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_A_JVsDetails] (
    [JVDetailID]    INT             IDENTITY (1, 1) NOT NULL,
    [JVID]          INT             NOT NULL,
    [AccountID]     INT             NOT NULL,
    [CurrencyID]    INT             NOT NULL,
    [ForeignDebit]  DECIMAL (18, 2) NULL,
    [ForeignCredit] DECIMAL (18, 2) NULL,
    [Debit]         DECIMAL (18, 2) NOT NULL,
    [Credit]        DECIMAL (18, 2) NOT NULL,
    [IsDeleted]     BIT             DEFAULT (CONVERT (BIT, (0))) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_A_JVsDetails1] PRIMARY KEY CLUSTERED ([JVDetailID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[A_JVsDetails])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_A_JVsDetails] ON;
        INSERT INTO [dbo].[tmp_ms_xx_A_JVsDetails] ([JVDetailID], [JVID], [AccountID], [CurrencyID], [ForeignDebit], [ForeignCredit], [Debit], [Credit])
        SELECT   [JVDetailID],
                 [JVID],
                 [AccountID],
                 [CurrencyID],
                 [ForeignDebit],
                 [ForeignCredit],
                 [Debit],
                 [Credit]
        FROM     [dbo].[A_JVsDetails]
        ORDER BY [JVDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_A_JVsDetails] OFF;
    END

DROP TABLE [dbo].[A_JVsDetails];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_A_JVsDetails]', N'A_JVsDetails';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_A_JVsDetails1]', N'PK_A_JVsDetails', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Index [dbo].[A_JVsDetails].[IX_A_JVsDetails_01]...';


GO
CREATE NONCLUSTERED INDEX [IX_A_JVsDetails_01]
    ON [dbo].[A_JVsDetails]([CurrencyID] ASC)
    INCLUDE([JVID], [AccountID], [ForeignDebit]);


GO
PRINT N'Creating Index [dbo].[A_JVsDetails].[IX_A_JVsDetails_02]...';


GO
CREATE NONCLUSTERED INDEX [IX_A_JVsDetails_02]
    ON [dbo].[A_JVsDetails]([JVID] ASC)
    INCLUDE([JVDetailID]);


GO
PRINT N'Creating Table [dbo].[Countries]...';


GO
CREATE TABLE [dbo].[Countries] (
    [Id]       BIGINT         IDENTITY (1, 1) NOT NULL,
    [NameAr]   NVARCHAR (MAX) NULL,
    [NameEn]   NVARCHAR (MAX) NULL,
    [RiskRate] INT            NOT NULL,
    [IsActve]  INT            NOT NULL,
    CONSTRAINT [PK_Countries] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Altering Table [dbo].[EX_AttachmentType]...';


GO
ALTER TABLE [dbo].[EX_AttachmentType]
    ADD [IsDeleted] BIT DEFAULT (CONVERT (BIT, (0))) NOT NULL;


GO
PRINT N'Altering Table [dbo].[EX_Banks]...';


GO
ALTER TABLE [dbo].[EX_Banks]
    ADD [IsActve]   INT DEFAULT ((1)) NOT NULL,
        [RiskRate]  INT DEFAULT ((0)) NOT NULL,
        [IsDeleted] BIT DEFAULT (CONVERT (BIT, (0))) NOT NULL;


GO
PRINT N'Altering Table [dbo].[EX_Branches]...';


GO
ALTER TABLE [dbo].[EX_Branches]
    ADD [ManagerId] INT NULL;


GO
PRINT N'Starting rebuilding table [dbo].[EX_BranchTransfers]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EX_BranchTransfers] (
    [VoucherID]    INT            IDENTITY (1, 1) NOT NULL,
    [VoucherNo]    INT            NOT NULL,
    [VoucherDate]  DATETIME       NOT NULL,
    [VoucherTime]  DATETIME       NOT NULL,
    [Receptionist] NVARCHAR (100) NULL,
    [Remarks]      NVARCHAR (200) NULL,
    [TypeID]       INT            NOT NULL,
    [BranchID]     INT            NULL,
    [StatusID]     INT            CONSTRAINT [DF_EX_BranchTransfers_StatusID] DEFAULT ((1)) NOT NULL,
    [BranchID1]    INT            CONSTRAINT [DF__EX_Branch__Branc__7A3D10E0] DEFAULT ((1)) NULL,
    [UserId]       INT            CONSTRAINT [DF__EX_Branch__UserI__51FA155C] DEFAULT ((0)) NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_EX_BranchTransfers1] PRIMARY KEY CLUSTERED ([VoucherID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EX_BranchTransfers])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_BranchTransfers] ON;
        INSERT INTO [dbo].[tmp_ms_xx_EX_BranchTransfers] ([VoucherID], [VoucherNo], [VoucherDate], [VoucherTime], [Receptionist], [Remarks], [TypeID], [BranchID], [StatusID])
        SELECT   [VoucherID],
                 [VoucherNo],
                 [VoucherDate],
                 [VoucherTime],
                 [Receptionist],
                 [Remarks],
                 [TypeID],
                 [BranchID],
                 [StatusID]
        FROM     [dbo].[EX_BranchTransfers]
        ORDER BY [VoucherID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_BranchTransfers] OFF;
    END

DROP TABLE [dbo].[EX_BranchTransfers];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EX_BranchTransfers]', N'EX_BranchTransfers';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_EX_BranchTransfers1]', N'PK_EX_BranchTransfers', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering Table [dbo].[EX_ClientJob]...';


GO
ALTER TABLE [dbo].[EX_ClientJob]
    ADD [JobNameEn]      NVARCHAR (MAX) NULL,
        [IsDeleted]      BIT            DEFAULT (CONVERT (BIT, (0))) NOT NULL,
        [ClientSectorId] INT            NULL;


GO
PRINT N'Creating Index [dbo].[EX_ClientJob].[IX_EX_ClientJob_ClientSectorId]...';


GO
CREATE NONCLUSTERED INDEX [IX_EX_ClientJob_ClientSectorId]
    ON [dbo].[EX_ClientJob]([ClientSectorId] ASC);


GO
PRINT N'Altering Table [dbo].[EX_ClientJobSeverity]...';


GO
ALTER TABLE [dbo].[EX_ClientJobSeverity]
    ADD [IsDeleted] BIT DEFAULT (CONVERT (BIT, (0))) NOT NULL;


GO
PRINT N'Starting rebuilding table [dbo].[EX_Clients]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EX_Clients] (
    [ClientID]             INT             IDENTITY (1, 1) NOT NULL,
    [ClientCode]           NVARCHAR (16)   NOT NULL,
    [ClientNameEn]         NVARCHAR (100)  NULL,
    [ClientNameAr]         NVARCHAR (100)  NULL,
    [ClientTypeID]         INT             NOT NULL,
    [CountryID]            INT             NULL,
    [IDTypeID]             INT             NULL,
    [IDNumber]             NVARCHAR (20)   NULL,
    [IDSource]             NVARCHAR (30)   NULL,
    [IDExpiryDate]         NVARCHAR (10)   NULL,
    [Mobile]               NVARCHAR (15)   NULL,
    [Sponsor]              NVARCHAR (50)   NULL,
    [SuspiciousCount]      INT             CONSTRAINT [DF_EX_Clients_SuspicionCount] DEFAULT ((0)) NOT NULL,
    [SuspiciousUpdated]    BIT             CONSTRAINT [DF_EX_Clients_SuspiciousUpdated] DEFAULT ((0)) NOT NULL,
    [JobTitle]             NVARCHAR (50)   NULL,
    [Income]               DECIMAL (18, 2) NULL,
    [IncomeSource]         NVARCHAR (50)   NULL,
    [PurposeOfExchange]    NVARCHAR (100)  NULL,
    [Capital]              DECIMAL (18)    NULL,
    [Specialty]            NVARCHAR (50)   NULL,
    [Address]              NVARCHAR (200)  NULL,
    [JobID]                INT             NULL,
    [SuspiciousCountLocal] INT             CONSTRAINT [DF_EX_Clients_SuspiciousCountLocal] DEFAULT ((0)) NOT NULL,
    [HasFullData]          BIT             CONSTRAINT [DF_EX_Clients_HasFullData] DEFAULT ((0)) NOT NULL,
    [Birthdate]            DATETIME        NULL,
    [IDExpiredDate]        DATETIME        NULL,
    [CRExpiredDate]        DATETIME        NULL,
    [JobAuthority]         NVARCHAR (50)   NULL,
    [OthrePhone]           NVARCHAR (20)   NULL,
    [OtherMobile]          NVARCHAR (20)   NULL,
    [CRNumber]             NVARCHAR (10)   NULL,
    [UnifiedNumber]        NVARCHAR (10)   NULL,
    [CreationDate]         DATETIME        NULL,
    [IDSourceID]           INT             NULL,
    [IncomeSourceID]       INT             NULL,
    [ExchangePurposeID]    INT             NULL,
    [IsSuspended]          BIT             CONSTRAINT [DF_EX_Clients_IsSuspended] DEFAULT ((0)) NOT NULL,
    [BirthCountryID]       INT             NULL,
    [BirthCityID]          INT             NULL,
    [IsDeleted]            BIT             DEFAULT (CONVERT (BIT, (0))) NOT NULL,
    [BranchID]             INT             NULL,
    [Sector]               NVARCHAR (MAX)  NULL,
    [ClientSectorId]       INT             NULL,
    [ClientActivityID]     INT             NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_EX_Clients1] PRIMARY KEY CLUSTERED ([ClientID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EX_Clients])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_Clients] ON;
        INSERT INTO [dbo].[tmp_ms_xx_EX_Clients] ([ClientID], [ClientCode], [ClientNameEn], [ClientNameAr], [ClientTypeID], [CountryID], [IDTypeID], [IDNumber], [IDSource], [IDExpiryDate], [Mobile], [Sponsor], [SuspiciousCount], [SuspiciousUpdated], [JobTitle], [Income], [IncomeSource], [PurposeOfExchange], [Capital], [Specialty], [Address], [JobID], [SuspiciousCountLocal], [HasFullData], [Birthdate], [IDExpiredDate], [CRExpiredDate], [JobAuthority], [OthrePhone], [OtherMobile], [CRNumber], [UnifiedNumber], [CreationDate], [IDSourceID], [IncomeSourceID], [ExchangePurposeID], [IsSuspended], [BirthCountryID], [BirthCityID])
        SELECT   [ClientID],
                 [ClientCode],
                 [ClientNameEn],
                 [ClientNameAr],
                 [ClientTypeID],
                 [CountryID],
                 [IDTypeID],
                 [IDNumber],
                 [IDSource],
                 [IDExpiryDate],
                 [Mobile],
                 [Sponsor],
                 [SuspiciousCount],
                 [SuspiciousUpdated],
                 [JobTitle],
                 [Income],
                 [IncomeSource],
                 [PurposeOfExchange],
                 [Capital],
                 [Specialty],
                 [Address],
                 [JobID],
                 [SuspiciousCountLocal],
                 [HasFullData],
                 [Birthdate],
                 [IDExpiredDate],
                 [CRExpiredDate],
                 [JobAuthority],
                 [OthrePhone],
                 [OtherMobile],
                 [CRNumber],
                 [UnifiedNumber],
                 [CreationDate],
                 [IDSourceID],
                 [IncomeSourceID],
                 [ExchangePurposeID],
                 [IsSuspended],
                 [BirthCountryID],
                 [BirthCityID]
        FROM     [dbo].[EX_Clients]
        ORDER BY [ClientID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_Clients] OFF;
    END

DROP TABLE [dbo].[EX_Clients];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EX_Clients]', N'EX_Clients';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_EX_Clients1]', N'PK_EX_Clients', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Index [dbo].[EX_Clients].[NonClusteredIndex-20240816-072529]...';


GO
CREATE NONCLUSTERED INDEX [NonClusteredIndex-20240816-072529]
    ON [dbo].[EX_Clients]([ClientCode] ASC) WITH (FILLFACTOR = 50);


GO
PRINT N'Creating Index [dbo].[EX_Clients].[IX_EX_Clients_ClientSectorId]...';


GO
CREATE NONCLUSTERED INDEX [IX_EX_Clients_ClientSectorId]
    ON [dbo].[EX_Clients]([ClientSectorId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[EX_ClientsAttachments]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EX_ClientsAttachments] (
    [ClientAttachmentID] INT            IDENTITY (1, 1) NOT NULL,
    [ClientID]           INT            NOT NULL,
    [AttachmentTypeID]   INT            NULL,
    [IsOptimized]        BIT            CONSTRAINT [DF_EX_ClientsAttachments_IsOptimized] DEFAULT ((0)) NOT NULL,
    [AttachmentFilePath] VARCHAR (MAX)  NULL,
    [AttachmentName]     NVARCHAR (MAX) NULL,
    [HasAttachment]      BIT            CONSTRAINT [DF_EX_ClientsAttachments_HasAttachment] DEFAULT ((0)) NOT NULL,
    [HasAttachmentPdf]   BIT            CONSTRAINT [DF_EX_ClientsAttachments_HasAttachmentPdf] DEFAULT ((0)) NOT NULL,
    [IsDeleted]          BIT            CONSTRAINT [DF__EX_Client__IsDel__42ECDBF6] DEFAULT (CONVERT (BIT, (0))) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_EX_ClientsAttachments1] PRIMARY KEY CLUSTERED ([ClientAttachmentID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EX_ClientsAttachments])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_ClientsAttachments] ON;
        INSERT INTO [dbo].[tmp_ms_xx_EX_ClientsAttachments] ([ClientAttachmentID], [ClientID], [AttachmentTypeID], [IsOptimized], [AttachmentFilePath], [AttachmentName], [HasAttachment], [HasAttachmentPdf])
        SELECT   [ClientAttachmentID],
                 [ClientID],
                 [AttachmentTypeID],
                 [IsOptimized],
                 [AttachmentFilePath],
                 [AttachmentName],
                 [HasAttachment],
                 [HasAttachmentPdf]
        FROM     [dbo].[EX_ClientsAttachments]
        ORDER BY [ClientAttachmentID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_ClientsAttachments] OFF;
    END

DROP TABLE [dbo].[EX_ClientsAttachments];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EX_ClientsAttachments]', N'EX_ClientsAttachments';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_EX_ClientsAttachments1]', N'PK_EX_ClientsAttachments', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[EX_ClientsMemberships]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EX_ClientsMemberships] (
    [MembershipID]     INT            IDENTITY (1, 1) NOT NULL,
    [ClientID]         INT            NOT NULL,
    [CreationDate]     DATETIME       NULL,
    [StartDate]        DATETIME       NOT NULL,
    [EndDate]          DATETIME       NOT NULL,
    [JobTitle]         NVARCHAR (50)  NULL,
    [Salary]           DECIMAL (18)   CONSTRAINT [DF_EX_ClientMemberships_Salary] DEFAULT ((0)) NOT NULL,
    [HasAttachment]    BIT            NULL,
    [HasAttachmentPdf] BIT            NULL,
    [IsDeleted]        BIT            DEFAULT (CONVERT (BIT, (0))) NOT NULL,
    [path]             NVARCHAR (MAX) NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_EX_ClientMemberships1] PRIMARY KEY CLUSTERED ([MembershipID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EX_ClientsMemberships])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_ClientsMemberships] ON;
        INSERT INTO [dbo].[tmp_ms_xx_EX_ClientsMemberships] ([MembershipID], [ClientID], [CreationDate], [StartDate], [EndDate], [JobTitle], [Salary], [HasAttachment], [HasAttachmentPdf])
        SELECT   [MembershipID],
                 [ClientID],
                 [CreationDate],
                 [StartDate],
                 [EndDate],
                 [JobTitle],
                 [Salary],
                 [HasAttachment],
                 [HasAttachmentPdf]
        FROM     [dbo].[EX_ClientsMemberships]
        ORDER BY [MembershipID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_ClientsMemberships] OFF;
    END

DROP TABLE [dbo].[EX_ClientsMemberships];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EX_ClientsMemberships]', N'EX_ClientsMemberships';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_EX_ClientMemberships1]', N'PK_EX_ClientMemberships', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[EX_ClientsRepresentatives]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EX_ClientsRepresentatives] (
    [RepresentativeID]   INT            IDENTITY (1, 1) NOT NULL,
    [ClientID]           INT            NOT NULL,
    [RepresentativeName] NVARCHAR (50)  NULL,
    [IsOptimized]        BIT            CONSTRAINT [DF_EX_ClientsRepresentatives_AttachmentIsOptimized] DEFAULT ((0)) NOT NULL,
    [HasAttachment]      BIT            NULL,
    [HasAttachmentPdf]   BIT            NULL,
    [IsDeleted]          BIT            DEFAULT (CONVERT (BIT, (0))) NOT NULL,
    [path]               NVARCHAR (MAX) NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_EX_ClientsRepresentatives1] PRIMARY KEY CLUSTERED ([RepresentativeID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EX_ClientsRepresentatives])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_ClientsRepresentatives] ON;
        INSERT INTO [dbo].[tmp_ms_xx_EX_ClientsRepresentatives] ([RepresentativeID], [ClientID], [RepresentativeName], [IsOptimized], [HasAttachment], [HasAttachmentPdf])
        SELECT   [RepresentativeID],
                 [ClientID],
                 [RepresentativeName],
                 [IsOptimized],
                 [HasAttachment],
                 [HasAttachmentPdf]
        FROM     [dbo].[EX_ClientsRepresentatives]
        ORDER BY [RepresentativeID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_ClientsRepresentatives] OFF;
    END

DROP TABLE [dbo].[EX_ClientsRepresentatives];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EX_ClientsRepresentatives]', N'EX_ClientsRepresentatives';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_EX_ClientsRepresentatives1]', N'PK_EX_ClientsRepresentatives', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering Table [dbo].[EX_CurrenciesBVR]...';


GO
ALTER TABLE [dbo].[EX_CurrenciesBVR] ALTER COLUMN [ActionType] NVARCHAR (50) NOT NULL;


GO
PRINT N'Altering Table [dbo].[EX_ExchangePurposes]...';


GO
ALTER TABLE [dbo].[EX_ExchangePurposes]
    ADD [IsDeleted] BIT DEFAULT (CONVERT (BIT, (0))) NOT NULL;


GO
PRINT N'Altering Table [dbo].[EX_IDSources]...';


GO
ALTER TABLE [dbo].[EX_IDSources]
    ADD [IsDeleted] BIT DEFAULT (CONVERT (BIT, (0))) NOT NULL;


GO
PRINT N'Altering Table [dbo].[EX_IncomeSources]...';


GO
ALTER TABLE [dbo].[EX_IncomeSources]
    ADD [IsDeleted] BIT DEFAULT (CONVERT (BIT, (0))) NOT NULL;


GO
PRINT N'Starting rebuilding table [dbo].[EX_InternalTransfers]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EX_InternalTransfers] (
    [TransferID]          INT            IDENTITY (1, 1) NOT NULL,
    [TransferNo]          INT            NOT NULL,
    [TransferDate]        DATETIME       NOT NULL,
    [Remarks]             NVARCHAR (200) NULL,
    [Closed]              BIT            CONSTRAINT [DF_EX_InternalTransfers_Closed] DEFAULT ((0)) NOT NULL,
    [TransferClosingDate] DATETIME       NULL,
    [UserId]              INT            CONSTRAINT [DF__EX_Intern__UserI__5105F123] DEFAULT ((0)) NULL,
    [BranchID]            INT            DEFAULT ((0)) NULL,
    [TreasuryId]          INT            NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_EX_InternalTransfers1] PRIMARY KEY CLUSTERED ([TransferID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EX_InternalTransfers])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_InternalTransfers] ON;
        INSERT INTO [dbo].[tmp_ms_xx_EX_InternalTransfers] ([TransferID], [TransferNo], [TransferDate], [Remarks], [Closed], [TransferClosingDate])
        SELECT   [TransferID],
                 [TransferNo],
                 [TransferDate],
                 [Remarks],
                 [Closed],
                 [TransferClosingDate]
        FROM     [dbo].[EX_InternalTransfers]
        ORDER BY [TransferID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_InternalTransfers] OFF;
    END

DROP TABLE [dbo].[EX_InternalTransfers];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EX_InternalTransfers]', N'EX_InternalTransfers';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_EX_InternalTransfers1]', N'PK_EX_InternalTransfers', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Index [dbo].[EX_InternalTransfers].[IX_EX_InternalTransfers_BranchID]...';


GO
CREATE NONCLUSTERED INDEX [IX_EX_InternalTransfers_BranchID]
    ON [dbo].[EX_InternalTransfers]([BranchID] ASC);


GO
PRINT N'Creating Index [dbo].[EX_InternalTransfers].[IX_EX_InternalTransfers_TreasuryId]...';


GO
CREATE NONCLUSTERED INDEX [IX_EX_InternalTransfers_TreasuryId]
    ON [dbo].[EX_InternalTransfers]([TreasuryId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[EX_InternalTransfersDetails]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EX_InternalTransfersDetails] (
    [TransferDetailID]   INT             IDENTITY (1, 1) NOT NULL,
    [TransferID]         INT             NOT NULL,
    [CurrencyID]         INT             NOT NULL,
    [TransferTime]       DATETIME        NOT NULL,
    [TransferAmount]     DECIMAL (18, 2) NOT NULL,
    [TransferType]       INT             CONSTRAINT [DF_EX_InternalTransfersDetails_TransferType] DEFAULT ((1)) NOT NULL,
    [TransferWithUserID] INT             NULL,
    [TransferRemarks]    NVARCHAR (200)  NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_EX_InternalTransfers_Details1] PRIMARY KEY CLUSTERED ([TransferDetailID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EX_InternalTransfersDetails])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_InternalTransfersDetails] ON;
        INSERT INTO [dbo].[tmp_ms_xx_EX_InternalTransfersDetails] ([TransferDetailID], [TransferID], [CurrencyID], [TransferTime], [TransferAmount], [TransferType], [TransferWithUserID], [TransferRemarks])
        SELECT   [TransferDetailID],
                 [TransferID],
                 [CurrencyID],
                 [TransferTime],
                 [TransferAmount],
                 [TransferType],
                 [TransferWithUserID],
                 [TransferRemarks]
        FROM     [dbo].[EX_InternalTransfersDetails]
        ORDER BY [TransferDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_InternalTransfersDetails] OFF;
    END

DROP TABLE [dbo].[EX_InternalTransfersDetails];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EX_InternalTransfersDetails]', N'EX_InternalTransfersDetails';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_EX_InternalTransfers_Details1]', N'PK_EX_InternalTransfers_Details', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[EX_Invoices]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EX_Invoices] (
    [InvoiceID]            INT             IDENTITY (1, 1) NOT NULL,
    [InvoiceNo]            INT             NOT NULL,
    [InvoiceDate]          DATETIME        NOT NULL,
    [InvoiceTime]          DATETIME        NOT NULL,
    [InvoiceTypeID]        INT             NOT NULL,
    [ClientID]             INT             NULL,
    [PaymentMethod]        INT             NOT NULL,
    [BankID]               INT             NULL,
    [Commission]           DECIMAL (18, 2) NOT NULL,
    [Paid]                 DECIMAL (18, 2) NOT NULL,
    [Remain]               DECIMAL (18, 2) NOT NULL,
    [StatusID]             INT             CONSTRAINT [DF_EX_Invoices_PostedAsJV] DEFAULT ((1)) NOT NULL,
    [InternalTransferID]   INT             NULL,
    [AvTaxPercentage]      DECIMAL (18, 2) CONSTRAINT [DF_EX_Invoices_AvTaxPercentage] DEFAULT ((0)) NOT NULL,
    [AvTaxAmount]          DECIMAL (18, 2) CONSTRAINT [DF_EX_Invoices_AvTaxAmount] DEFAULT ((0)) NOT NULL,
    [PurposeOfExchange]    NVARCHAR (100)  NULL,
    [Remarks]              NVARCHAR (200)  NULL,
    [FormingStatusIDs]     NVARCHAR (10)   CONSTRAINT [DF_EX_Invoices_FormingStatusID] DEFAULT ((1)) NOT NULL,
    [FormingResponsibleID] INT             NULL,
    [IsPOS]                BIT             NOT NULL,
    [BranchID]             INT             CONSTRAINT [DF__EX_Invoic__Branc__7948ECA7] DEFAULT ((1)) NULL,
    [UserId]               INT             CONSTRAINT [DF__EX_Invoic__UserI__5011CCEA] DEFAULT ((0)) NULL,
    [TreasuryId]           INT             NULL,
    [IsPendingWorkflow]    BIT             NULL,
    [IsDeleted]            BIT             DEFAULT (CONVERT (BIT, (0))) NOT NULL,
    [PaidCash]             DECIMAL (18, 2) NULL,
    [PaidCheck]            DECIMAL (18, 2) NULL,
    [PaidCheckNo]          NVARCHAR (MAX)  NULL,
    [PaidUnderAccount]     DECIMAL (18, 2) NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_EX_Invoices1] PRIMARY KEY CLUSTERED ([InvoiceID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EX_Invoices])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_Invoices] ON;
        INSERT INTO [dbo].[tmp_ms_xx_EX_Invoices] ([InvoiceID], [InvoiceNo], [InvoiceDate], [InvoiceTime], [InvoiceTypeID], [ClientID], [PaymentMethod], [BankID], [Commission], [Paid], [Remain], [StatusID], [InternalTransferID], [AvTaxPercentage], [AvTaxAmount], [PurposeOfExchange], [Remarks], [FormingStatusIDs], [FormingResponsibleID], [IsPOS])
        SELECT   [InvoiceID],
                 [InvoiceNo],
                 [InvoiceDate],
                 [InvoiceTime],
                 [InvoiceTypeID],
                 [ClientID],
                 [PaymentMethod],
                 [BankID],
                 [Commission],
                 [Paid],
                 [Remain],
                 [StatusID],
                 [InternalTransferID],
                 [AvTaxPercentage],
                 [AvTaxAmount],
                 [PurposeOfExchange],
                 [Remarks],
                 [FormingStatusIDs],
                 [FormingResponsibleID],
                 [IsPOS]
        FROM     [dbo].[EX_Invoices]
        ORDER BY [InvoiceID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_Invoices] OFF;
    END

DROP TABLE [dbo].[EX_Invoices];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EX_Invoices]', N'EX_Invoices';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_EX_Invoices1]', N'PK_EX_Invoices', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Index [dbo].[EX_Invoices].[IX_EX_Invoices_01]...';


GO
CREATE NONCLUSTERED INDEX [IX_EX_Invoices_01]
    ON [dbo].[EX_Invoices]([InvoiceTypeID] ASC, [PaymentMethod] ASC, [InternalTransferID] ASC, [InvoiceTime] ASC)
    INCLUDE([Paid], [Remain], [StatusID]);


GO
PRINT N'Creating Index [dbo].[EX_Invoices].[IX_EX_Invoices_02]...';


GO
CREATE NONCLUSTERED INDEX [IX_EX_Invoices_02]
    ON [dbo].[EX_Invoices]([InvoiceTime] ASC, [StatusID] ASC)
    INCLUDE([Commission], [InternalTransferID]);


GO
PRINT N'Creating Index [dbo].[EX_Invoices].[IX_EX_Invoices_03]...';


GO
CREATE NONCLUSTERED INDEX [IX_EX_Invoices_03]
    ON [dbo].[EX_Invoices]([InternalTransferID] ASC, [StatusID] ASC)
    INCLUDE([Commission]);


GO
PRINT N'Creating Index [dbo].[EX_Invoices].[IX_EX_Invoices_04]...';


GO
CREATE NONCLUSTERED INDEX [IX_EX_Invoices_04]
    ON [dbo].[EX_Invoices]([InvoiceTypeID] ASC, [InternalTransferID] ASC, [StatusID] ASC)
    INCLUDE([InvoiceID]);


GO
PRINT N'Creating Index [dbo].[EX_Invoices].[IX_EX_Invoices_05]...';


GO
CREATE NONCLUSTERED INDEX [IX_EX_Invoices_05]
    ON [dbo].[EX_Invoices]([InvoiceTypeID] ASC, [InvoiceTime] ASC, [StatusID] ASC)
    INCLUDE([InvoiceID], [InternalTransferID]);


GO
PRINT N'Creating Index [dbo].[EX_Invoices].[UQ_EX_Invoices_InvoiceNo]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [UQ_EX_Invoices_InvoiceNo]
    ON [dbo].[EX_Invoices]([InvoiceNo] ASC, [InvoiceDate] ASC);


GO
PRINT N'Creating Index [dbo].[EX_Invoices].[IX_EX_Invoices_TreasuryId]...';


GO
CREATE NONCLUSTERED INDEX [IX_EX_Invoices_TreasuryId]
    ON [dbo].[EX_Invoices]([TreasuryId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[EX_InvoicesDetails]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EX_InvoicesDetails] (
    [InvoiceDetailID] INT              IDENTITY (1, 1) NOT NULL,
    [InvoiceID]       INT              NOT NULL,
    [CurrencyID]      INT              NOT NULL,
    [Amount]          DECIMAL (18, 2)  NOT NULL,
    [ExRate]          DECIMAL (18, 14) NOT NULL,
    [IsDeleted]       BIT              DEFAULT (CONVERT (BIT, (0))) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_EX_InvoicesDetails1] PRIMARY KEY CLUSTERED ([InvoiceDetailID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EX_InvoicesDetails])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_InvoicesDetails] ON;
        INSERT INTO [dbo].[tmp_ms_xx_EX_InvoicesDetails] ([InvoiceDetailID], [InvoiceID], [CurrencyID], [Amount], [ExRate])
        SELECT   [InvoiceDetailID],
                 [InvoiceID],
                 [CurrencyID],
                 [Amount],
                 [ExRate]
        FROM     [dbo].[EX_InvoicesDetails]
        ORDER BY [InvoiceDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_InvoicesDetails] OFF;
    END

DROP TABLE [dbo].[EX_InvoicesDetails];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EX_InvoicesDetails]', N'EX_InvoicesDetails';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_EX_InvoicesDetails1]', N'PK_EX_InvoicesDetails', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Index [dbo].[EX_InvoicesDetails].[IX_EX_InvoicesDetails_00]...';


GO
CREATE NONCLUSTERED INDEX [IX_EX_InvoicesDetails_00]
    ON [dbo].[EX_InvoicesDetails]([CurrencyID] ASC)
    INCLUDE([InvoiceID], [Amount]);


GO
PRINT N'Starting rebuilding table [dbo].[EX_LocallyWanted]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EX_LocallyWanted] (
    [LocallyWantedID] INT            IDENTITY (1, 1) NOT NULL,
    [Name]            NVARCHAR (100) NOT NULL,
    [NID]             NVARCHAR (20)  NULL,
    [IsDeleted]       BIT            DEFAULT (CONVERT (BIT, (0))) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_EX_LocallyWanted1] PRIMARY KEY CLUSTERED ([LocallyWantedID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UQ_EX_LocallyWanted_Name1] UNIQUE NONCLUSTERED ([Name] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EX_LocallyWanted])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_LocallyWanted] ON;
        INSERT INTO [dbo].[tmp_ms_xx_EX_LocallyWanted] ([LocallyWantedID], [Name], [NID])
        SELECT   [LocallyWantedID],
                 [Name],
                 [NID]
        FROM     [dbo].[EX_LocallyWanted]
        ORDER BY [LocallyWantedID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_LocallyWanted] OFF;
    END

DROP TABLE [dbo].[EX_LocallyWanted];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EX_LocallyWanted]', N'EX_LocallyWanted';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_EX_LocallyWanted1]', N'PK_EX_LocallyWanted', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UQ_EX_LocallyWanted_Name1]', N'UQ_EX_LocallyWanted_Name', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[EX_Suppliers]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EX_Suppliers] (
    [SupplierID]         INT             IDENTITY (1, 1) NOT NULL,
    [SupplierCode]       INT             NOT NULL,
    [SupplierNameEn]     NVARCHAR (100)  NULL,
    [SupplierNameAr]     NVARCHAR (100)  NULL,
    [Phone]              NVARCHAR (20)   NULL,
    [Fax]                NVARCHAR (20)   NULL,
    [Email]              NVARCHAR (200)  NULL,
    [SupplierTypeID]     INT             NULL,
    [CountryID]          INT             NULL,
    [BankAccount]        NVARCHAR (200)  NULL,
    [CurrencyID]         INT             NOT NULL,
    [CurrencyExRate]     DECIMAL (18, 8) CONSTRAINT [DF_EX_Suppliers_CurrencyExRate] DEFAULT ((0)) NOT NULL,
    [AccountID]          INT             NULL,
    [CRNumber]           NVARCHAR (10)   NULL,
    [CRExpiredDate]      DATETIME        NULL,
    [UnifiedNumber]      NVARCHAR (10)   NULL,
    [LicenseNo]          NVARCHAR (10)   NULL,
    [LicenseExpiredDate] DATETIME        NULL,
    [CreditLimit]        DECIMAL (18, 2) NULL,
    [BranchID]           INT             NULL,
    [IsMainBranch]       BIT             CONSTRAINT [DF_EX_Suppliers_IsMainBranch] DEFAULT ((0)) NOT NULL,
    [IsDeleted]          BIT             CONSTRAINT [DF__EX_Suppli__IsDel__3CFEF876] DEFAULT (CONVERT (BIT, (0))) NOT NULL,
    [BranchID1]          INT             NULL,
    [Sector]             NVARCHAR (MAX)  NULL,
    [ClientActivityID]   INT             NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_EX_Suppliers1] PRIMARY KEY CLUSTERED ([SupplierID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EX_Suppliers])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_Suppliers] ON;
        INSERT INTO [dbo].[tmp_ms_xx_EX_Suppliers] ([SupplierID], [SupplierCode], [SupplierNameEn], [SupplierNameAr], [Phone], [Fax], [Email], [SupplierTypeID], [CountryID], [BankAccount], [CurrencyID], [CurrencyExRate], [AccountID], [CRNumber], [CRExpiredDate], [UnifiedNumber], [LicenseNo], [LicenseExpiredDate], [CreditLimit], [BranchID], [IsMainBranch])
        SELECT   [SupplierID],
                 [SupplierCode],
                 [SupplierNameEn],
                 [SupplierNameAr],
                 [Phone],
                 [Fax],
                 [Email],
                 [SupplierTypeID],
                 [CountryID],
                 [BankAccount],
                 [CurrencyID],
                 [CurrencyExRate],
                 [AccountID],
                 [CRNumber],
                 [CRExpiredDate],
                 [UnifiedNumber],
                 [LicenseNo],
                 [LicenseExpiredDate],
                 [CreditLimit],
                 [BranchID],
                 [IsMainBranch]
        FROM     [dbo].[EX_Suppliers]
        ORDER BY [SupplierID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_Suppliers] OFF;
    END

DROP TABLE [dbo].[EX_Suppliers];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EX_Suppliers]', N'EX_Suppliers';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_EX_Suppliers1]', N'PK_EX_Suppliers', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[EX_WholeInvoices]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EX_WholeInvoices] (
    [InvoiceID]              INT             IDENTITY (1, 1) NOT NULL,
    [InvoiceNo]              INT             NOT NULL,
    [InvoiceDate]            DATETIME        NOT NULL,
    [InvoiceTime]            DATETIME        NOT NULL,
    [InvoiceTypeID]          INT             NOT NULL,
    [SupplierID]             INT             NOT NULL,
    [SupplierCurrencyID]     INT             NOT NULL,
    [SupplierCurrencyExRate] DECIMAL (18, 8) NOT NULL,
    [PaymentMethod]          INT             NOT NULL,
    [BankID]                 INT             NULL,
    [Receptionist]           NVARCHAR (100)  NULL,
    [Remarks]                NVARCHAR (200)  NULL,
    [Paid]                   DECIMAL (18, 2) NOT NULL,
    [Remain]                 DECIMAL (18, 2) NOT NULL,
    [StatusID]               INT             CONSTRAINT [DF_EX_WholeInvoices_Posted] DEFAULT ((1)) NOT NULL,
    [IsNotified]             BIT             CONSTRAINT [DF_EX_WholeInvoices_IsNotified] DEFAULT ((0)) NOT NULL,
    [UpdatedCount]           INT             CONSTRAINT [DF_EX_WholeInvoices_UpdatedCount] DEFAULT ((0)) NOT NULL,
    [AvTaxPercentage]        DECIMAL (18, 2) CONSTRAINT [DF_EX_WholeInvoices_AvTaxPercentage] DEFAULT ((0)) NOT NULL,
    [AvTaxAmount]            DECIMAL (18, 2) CONSTRAINT [DF_EX_WholeInvoices_AvTaxAmount] DEFAULT ((0)) NOT NULL,
    [BranchID]               INT             CONSTRAINT [DF__EX_WholeI__Branc__7854C86E] DEFAULT ((1)) NULL,
    [UserId]                 INT             CONSTRAINT [DF__EX_WholeI__UserI__4F1DA8B1] DEFAULT ((0)) NULL,
    [TreasuryId]             INT             NULL,
    [IsPendingWorkflow]      BIT             NULL,
    [IsDeleted]              BIT             DEFAULT (CONVERT (BIT, (0))) NOT NULL,
    [PaidCash]               DECIMAL (18, 2) NULL,
    [PaidCheck]              DECIMAL (18, 2) NULL,
    [PaidCheckNo]            NVARCHAR (MAX)  NULL,
    [PaidUnderAccount]       DECIMAL (18, 2) NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_EX_WholeInvoices1] PRIMARY KEY CLUSTERED ([InvoiceID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EX_WholeInvoices])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_WholeInvoices] ON;
        INSERT INTO [dbo].[tmp_ms_xx_EX_WholeInvoices] ([InvoiceID], [InvoiceNo], [InvoiceDate], [InvoiceTime], [InvoiceTypeID], [SupplierID], [SupplierCurrencyID], [SupplierCurrencyExRate], [PaymentMethod], [BankID], [Receptionist], [Remarks], [Paid], [Remain], [StatusID], [IsNotified], [UpdatedCount], [AvTaxPercentage], [AvTaxAmount])
        SELECT   [InvoiceID],
                 [InvoiceNo],
                 [InvoiceDate],
                 [InvoiceTime],
                 [InvoiceTypeID],
                 [SupplierID],
                 [SupplierCurrencyID],
                 [SupplierCurrencyExRate],
                 [PaymentMethod],
                 [BankID],
                 [Receptionist],
                 [Remarks],
                 [Paid],
                 [Remain],
                 [StatusID],
                 [IsNotified],
                 [UpdatedCount],
                 [AvTaxPercentage],
                 [AvTaxAmount]
        FROM     [dbo].[EX_WholeInvoices]
        ORDER BY [InvoiceID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_WholeInvoices] OFF;
    END

DROP TABLE [dbo].[EX_WholeInvoices];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EX_WholeInvoices]', N'EX_WholeInvoices';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_EX_WholeInvoices1]', N'PK_EX_WholeInvoices', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Index [dbo].[EX_WholeInvoices].[UQ_EX_WholeInvoices_InvoiceNo]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [UQ_EX_WholeInvoices_InvoiceNo]
    ON [dbo].[EX_WholeInvoices]([InvoiceDate] ASC, [InvoiceNo] ASC);


GO
PRINT N'Creating Index [dbo].[EX_WholeInvoices].[UQ_EX_WholeInvoices_PaidRemain]...';


GO
CREATE NONCLUSTERED INDEX [UQ_EX_WholeInvoices_PaidRemain]
    ON [dbo].[EX_WholeInvoices]([InvoiceTypeID] ASC, [PaymentMethod] ASC, [InvoiceTime] ASC, [StatusID] ASC)
    INCLUDE([Paid], [Remain]);


GO
PRINT N'Creating Index [dbo].[EX_WholeInvoices].[IX_EX_WholeInvoices_TreasuryId]...';


GO
CREATE NONCLUSTERED INDEX [IX_EX_WholeInvoices_TreasuryId]
    ON [dbo].[EX_WholeInvoices]([TreasuryId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[EX_WholeInvoicesDetails]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EX_WholeInvoicesDetails] (
    [InvoiceDetailID] INT              IDENTITY (1, 1) NOT NULL,
    [InvoiceID]       INT              NOT NULL,
    [CurrencyID]      INT              NOT NULL,
    [Amount]          DECIMAL (18, 2)  NOT NULL,
    [SupplierExRate]  DECIMAL (18, 14) NOT NULL,
    [SystemExRate]    DECIMAL (18, 8)  NOT NULL,
    [IsDeleted]       BIT              DEFAULT (CONVERT (BIT, (0))) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_EX_WholeInvoices_Details1] PRIMARY KEY CLUSTERED ([InvoiceDetailID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EX_WholeInvoicesDetails])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_WholeInvoicesDetails] ON;
        INSERT INTO [dbo].[tmp_ms_xx_EX_WholeInvoicesDetails] ([InvoiceDetailID], [InvoiceID], [CurrencyID], [Amount], [SupplierExRate], [SystemExRate])
        SELECT   [InvoiceDetailID],
                 [InvoiceID],
                 [CurrencyID],
                 [Amount],
                 [SupplierExRate],
                 [SystemExRate]
        FROM     [dbo].[EX_WholeInvoicesDetails]
        ORDER BY [InvoiceDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EX_WholeInvoicesDetails] OFF;
    END

DROP TABLE [dbo].[EX_WholeInvoicesDetails];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EX_WholeInvoicesDetails]', N'EX_WholeInvoicesDetails';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_EX_WholeInvoices_Details1]', N'PK_EX_WholeInvoices_Details', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Index [dbo].[EX_WholeInvoicesDetails].[UQ_EX_WholeInvoices_Amount]...';


GO
CREATE NONCLUSTERED INDEX [UQ_EX_WholeInvoices_Amount]
    ON [dbo].[EX_WholeInvoicesDetails]([CurrencyID] ASC)
    INCLUDE([InvoiceID], [Amount]);


GO
PRINT N'Starting rebuilding table [dbo].[ISIL_List]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ISIL_List] (
    [ID]          INT            IDENTITY (1, 1) NOT NULL,
    [UID]         INT            NOT NULL,
    [FullName]    NVARCHAR (200) NOT NULL,
    [AliasName]   NVARCHAR (200) NOT NULL,
    [Nationality] NVARCHAR (200) NULL,
    [Address]     NVARCHAR (200) NULL,
    [IsDeleted]   BIT            DEFAULT (CONVERT (BIT, (0))) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ISIL_List1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ISIL_List])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ISIL_List] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ISIL_List] ([ID], [UID], [FullName], [AliasName], [Nationality], [Address])
        SELECT   [ID],
                 [UID],
                 [FullName],
                 [AliasName],
                 [Nationality],
                 [Address]
        FROM     [dbo].[ISIL_List]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ISIL_List] OFF;
    END

DROP TABLE [dbo].[ISIL_List];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ISIL_List]', N'ISIL_List';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ISIL_List1]', N'PK_ISIL_List', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Sec_FormsFunctions]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Sec_FormsFunctions] (
    [FormFunctionID] INT IDENTITY (1, 1) NOT NULL,
    [FormID]         INT NOT NULL,
    [FunctionID]     INT NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Sec_FormsFunctions1] PRIMARY KEY CLUSTERED ([FormFunctionID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UQ_Sec_FormsFunctions1] UNIQUE NONCLUSTERED ([FormID] ASC, [FunctionID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Sec_FormsFunctions])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Sec_FormsFunctions] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Sec_FormsFunctions] ([FormFunctionID], [FormID], [FunctionID])
        SELECT   [FormFunctionID],
                 [FormID],
                 [FunctionID]
        FROM     [dbo].[Sec_FormsFunctions]
        ORDER BY [FormFunctionID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Sec_FormsFunctions] OFF;
    END

DROP TABLE [dbo].[Sec_FormsFunctions];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Sec_FormsFunctions]', N'Sec_FormsFunctions';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Sec_FormsFunctions1]', N'PK_Sec_FormsFunctions', N'OBJECT';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UQ_Sec_FormsFunctions1]', N'UQ_Sec_FormsFunctions', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering Table [dbo].[Sec_Functions]...';


GO
ALTER TABLE [dbo].[Sec_Functions]
    ADD [HasTextValue] BIT DEFAULT (CONVERT (BIT, (0))) NOT NULL;


GO
PRINT N'Altering Table [dbo].[Sec_Users]...';


GO
ALTER TABLE [dbo].[Sec_Users]
    ADD [PermissionTypeId]    INT            NULL,
        [LastNotifcationDate] DATETIME2 (7)  NULL,
        [ImagePath]           NVARCHAR (MAX) NULL;


GO
PRINT N'Creating Index [dbo].[Sec_Users].[IX_Sec_Users_PermissionTypeId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Sec_Users_PermissionTypeId]
    ON [dbo].[Sec_Users]([PermissionTypeId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Sec_UsersForms]...';


--GO
--BEGIN TRANSACTION;

--SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

--SET XACT_ABORT ON;

--CREATE TABLE [dbo].[tmp_ms_xx_Sec_UsersForms] (
--    [ID]               INT NOT NULL,
--    [PermissionTypeId] INT NOT NULL,
--    [FormID]           INT NOT NULL,
--    [Selected]         BIT CONSTRAINT [DF_Sec_UsersForms_Selected] DEFAULT ((0)) NOT NULL,
--    [SecUserUserId]    INT NULL,
--    CONSTRAINT [tmp_ms_xx_constraint_PK_Sec_UsersForms1] PRIMARY KEY CLUSTERED ([ID] ASC),
--    CONSTRAINT [tmp_ms_xx_constraint_UQ_Sec_UsersForms1] UNIQUE NONCLUSTERED ([PermissionTypeId] ASC, [FormID] ASC)
--);

--IF EXISTS (SELECT TOP 1 1 
--           FROM   [dbo].[Sec_UsersForms])
--    BEGIN
--        INSERT INTO [dbo].[tmp_ms_xx_Sec_UsersForms] ([ID], [FormID], [Selected])
--        SELECT   [ID],
--                 [FormID],
--                 [Selected]
--        FROM     [dbo].[Sec_UsersForms]
--        ORDER BY [ID] ASC;
--    END

--DROP TABLE [dbo].[Sec_UsersForms];

--EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Sec_UsersForms]', N'Sec_UsersForms';

--EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Sec_UsersForms1]', N'PK_Sec_UsersForms', N'OBJECT';

--EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UQ_Sec_UsersForms1]', N'UQ_Sec_UsersForms', N'OBJECT';

--COMMIT TRANSACTION;

--SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
--PRINT N'Creating Index [dbo].[Sec_UsersForms].[IX_Sec_UsersForms_SecUserUserId]...';


GO
--CREATE NONCLUSTERED INDEX [IX_Sec_UsersForms_SecUserUserId]
--    ON [dbo].[Sec_UsersForms]([SecUserUserId] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Sec_UsersFunctions]...';


GO
--BEGIN TRANSACTION;

--SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

--SET XACT_ABORT ON;

--CREATE TABLE [dbo].[tmp_ms_xx_Sec_UsersFunctions] (
--    [ID]               INT            NOT NULL,
--    [PermissionTypeId] INT            NOT NULL,
--    [FormFunctionID]   INT            NOT NULL,
--    [Selected]         BIT            CONSTRAINT [DF_Sec_UsersFunctions_Selected] DEFAULT ((0)) NOT NULL,
--    [SecUserUserId]    INT            NULL,
--    [FunValue]         NVARCHAR (MAX) NULL,
--    CONSTRAINT [tmp_ms_xx_constraint_PK_Sec_UsersFunctions1] PRIMARY KEY CLUSTERED ([ID] ASC),
--    CONSTRAINT [tmp_ms_xx_constraint_UQ_Sec_UsersFunctions1] UNIQUE NONCLUSTERED ([PermissionTypeId] ASC, [FormFunctionID] ASC)
--);

--IF EXISTS (SELECT TOP 1 1 
--           FROM   [dbo].[Sec_UsersFunctions])
--    BEGIN
--        INSERT INTO [dbo].[tmp_ms_xx_Sec_UsersFunctions] ([ID], [FormFunctionID], [Selected])
--        SELECT   [ID],
--                 [FormFunctionID],
--                 [Selected]
--        FROM     [dbo].[Sec_UsersFunctions]
--        ORDER BY [ID] ASC;
--    END

--DROP TABLE [dbo].[Sec_UsersFunctions];

--EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Sec_UsersFunctions]', N'Sec_UsersFunctions';

--EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Sec_UsersFunctions1]', N'PK_Sec_UsersFunctions', N'OBJECT';

--EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_UQ_Sec_UsersFunctions1]', N'UQ_Sec_UsersFunctions', N'OBJECT';

--COMMIT TRANSACTION;

--SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


--GO
--PRINT N'Creating Index [dbo].[Sec_UsersFunctions].[IX_Sec_UsersFunctions_SecUserUserId]...';


--GO
--CREATE NONCLUSTERED INDEX [IX_Sec_UsersFunctions_SecUserUserId]
--    ON [dbo].[Sec_UsersFunctions]([SecUserUserId] ASC);


GO
PRINT N'Creating Table [dbo].[__EFMigrationsHistory]...';


GO
CREATE TABLE [dbo].[__EFMigrationsHistory] (
    [MigrationId]    NVARCHAR (150) NOT NULL,
    [ProductVersion] NVARCHAR (32)  NOT NULL,
    CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY CLUSTERED ([MigrationId] ASC)
);


GO
PRINT N'Creating Table [dbo].[ACostCenter]...';


GO
CREATE TABLE [dbo].[ACostCenter] (
    [CostCenterId]        INT            IDENTITY (1, 1) NOT NULL,
    [ParentId]            INT            NULL,
    [CostCode]            INT            NOT NULL,
    [CostName]            NVARCHAR (MAX) NULL,
    [CostLevel]           INT            NOT NULL,
    [CurrencyId]          INT            NULL,
    [HasDetailedAccounts] BIT            NULL,
    CONSTRAINT [PK_ACostCenter] PRIMARY KEY CLUSTERED ([CostCenterId] ASC)
);


GO
PRINT N'Creating Table [dbo].[ActivationKeys]...';


GO
CREATE TABLE [dbo].[ActivationKeys] (
    [ActivationKeyId] INT            IDENTITY (1, 1) NOT NULL,
    [key]             NVARCHAR (MAX) NULL,
    [date]            DATETIME2 (7)  NOT NULL,
    CONSTRAINT [PK_ActivationKeys] PRIMARY KEY CLUSTERED ([ActivationKeyId] ASC)
);


GO
PRINT N'Creating Table [dbo].[AJvAccountSetting]...';


GO
CREATE TABLE [dbo].[AJvAccountSetting] (
    [AJvAccountSettingId] INT            IDENTITY (1, 1) NOT NULL,
    [AccountName]         NVARCHAR (MAX) NULL,
    [AccountId]           NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_AJvAccountSetting] PRIMARY KEY CLUSTERED ([AJvAccountSettingId] ASC)
);


GO
PRINT N'Creating Table [dbo].[BankAccount]...';


GO
CREATE TABLE [dbo].[BankAccount] (
    [BankAccountId]    BIGINT          IDENTITY (1, 1) NOT NULL,
    [BankId]           INT             NOT NULL,
    [CurrencyId]       INT             NOT NULL,
    [NameEn]           NVARCHAR (MAX)  NULL,
    [NameAr]           NVARCHAR (MAX)  NULL,
    [Accountnumber]    NVARCHAR (MAX)  NULL,
    [OppenningBalance] DECIMAL (18, 2) NOT NULL,
    [Note]             NVARCHAR (MAX)  NULL,
    [Date]             DATETIME2 (7)   NULL,
    [IsDeleted]        BIT             NOT NULL,
    CONSTRAINT [PK_BankAccount] PRIMARY KEY CLUSTERED ([BankAccountId] ASC)
);


GO
PRINT N'Creating Index [dbo].[BankAccount].[IX_BankAccount_BankId]...';


GO
CREATE NONCLUSTERED INDEX [IX_BankAccount_BankId]
    ON [dbo].[BankAccount]([BankId] ASC);


GO
PRINT N'Creating Index [dbo].[BankAccount].[IX_BankAccount_CurrencyId]...';


GO
CREATE NONCLUSTERED INDEX [IX_BankAccount_CurrencyId]
    ON [dbo].[BankAccount]([CurrencyId] ASC);


GO
PRINT N'Creating Table [dbo].[BanksBvr]...';


GO
CREATE TABLE [dbo].[BanksBvr] (
    [BanksBvrId]     BIGINT          IDENTITY (1, 1) NOT NULL,
    [BankAccountId]  BIGINT          NOT NULL,
    [ActionType]     NVARCHAR (MAX)  NULL,
    [ActionId]       INT             NOT NULL,
    [ActionDetailId] INT             NOT NULL,
    [ActionTime]     DATETIME        NULL,
    [Amount]         DECIMAL (18, 2) NOT NULL,
    [Balance]        DECIMAL (18, 2) NOT NULL,
    CONSTRAINT [PK_BanksBvr] PRIMARY KEY CLUSTERED ([BanksBvrId] ASC)
);


GO
PRINT N'Creating Index [dbo].[BanksBvr].[IX_BanksBvr_BankAccountId]...';


GO
CREATE NONCLUSTERED INDEX [IX_BanksBvr_BankAccountId]
    ON [dbo].[BanksBvr]([BankAccountId] ASC);


GO
PRINT N'Creating Table [dbo].[BanksTransfere]...';


GO
CREATE TABLE [dbo].[BanksTransfere] (
    [BanksTransfereId]  BIGINT          IDENTITY (1, 1) NOT NULL,
    [FromBankAccountId] BIGINT          NOT NULL,
    [ToBankAccountId]   BIGINT          NOT NULL,
    [Amount]            DECIMAL (18, 2) NOT NULL,
    [Note]              NVARCHAR (MAX)  NULL,
    [Date]              DATETIME2 (7)   NULL,
    [IsDeleted]         BIT             NOT NULL,
    [UserId]            INT             NULL,
    CONSTRAINT [PK_BanksTransfere] PRIMARY KEY CLUSTERED ([BanksTransfereId] ASC)
);


GO
PRINT N'Creating Table [dbo].[BanksTreasuryTransfere]...';


GO
CREATE TABLE [dbo].[BanksTreasuryTransfere] (
    [BanksTreasuryTransfereId] BIGINT          IDENTITY (1, 1) NOT NULL,
    [BankAccountId]            BIGINT          NOT NULL,
    [CurrencyId]               INT             NOT NULL,
    [TreasuryId]               INT             NOT NULL,
    [Type]                     INT             NOT NULL,
    [Amount]                   DECIMAL (18, 2) NOT NULL,
    [Note]                     NVARCHAR (MAX)  NULL,
    [Date]                     DATETIME2 (7)   NULL,
    [IsDeleted]                BIT             NOT NULL,
    [UserId]                   INT             NULL,
    CONSTRAINT [PK_BanksTreasuryTransfere] PRIMARY KEY CLUSTERED ([BanksTreasuryTransfereId] ASC)
);


GO
PRINT N'Creating Index [dbo].[BanksTreasuryTransfere].[IX_BanksTreasuryTransfere_CurrencyId]...';


GO
CREATE NONCLUSTERED INDEX [IX_BanksTreasuryTransfere_CurrencyId]
    ON [dbo].[BanksTreasuryTransfere]([CurrencyId] ASC);


GO
PRINT N'Creating Table [dbo].[ClientActivities]...';


GO
CREATE TABLE [dbo].[ClientActivities] (
    [ClientActivityID] INT            IDENTITY (1, 1) NOT NULL,
    [ActivityNameAr]   NVARCHAR (MAX) NULL,
    [ActivityNameEn]   NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_ClientActivities] PRIMARY KEY CLUSTERED ([ClientActivityID] ASC)
);


GO
PRINT N'Creating Table [dbo].[ClientSecurityFile]...';


GO
CREATE TABLE [dbo].[ClientSecurityFile] (
    [ClientSecId] BIGINT         IDENTITY (1, 1) NOT NULL,
    [IsDeleted]   BIT            NOT NULL,
    [Name]        NVARCHAR (MAX) NULL,
    [NatId]       NVARCHAR (MAX) NULL,
    [Country]     NVARCHAR (MAX) NULL,
    [Add1]        NVARCHAR (MAX) NULL,
    [Add2]        NVARCHAR (MAX) NULL,
    [Add3]        NVARCHAR (MAX) NULL,
    [Add4]        NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_ClientSecurityFile] PRIMARY KEY CLUSTERED ([ClientSecId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Currencies]...';


GO
CREATE TABLE [dbo].[Currencies] (
    [CurrencyID]          INT              NOT NULL,
    [CurrencyCode]        INT              NOT NULL,
    [CurrencyNameEn]      NVARCHAR (50)    NULL,
    [CurrencyNameAr]      NVARCHAR (50)    NULL,
    [Sign]                NVARCHAR (4)     NOT NULL,
    [SalePrice]           DECIMAL (18, 14) NOT NULL,
    [BuyPrice]            DECIMAL (18, 14) NOT NULL,
    [ValuationPrice]      DECIMAL (18, 14) NOT NULL,
    [IsActive]            BIT              NOT NULL,
    [OpeningBalance]      DECIMAL (18, 2)  NOT NULL,
    [OpeningPrice]        DECIMAL (18, 14) NOT NULL,
    [ShowInPricesScreen]  BIT              NOT NULL,
    [IsDefault]           BIT              NULL,
    [IsDeleted]           BIT              NOT NULL,
    [BranchID]            INT              NULL,
    [TreasuryId]          INT              NOT NULL,
    [OpenningBalanceDate] DATETIME2 (7)    NULL,
    CONSTRAINT [PK_Ex_Currencies] PRIMARY KEY CLUSTERED ([CurrencyID] ASC)
);


GO
PRINT N'Creating Index [dbo].[Currencies].[IX_EX_Currencies]...';


GO
CREATE NONCLUSTERED INDEX [IX_EX_Currencies]
    ON [dbo].[Currencies]([CurrencyID] ASC);


GO
PRINT N'Creating Index [dbo].[Currencies].[IX_Currencies_TreasuryId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Currencies_TreasuryId]
    ON [dbo].[Currencies]([TreasuryId] ASC);


GO
PRINT N'Creating Table [dbo].[CurrencyBase]...';


GO
CREATE TABLE [dbo].[CurrencyBase] (
    [Id]             BIGINT         IDENTITY (1, 1) NOT NULL,
    [IsDeleted]      BIT            NOT NULL,
    [CurrencyCode]   INT            NOT NULL,
    [CurrencyNameEn] NVARCHAR (MAX) NULL,
    [CurrencyNameAr] NVARCHAR (MAX) NULL,
    [Sign]           NVARCHAR (MAX) NULL,
    [CountryId]      INT            NULL,
    CONSTRAINT [PK_CurrencyBase] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Index [dbo].[CurrencyBase].[IX_CurrencyBase_CountryId]...';


GO
CREATE NONCLUSTERED INDEX [IX_CurrencyBase_CountryId]
    ON [dbo].[CurrencyBase]([CountryId] ASC);


GO
PRINT N'Creating Table [dbo].[EX_Countries]...';


GO
CREATE TABLE [dbo].[EX_Countries] (
    [CountryID]     INT             NOT NULL,
    [CountryNameEn] NVARCHAR (100)  NULL,
    [CountryNameAr] NVARCHAR (100)  NULL,
    [SeverityID]    INT             NOT NULL,
    [IsActve]       INT             NOT NULL,
    [IsDeleted]     BIT             NOT NULL,
    [OutLimit]      DECIMAL (18, 2) NULL,
    CONSTRAINT [PK_Country] PRIMARY KEY CLUSTERED ([CountryID] ASC)
);


GO
PRINT N'Creating Table [dbo].[ExClientSectors]...';


GO
CREATE TABLE [dbo].[ExClientSectors] (
    [ClientSectorId]     INT            IDENTITY (1, 1) NOT NULL,
    [ClientSectorNameEn] NVARCHAR (MAX) NULL,
    [ClientSectorNameAr] NVARCHAR (MAX) NULL,
    [Desc]               NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_ExClientSectors] PRIMARY KEY CLUSTERED ([ClientSectorId] ASC)
);


GO
PRINT N'Creating Table [dbo].[ExClientsNote]...';


GO
CREATE TABLE [dbo].[ExClientsNote] (
    [Id]       BIGINT         IDENTITY (1, 1) NOT NULL,
    [ClientId] INT            NOT NULL,
    [NoteType] INT            NOT NULL,
    [Desc]     NVARCHAR (MAX) NULL,
    [NoteDate] DATETIME2 (7)  NULL,
    CONSTRAINT [PK_ExClientsNote] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Index [dbo].[ExClientsNote].[IX_ExClientsNote_ClientId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ExClientsNote_ClientId]
    ON [dbo].[ExClientsNote]([ClientId] ASC);


GO
PRINT N'Creating Table [dbo].[ExTaswya]...';


GO
CREATE TABLE [dbo].[ExTaswya] (
    [TransferId]          INT            IDENTITY (1, 1) NOT NULL,
    [BranchID]            INT            NULL,
    [UserId]              INT            NULL,
    [TreasuryId]          INT            NULL,
    [TransferNo]          INT            NOT NULL,
    [TransferDate]        DATETIME2 (7)  NOT NULL,
    [Remarks]             NVARCHAR (MAX) NULL,
    [Closed]              BIT            NOT NULL,
    [TransferClosingDate] DATETIME2 (7)  NULL,
    [StatusId]            INT            NULL,
    [IsDeleted]           BIT            NOT NULL,
    [IsPendingWorkflow]   BIT            NULL,
    CONSTRAINT [PK_ExTaswya] PRIMARY KEY CLUSTERED ([TransferId] ASC)
);


GO
PRINT N'Creating Index [dbo].[ExTaswya].[IX_ExTaswya_BranchID]...';


GO
CREATE NONCLUSTERED INDEX [IX_ExTaswya_BranchID]
    ON [dbo].[ExTaswya]([BranchID] ASC);


GO
PRINT N'Creating Index [dbo].[ExTaswya].[IX_ExTaswya_TreasuryId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ExTaswya_TreasuryId]
    ON [dbo].[ExTaswya]([TreasuryId] ASC);


GO
PRINT N'Creating Index [dbo].[ExTaswya].[IX_ExTaswya_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ExTaswya_UserId]
    ON [dbo].[ExTaswya]([UserId] ASC);


GO
PRINT N'Creating Table [dbo].[ExTaswyaDetail]...';


GO
CREATE TABLE [dbo].[ExTaswyaDetail] (
    [TransferDetailId]   INT             IDENTITY (1, 1) NOT NULL,
    [TransferId]         INT             NOT NULL,
    [CurrencyId]         INT             NOT NULL,
    [TransferTime]       DATETIME2 (7)   NOT NULL,
    [TransferAmount]     DECIMAL (18, 2) NOT NULL,
    [TransferType]       INT             NOT NULL,
    [TransferWithUserId] INT             NULL,
    [TransferRemarks]    NVARCHAR (MAX)  NULL,
    [IsDeleted]          BIT             NOT NULL,
    CONSTRAINT [PK_ExTaswyaDetail] PRIMARY KEY CLUSTERED ([TransferDetailId] ASC)
);


GO
PRINT N'Creating Index [dbo].[ExTaswyaDetail].[IX_ExTaswyaDetail_CurrencyId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ExTaswyaDetail_CurrencyId]
    ON [dbo].[ExTaswyaDetail]([CurrencyId] ASC);


GO
PRINT N'Creating Index [dbo].[ExTaswyaDetail].[IX_ExTaswyaDetail_TransferId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ExTaswyaDetail_TransferId]
    ON [dbo].[ExTaswyaDetail]([TransferId] ASC);


GO
PRINT N'Creating Table [dbo].[ExTreasuryTransfere]...';


GO
CREATE TABLE [dbo].[ExTreasuryTransfere] (
    [TransferId]          INT            IDENTITY (1, 1) NOT NULL,
    [FromBranchID]        INT            NULL,
    [FromTreasuryId]      INT            NULL,
    [ToBranchID]          INT            NULL,
    [ToTreasuryId]        INT            NULL,
    [UserId]              INT            NULL,
    [TransferNo]          INT            NOT NULL,
    [TransferDate]        DATETIME2 (7)  NOT NULL,
    [Remarks]             NVARCHAR (MAX) NULL,
    [Closed]              BIT            NOT NULL,
    [TransferClosingDate] DATETIME2 (7)  NULL,
    [StatusId]            INT            NULL,
    [IsPendingWorkflow]   BIT            NULL,
    [IsDeleted]           BIT            NOT NULL,
    CONSTRAINT [PK_ExTreasuryTransfere] PRIMARY KEY CLUSTERED ([TransferId] ASC)
);


GO
PRINT N'Creating Index [dbo].[ExTreasuryTransfere].[IX_ExTreasuryTransfere_FromBranchID]...';


GO
CREATE NONCLUSTERED INDEX [IX_ExTreasuryTransfere_FromBranchID]
    ON [dbo].[ExTreasuryTransfere]([FromBranchID] ASC);


GO
PRINT N'Creating Index [dbo].[ExTreasuryTransfere].[IX_ExTreasuryTransfere_FromTreasuryId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ExTreasuryTransfere_FromTreasuryId]
    ON [dbo].[ExTreasuryTransfere]([FromTreasuryId] ASC);


GO
PRINT N'Creating Index [dbo].[ExTreasuryTransfere].[IX_ExTreasuryTransfere_ToBranchID]...';


GO
CREATE NONCLUSTERED INDEX [IX_ExTreasuryTransfere_ToBranchID]
    ON [dbo].[ExTreasuryTransfere]([ToBranchID] ASC);


GO
PRINT N'Creating Index [dbo].[ExTreasuryTransfere].[IX_ExTreasuryTransfere_ToTreasuryId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ExTreasuryTransfere_ToTreasuryId]
    ON [dbo].[ExTreasuryTransfere]([ToTreasuryId] ASC);


GO
PRINT N'Creating Index [dbo].[ExTreasuryTransfere].[IX_ExTreasuryTransfere_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ExTreasuryTransfere_UserId]
    ON [dbo].[ExTreasuryTransfere]([UserId] ASC);


GO
PRINT N'Creating Table [dbo].[ExTreasuryTransfereDetail]...';


GO
CREATE TABLE [dbo].[ExTreasuryTransfereDetail] (
    [TransferDetailId]   INT             IDENTITY (1, 1) NOT NULL,
    [TransferId]         INT             NOT NULL,
    [CurrencyId]         INT             NOT NULL,
    [TransferTime]       DATETIME2 (7)   NOT NULL,
    [TransferAmount]     DECIMAL (18, 2) NOT NULL,
    [TransferType]       INT             NOT NULL,
    [TransferWithUserId] INT             NULL,
    [TransferRemarks]    NVARCHAR (MAX)  NULL,
    [IsDeleted]          BIT             NOT NULL,
    CONSTRAINT [PK_ExTreasuryTransfereDetail] PRIMARY KEY CLUSTERED ([TransferDetailId] ASC)
);


GO
PRINT N'Creating Index [dbo].[ExTreasuryTransfereDetail].[IX_ExTreasuryTransfereDetail_CurrencyId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ExTreasuryTransfereDetail_CurrencyId]
    ON [dbo].[ExTreasuryTransfereDetail]([CurrencyId] ASC);


GO
PRINT N'Creating Index [dbo].[ExTreasuryTransfereDetail].[IX_ExTreasuryTransfereDetail_TransferId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ExTreasuryTransfereDetail_TransferId]
    ON [dbo].[ExTreasuryTransfereDetail]([TransferId] ASC);


GO
PRINT N'Creating Table [dbo].[FinYears]...';


GO
CREATE TABLE [dbo].[FinYears] (
    [FinYearId]     INT            IDENTITY (1, 1) NOT NULL,
    [YearNameAr]    NVARCHAR (MAX) NULL,
    [YearNameEn]    NVARCHAR (MAX) NULL,
    [IsCurrentYear] BIT            NOT NULL,
    [From]          DATETIME2 (7)  NOT NULL,
    [To]            DATETIME2 (7)  NOT NULL,
    CONSTRAINT [PK_FinYears] PRIMARY KEY CLUSTERED ([FinYearId] ASC)
);


GO
PRINT N'Creating Table [dbo].[FinYearsPeriods]...';


GO
CREATE TABLE [dbo].[FinYearsPeriods] (
    [FinYearsPeriodId] INT            IDENTITY (1, 1) NOT NULL,
    [PeriodNameAr]     NVARCHAR (MAX) NULL,
    [PeriodNameEn]     NVARCHAR (MAX) NULL,
    [IsOpen]           BIT            NOT NULL,
    [From]             DATETIME2 (7)  NOT NULL,
    [To]               DATETIME2 (7)  NOT NULL,
    [FinYearId]        INT            NOT NULL,
    CONSTRAINT [PK_FinYearsPeriods] PRIMARY KEY CLUSTERED ([FinYearsPeriodId] ASC)
);


GO
PRINT N'Creating Index [dbo].[FinYearsPeriods].[IX_FinYearsPeriods_FinYearId]...';


GO
CREATE NONCLUSTERED INDEX [IX_FinYearsPeriods_FinYearId]
    ON [dbo].[FinYearsPeriods]([FinYearId] ASC);


GO
PRINT N'Creating Table [dbo].[Notifications]...';


GO
CREATE TABLE [dbo].[Notifications] (
    [Id]               BIGINT         IDENTITY (1, 1) NOT NULL,
    [CreateUser]       NVARCHAR (450) NULL,
    [CreateUserName]   NVARCHAR (256) NULL,
    [UpdateUser]       NVARCHAR (450) NULL,
    [UpdateUserName]   NVARCHAR (256) NULL,
    [CreateDate]       DATETIME2 (7)  NULL,
    [UpdateDate]       DATETIME2 (7)  NULL,
    [UserId]           NVARCHAR (MAX) NOT NULL,
    [Message]          NVARCHAR (250) NOT NULL,
    [NotificationType] INT            NOT NULL,
    [DataId]           NVARCHAR (MAX) NOT NULL,
    [DataDesc]         NVARCHAR (MAX) NOT NULL,
    [IsRead]           BIT            NOT NULL,
    [IsPending]        BIT            NOT NULL,
    CONSTRAINT [PK_Notifications] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[oldextclient]...';


GO
CREATE TABLE [dbo].[oldextclient] (
    [ClientID]             INT             IDENTITY (1, 1) NOT NULL,
    [ClientCode]           NVARCHAR (16)   NOT NULL,
    [ClientNameEn]         NVARCHAR (100)  NULL,
    [ClientNameAr]         NVARCHAR (100)  NULL,
    [ClientTypeID]         INT             NOT NULL,
    [CountryID]            INT             NULL,
    [IDTypeID]             INT             NULL,
    [IDNumber]             NVARCHAR (20)   NULL,
    [IDSource]             NVARCHAR (30)   NULL,
    [IDExpiryDate]         NVARCHAR (10)   NULL,
    [Mobile]               NVARCHAR (15)   NULL,
    [Sponsor]              NVARCHAR (50)   NULL,
    [SuspiciousCount]      INT             NOT NULL,
    [SuspiciousUpdated]    BIT             NOT NULL,
    [JobTitle]             NVARCHAR (50)   NULL,
    [Income]               DECIMAL (18, 2) NULL,
    [IncomeSource]         NVARCHAR (50)   NULL,
    [PurposeOfExchange]    NVARCHAR (100)  NULL,
    [Capital]              DECIMAL (18)    NULL,
    [Specialty]            NVARCHAR (50)   NULL,
    [Address]              NVARCHAR (200)  NULL,
    [JobID]                INT             NULL,
    [SuspiciousCountLocal] INT             NOT NULL,
    [HasFullData]          BIT             NOT NULL,
    [Birthdate]            DATETIME        NULL,
    [IDExpiredDate]        DATETIME        NULL,
    [CRExpiredDate]        DATETIME        NULL,
    [JobAuthority]         NVARCHAR (50)   NULL,
    [OthrePhone]           NVARCHAR (20)   NULL,
    [OtherMobile]          NVARCHAR (20)   NULL,
    [CRNumber]             NVARCHAR (10)   NULL,
    [UnifiedNumber]        NVARCHAR (10)   NULL,
    [CreationDate]         DATETIME        NULL,
    [IDSourceID]           INT             NULL,
    [IncomeSourceID]       INT             NULL,
    [ExchangePurposeID]    INT             NULL,
    [IsSuspended]          BIT             NOT NULL,
    [BirthCountryID]       INT             NULL,
    [BirthCityID]          INT             NULL,
    [IsDeleted]            BIT             NOT NULL,
    [BranchID]             INT             NULL,
    [Sector]               NVARCHAR (MAX)  NULL
);


GO
PRINT N'Creating Table [dbo].[Privilage2]...';


GO
CREATE TABLE [dbo].[Privilage2] (
    [Id]              BIGINT IDENTITY (1, 1) NOT NULL,
    [ScreensId]       BIGINT NULL,
    [PrivilageTypeId] BIGINT NULL,
    [JobId]           BIGINT NOT NULL,
    [State]           INT    NOT NULL
);


GO
PRINT N'Creating Table [dbo].[ProveInOutCheck]...';


GO
CREATE TABLE [dbo].[ProveInOutCheck] (
    [ProveInOutCheckId] BIGINT          IDENTITY (1, 1) NOT NULL,
    [CheckNumber]       NVARCHAR (MAX)  NULL,
    [BankAccountId]     BIGINT          NOT NULL,
    [Amount]            DECIMAL (18, 2) NOT NULL,
    [Type]              INT             NOT NULL,
    [Note]              NVARCHAR (MAX)  NULL,
    [Date]              DATETIME2 (7)   NULL,
    [IsDeleted]         BIT             NOT NULL,
    CONSTRAINT [PK_ProveInOutCheck] PRIMARY KEY CLUSTERED ([ProveInOutCheckId] ASC)
);


GO
PRINT N'Creating Table [dbo].[SecPermissionType]...';


GO
CREATE TABLE [dbo].[SecPermissionType] (
    [PermissionTypeId]     INT           NOT NULL,
    [PermissionTypeNameEn] NVARCHAR (50) NOT NULL,
    [PermissionTypeNameAr] NVARCHAR (50) NOT NULL,
    CONSTRAINT [PK_PermissionTypes] PRIMARY KEY CLUSTERED ([PermissionTypeId] ASC)
);


GO
PRINT N'Creating Table [dbo].[SecPermissionTypeBranches]...';


GO
CREATE TABLE [dbo].[SecPermissionTypeBranches] (
    [ID]               INT IDENTITY (1, 1) NOT NULL,
    [PermissionTypeId] INT NOT NULL,
    [BranchId]         INT NOT NULL,
    [Selected]         BIT NOT NULL,
    CONSTRAINT [PK_SecPermissionTypeBranches] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating Index [dbo].[SecPermissionTypeBranches].[IX_SecPermissionTypeBranches_BranchId]...';


GO
CREATE NONCLUSTERED INDEX [IX_SecPermissionTypeBranches_BranchId]
    ON [dbo].[SecPermissionTypeBranches]([BranchId] ASC);


GO
PRINT N'Creating Index [dbo].[SecPermissionTypeBranches].[IX_SecPermissionTypeBranches_PermissionTypeId]...';


GO
CREATE NONCLUSTERED INDEX [IX_SecPermissionTypeBranches_PermissionTypeId]
    ON [dbo].[SecPermissionTypeBranches]([PermissionTypeId] ASC);


GO
PRINT N'Creating Table [dbo].[Setting]...';


GO
CREATE TABLE [dbo].[Setting] (
    [SettingID]    INT            IDENTITY (1, 1) NOT NULL,
    [SettingName]  NVARCHAR (MAX) NULL,
    [DefaultValue] NVARCHAR (MAX) NULL,
    [date]         DATETIME2 (7)  NOT NULL,
    CONSTRAINT [PK_Setting] PRIMARY KEY CLUSTERED ([SettingID] ASC)
);


GO
PRINT N'Creating Table [dbo].[ShiftTracking]...';


GO
CREATE TABLE [dbo].[ShiftTracking] (
    [ShiftTrackingID] INT             IDENTITY (1, 1) NOT NULL,
    [TreasuryId]      INT             NOT NULL,
    [CurrentBalance]  DECIMAL (18, 2) NOT NULL,
    [FromUserId]      INT             NOT NULL,
    [ToUserId]        INT             NOT NULL,
    [Date]            DATETIME2 (7)   NOT NULL,
    [Notes]           NVARCHAR (MAX)  NULL,
    [CurrencyId]      INT             NOT NULL,
    CONSTRAINT [PK_ShiftTracking] PRIMARY KEY CLUSTERED ([ShiftTrackingID] ASC)
);


GO
PRINT N'Creating Index [dbo].[ShiftTracking].[IX_ShiftTracking_FromUserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ShiftTracking_FromUserId]
    ON [dbo].[ShiftTracking]([FromUserId] ASC);


GO
PRINT N'Creating Index [dbo].[ShiftTracking].[IX_ShiftTracking_ToUserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ShiftTracking_ToUserId]
    ON [dbo].[ShiftTracking]([ToUserId] ASC);


GO
PRINT N'Creating Index [dbo].[ShiftTracking].[IX_ShiftTracking_TreasuryId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ShiftTracking_TreasuryId]
    ON [dbo].[ShiftTracking]([TreasuryId] ASC);


GO
PRINT N'Creating Table [dbo].[test]...';


GO
CREATE TABLE [dbo].[test] (
    [ClientAttachmentID] INT            IDENTITY (1, 1) NOT NULL,
    [ClientID]           INT            NOT NULL,
    [AttachmentTypeID]   INT            NULL,
    [IsOptimized]        BIT            NOT NULL,
    [AttachmentFilePath] VARCHAR (10)   NULL,
    [AttachmentName]     NVARCHAR (MAX) NULL,
    [HasAttachment]      BIT            NOT NULL,
    [HasAttachmentPdf]   BIT            NOT NULL,
    [IsDeleted]          BIT            NOT NULL
);


GO
PRINT N'Creating Table [dbo].[testt]...';


GO
CREATE TABLE [dbo].[testt] (
    [TransferID]         INT             NOT NULL,
    [CurrencyID]         INT             NOT NULL,
    [TransferTime]       DATETIME        NOT NULL,
    [TransferAmount]     DECIMAL (18, 2) NOT NULL,
    [TransferType]       INT             NOT NULL,
    [TransferWithUserID] INT             NULL,
    [TransferRemarks]    NVARCHAR (200)  NULL
);


GO
PRINT N'Creating Table [dbo].[TrackingData]...';


GO
CREATE TABLE [dbo].[TrackingData] (
    [TrackId]    INT            IDENTITY (1, 1) NOT NULL,
    [EntityId]   NVARCHAR (MAX) NULL,
    [TableName]  NVARCHAR (MAX) NULL,
    [ActionType] INT            NOT NULL,
    [JsonBefore] NVARCHAR (MAX) NULL,
    [JsonAfter]  NVARCHAR (MAX) NULL,
    [date]       DATETIME2 (7)  NOT NULL,
    CONSTRAINT [PK_TrackingData] PRIMARY KEY CLUSTERED ([TrackId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Treasury]...';


GO
CREATE TABLE [dbo].[Treasury] (
    [TreasuryId]     INT            IDENTITY (1, 1) NOT NULL,
    [BranchID]       INT            NOT NULL,
    [IsDeleted]      BIT            NOT NULL,
    [TreasuryNameEn] NVARCHAR (MAX) NULL,
    [TreasuryNameAr] NVARCHAR (MAX) NULL,
    [OwnerId]        INT            NULL,
    [AccountId]      INT            NULL,
    CONSTRAINT [PK_Treasury] PRIMARY KEY CLUSTERED ([TreasuryId] ASC)
);


GO
PRINT N'Creating Index [dbo].[Treasury].[IX_Treasury_BranchID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Treasury_BranchID]
    ON [dbo].[Treasury]([BranchID] ASC);


GO
PRINT N'Creating Index [dbo].[Treasury].[IX_Treasury_OwnerId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Treasury_OwnerId]
    ON [dbo].[Treasury]([OwnerId] ASC);


GO
PRINT N'Creating Index [dbo].[Treasury].[IX_Treasury_AccountId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Treasury_AccountId]
    ON [dbo].[Treasury]([AccountId] ASC);


GO
PRINT N'Creating Table [dbo].[TreasuryDealers]...';


GO
CREATE TABLE [dbo].[TreasuryDealers] (
    [TreasuryDealerId] INT            IDENTITY (1, 1) NOT NULL,
    [TreasuryId]       INT            NOT NULL,
    [UserId]           INT            NOT NULL,
    [Desc]             NVARCHAR (MAX) NULL,
    [Date]             DATETIME2 (7)  NOT NULL,
    [IsDeleted]        BIT            NULL,
    CONSTRAINT [PK_TreasuryDealers] PRIMARY KEY CLUSTERED ([TreasuryDealerId] ASC)
);


GO
PRINT N'Creating Index [dbo].[TreasuryDealers].[IX_TreasuryDealers_TreasuryId]...';


GO
CREATE NONCLUSTERED INDEX [IX_TreasuryDealers_TreasuryId]
    ON [dbo].[TreasuryDealers]([TreasuryId] ASC);


GO
PRINT N'Creating Index [dbo].[TreasuryDealers].[IX_TreasuryDealers_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_TreasuryDealers_UserId]
    ON [dbo].[TreasuryDealers]([UserId] ASC);


GO
PRINT N'Creating Table [dbo].[UserSetting]...';


GO
CREATE TABLE [dbo].[UserSetting] (
    [UserSettingID] INT            IDENTITY (1, 1) NOT NULL,
    [SettingID]     INT            NOT NULL,
    [UserId]        INT            NOT NULL,
    [Value]         NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_UserSetting] PRIMARY KEY CLUSTERED ([UserSettingID] ASC)
);


GO
PRINT N'Creating Index [dbo].[UserSetting].[IX_UserSetting_SettingID]...';


GO
CREATE NONCLUSTERED INDEX [IX_UserSetting_SettingID]
    ON [dbo].[UserSetting]([SettingID] ASC);


GO
PRINT N'Creating Index [dbo].[UserSetting].[IX_UserSetting_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_UserSetting_UserId]
    ON [dbo].[UserSetting]([UserId] ASC);


GO
PRINT N'Creating Table [dbo].[WFListOfApprovals]...';


GO
CREATE TABLE [dbo].[WFListOfApprovals] (
    [ListOfApprovalId] INT IDENTITY (1, 1) NOT NULL,
    [RequestTypeId]    INT NOT NULL,
    [BranchID]         INT NOT NULL,
    [ActionOrder]      INT NOT NULL,
    [UserId]           INT NULL,
    [Islast]           BIT NOT NULL,
    CONSTRAINT [PK_WFListOfApprovals] PRIMARY KEY CLUSTERED ([ListOfApprovalId] ASC)
);


GO
PRINT N'Creating Index [dbo].[WFListOfApprovals].[IX_WFListOfApprovals_BranchID]...';


GO
CREATE NONCLUSTERED INDEX [IX_WFListOfApprovals_BranchID]
    ON [dbo].[WFListOfApprovals]([BranchID] ASC);


GO
PRINT N'Creating Index [dbo].[WFListOfApprovals].[IX_WFListOfApprovals_RequestTypeId]...';


GO
CREATE NONCLUSTERED INDEX [IX_WFListOfApprovals_RequestTypeId]
    ON [dbo].[WFListOfApprovals]([RequestTypeId] ASC);


GO
PRINT N'Creating Table [dbo].[WFRequest]...';


GO
CREATE TABLE [dbo].[WFRequest] (
    [RequestId]     INT            IDENTITY (1, 1) NOT NULL,
    [RequestTypeId] INT            NOT NULL,
    [BranchID]      INT            NOT NULL,
    [UserId]        INT            NULL,
    [EntityId]      NVARCHAR (MAX) NULL,
    [IsCompleted]   BIT            NOT NULL,
    [RegisterDate]  DATETIME2 (7)  NOT NULL,
    CONSTRAINT [PK_WFRequest] PRIMARY KEY CLUSTERED ([RequestId] ASC)
);


GO
PRINT N'Creating Index [dbo].[WFRequest].[IX_WFRequest_BranchID]...';


GO
CREATE NONCLUSTERED INDEX [IX_WFRequest_BranchID]
    ON [dbo].[WFRequest]([BranchID] ASC);


GO
PRINT N'Creating Index [dbo].[WFRequest].[IX_WFRequest_RequestTypeId]...';


GO
CREATE NONCLUSTERED INDEX [IX_WFRequest_RequestTypeId]
    ON [dbo].[WFRequest]([RequestTypeId] ASC);


GO
PRINT N'Creating Index [dbo].[WFRequest].[IX_WFRequest_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_WFRequest_UserId]
    ON [dbo].[WFRequest]([UserId] ASC);


GO
PRINT N'Creating Table [dbo].[WFRequestDetails]...';


GO
CREATE TABLE [dbo].[WFRequestDetails] (
    [RequestDetailId] INT            IDENTITY (1, 1) NOT NULL,
    [RequestId]       INT            NOT NULL,
    [ActionType]      INT            NOT NULL,
    [ActionOrder]     INT            NOT NULL,
    [Notes]           NVARCHAR (MAX) NULL,
    [UserId]          INT            NULL,
    [RegisterDate]    DATETIME2 (7)  NOT NULL,
    CONSTRAINT [PK_WFRequestDetails] PRIMARY KEY CLUSTERED ([RequestDetailId] ASC)
);


GO
PRINT N'Creating Index [dbo].[WFRequestDetails].[IX_WFRequestDetails_RequestId]...';


GO
CREATE NONCLUSTERED INDEX [IX_WFRequestDetails_RequestId]
    ON [dbo].[WFRequestDetails]([RequestId] ASC);


GO
PRINT N'Creating Index [dbo].[WFRequestDetails].[IX_WFRequestDetails_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_WFRequestDetails_UserId]
    ON [dbo].[WFRequestDetails]([UserId] ASC);


GO
PRINT N'Creating Table [dbo].[WFRequestType]...';


GO
CREATE TABLE [dbo].[WFRequestType] (
    [RequestTypeId]    INT            IDENTITY (1, 1) NOT NULL,
    [NameAr]           NVARCHAR (MAX) NULL,
    [NameEn]           NVARCHAR (MAX) NULL,
    [RunONLastApprove] NVARCHAR (MAX) NULL,
    [RunOnReject]      NVARCHAR (MAX) NULL,
    [RunOnStart]       NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_WFRequestType] PRIMARY KEY CLUSTERED ([RequestTypeId] ASC)
);


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Countries]...';


GO
ALTER TABLE [dbo].[Countries]
    ADD DEFAULT ((1)) FOR [IsActve];


GO
PRINT N'Creating Default Constraint [dbo].[DF_BanksBvr_ActionTime]...';


GO
ALTER TABLE [dbo].[BanksBvr]
    ADD CONSTRAINT [DF_BanksBvr_ActionTime] DEFAULT (getdate()) FOR [ActionTime];


GO
PRINT N'Creating Default Constraint [dbo].[DF_EX_Currencies_OpeningBalance]...';


GO
ALTER TABLE [dbo].[Currencies]
    ADD CONSTRAINT [DF_EX_Currencies_OpeningBalance] DEFAULT ((0)) FOR [OpeningBalance];


GO
PRINT N'Creating Default Constraint [dbo].[DF_EX_Currencies_ShowInPricesScreen]...';


GO
ALTER TABLE [dbo].[Currencies]
    ADD CONSTRAINT [DF_EX_Currencies_ShowInPricesScreen] DEFAULT ((1)) FOR [ShowInPricesScreen];


GO
PRINT N'Creating Default Constraint [dbo].[DF__Currencie__IsDel__4C764630]...';


GO
ALTER TABLE [dbo].[Currencies]
    ADD CONSTRAINT [DF__Currencie__IsDel__4C764630] DEFAULT (CONVERT([bit],(0))) FOR [IsDeleted];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Currencies]...';


GO
ALTER TABLE [dbo].[Currencies]
    ADD DEFAULT ((0)) FOR [TreasuryId];


GO
PRINT N'Creating Default Constraint [dbo].[DF__Currencie__Branc__7B313519]...';


GO
ALTER TABLE [dbo].[Currencies]
    ADD CONSTRAINT [DF__Currencie__Branc__7B313519] DEFAULT ((1)) FOR [BranchID];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[EX_Countries]...';


GO
ALTER TABLE [dbo].[EX_Countries]
    ADD DEFAULT ((1)) FOR [IsActve];


GO
PRINT N'Creating Default Constraint [dbo].[DF_Countries_SeverityID]...';


GO
ALTER TABLE [dbo].[EX_Countries]
    ADD CONSTRAINT [DF_Countries_SeverityID] DEFAULT ((1)) FOR [SeverityID];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[EX_Countries]...';


GO
ALTER TABLE [dbo].[EX_Countries]
    ADD DEFAULT (CONVERT([bit],(0))) FOR [IsDeleted];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[ExTaswya]...';


GO
ALTER TABLE [dbo].[ExTaswya]
    ADD DEFAULT (CONVERT([bit],(0))) FOR [IsDeleted];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[ExTaswyaDetail]...';


GO
ALTER TABLE [dbo].[ExTaswyaDetail]
    ADD DEFAULT (CONVERT([bit],(0))) FOR [IsDeleted];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[ExTreasuryTransfere]...';


GO
ALTER TABLE [dbo].[ExTreasuryTransfere]
    ADD DEFAULT (CONVERT([bit],(0))) FOR [IsDeleted];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[ExTreasuryTransfereDetail]...';


GO
ALTER TABLE [dbo].[ExTreasuryTransfereDetail]
    ADD DEFAULT (CONVERT([bit],(0))) FOR [IsDeleted];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[SecPermissionTypeBranches]...';


GO
ALTER TABLE [dbo].[SecPermissionTypeBranches]
    ADD DEFAULT (CONVERT([bit],(0))) FOR [Selected];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[ShiftTracking]...';


GO
ALTER TABLE [dbo].[ShiftTracking]
    ADD DEFAULT ((0)) FOR [CurrencyId];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Treasury]...';


GO
ALTER TABLE [dbo].[Treasury]
    ADD DEFAULT ((0)) FOR [OwnerId];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[WFListOfApprovals]...';


GO
ALTER TABLE [dbo].[WFListOfApprovals]
    ADD DEFAULT (CONVERT([bit],(0))) FOR [Islast];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[WFRequest]...';


GO
ALTER TABLE [dbo].[WFRequest]
    ADD DEFAULT ('0001-01-01T00:00:00.0000000') FOR [RegisterDate];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[WFRequestDetails]...';


GO
ALTER TABLE [dbo].[WFRequestDetails]
    ADD DEFAULT ('0001-01-01T00:00:00.0000000') FOR [RegisterDate];


GO
PRINT N'Creating Foreign Key [dbo].[FK_A_JVs_A_CashFlow]...';


GO
ALTER TABLE [dbo].[A_JVs] WITH NOCHECK
    ADD CONSTRAINT [FK_A_JVs_A_CashFlow] FOREIGN KEY ([CashFlowID]) REFERENCES [dbo].[A_CashFlow] ([VoucherID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_A_CashFlow_A_CashFlowStatus]...';


GO
ALTER TABLE [dbo].[A_CashFlow] WITH NOCHECK
    ADD CONSTRAINT [FK_A_CashFlow_A_CashFlowStatus] FOREIGN KEY ([StatusID]) REFERENCES [dbo].[A_CashFlowStatus] ([StatusID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_A_CashFlow_Sec_Users]...';


GO
ALTER TABLE [dbo].[A_CashFlow] WITH NOCHECK
    ADD CONSTRAINT [FK_A_CashFlow_Sec_Users] FOREIGN KEY ([UserID]) REFERENCES [dbo].[Sec_Users] ([UserID]) ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_A_CashFlow_EX_Suppliers]...';


GO
ALTER TABLE [dbo].[A_CashFlow] WITH NOCHECK
    ADD CONSTRAINT [FK_A_CashFlow_EX_Suppliers] FOREIGN KEY ([SupplierID]) REFERENCES [dbo].[EX_Suppliers] ([SupplierID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_A_CashFlow_A_CashFlowType]...';


GO
ALTER TABLE [dbo].[A_CashFlow] WITH NOCHECK
    ADD CONSTRAINT [FK_A_CashFlow_A_CashFlowType] FOREIGN KEY ([VoucherTypeID]) REFERENCES [dbo].[A_CashFlowType] ([VoucherTypeID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_A_CashFlow_EX_Currencies]...';


GO
ALTER TABLE [dbo].[A_CashFlow] WITH NOCHECK
    ADD CONSTRAINT [FK_A_CashFlow_EX_Currencies] FOREIGN KEY ([CurrencyID]) REFERENCES [dbo].[Currencies] ([CurrencyID]) ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_A_CashFlow_EX_Branches_BranchID]...';


GO
ALTER TABLE [dbo].[A_CashFlow] WITH NOCHECK
    ADD CONSTRAINT [FK_A_CashFlow_EX_Branches_BranchID] FOREIGN KEY ([BranchID]) REFERENCES [dbo].[EX_Branches] ([BranchID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_A_JVsDetails_A_JVs]...';


GO
ALTER TABLE [dbo].[A_JVsDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_A_JVsDetails_A_JVs] FOREIGN KEY ([JVID]) REFERENCES [dbo].[A_JVs] ([JVID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_A_JVs_A_JVStatus]...';


GO
ALTER TABLE [dbo].[A_JVs] WITH NOCHECK
    ADD CONSTRAINT [FK_A_JVs_A_JVStatus] FOREIGN KEY ([JVStatusID]) REFERENCES [dbo].[A_JVStatus] ([StatusID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_A_JVs_A_JVType]...';


GO
ALTER TABLE [dbo].[A_JVs] WITH NOCHECK
    ADD CONSTRAINT [FK_A_JVs_A_JVType] FOREIGN KEY ([JVTypeID]) REFERENCES [dbo].[A_JVType] ([JVTypeID]) ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_A_JVs_EX_BranchTransfers]...';


GO
ALTER TABLE [dbo].[A_JVs] WITH NOCHECK
    ADD CONSTRAINT [FK_A_JVs_EX_BranchTransfers] FOREIGN KEY ([BranchTransferID]) REFERENCES [dbo].[EX_BranchTransfers] ([VoucherID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_A_JVs_EX_Invoices]...';


GO
ALTER TABLE [dbo].[A_JVs] WITH NOCHECK
    ADD CONSTRAINT [FK_A_JVs_EX_Invoices] FOREIGN KEY ([InvoiceID]) REFERENCES [dbo].[EX_Invoices] ([InvoiceID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_A_JVs_EX_WholeInvoices]...';


GO
ALTER TABLE [dbo].[A_JVs] WITH NOCHECK
    ADD CONSTRAINT [FK_A_JVs_EX_WholeInvoices] FOREIGN KEY ([WholeInvoiceID]) REFERENCES [dbo].[EX_WholeInvoices] ([InvoiceID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_A_JVs_EX_Branches_BranchID]...';


GO
ALTER TABLE [dbo].[A_JVs] WITH NOCHECK
    ADD CONSTRAINT [FK_A_JVs_EX_Branches_BranchID] FOREIGN KEY ([BranchID]) REFERENCES [dbo].[EX_Branches] ([BranchID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_A_JVs_ExTaswya_TaswyaTransferId]...';


GO
ALTER TABLE [dbo].[A_JVs] WITH NOCHECK
    ADD CONSTRAINT [FK_A_JVs_ExTaswya_TaswyaTransferId] FOREIGN KEY ([TaswyaTransferId]) REFERENCES [dbo].[ExTaswya] ([TransferId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_A_JVs_ExTreasuryTransfere_TreasuryTransferId]...';


GO
ALTER TABLE [dbo].[A_JVs] WITH NOCHECK
    ADD CONSTRAINT [FK_A_JVs_ExTreasuryTransfere_TreasuryTransferId] FOREIGN KEY ([TreasuryTransferId]) REFERENCES [dbo].[ExTreasuryTransfere] ([TransferId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_A_JVsDetails_A_Accounts]...';


GO
ALTER TABLE [dbo].[A_JVsDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_A_JVsDetails_A_Accounts] FOREIGN KEY ([AccountID]) REFERENCES [dbo].[A_Accounts] ([AccountID]) ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_A_JVsDetails_EX_Currencies]...';


GO
ALTER TABLE [dbo].[A_JVsDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_A_JVsDetails_EX_Currencies] FOREIGN KEY ([CurrencyID]) REFERENCES [dbo].[Currencies] ([CurrencyID]) ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_IDSources_Countries]...';


GO
ALTER TABLE [dbo].[EX_IDSources] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_IDSources_Countries] FOREIGN KEY ([CountryID]) REFERENCES [dbo].[EX_Countries] ([CountryID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_Clients_Nationality]...';


GO
ALTER TABLE [dbo].[EX_Clients] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_Clients_Nationality] FOREIGN KEY ([CountryID]) REFERENCES [dbo].[EX_Countries] ([CountryID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_Clients_BirthCountry]...';


GO
ALTER TABLE [dbo].[EX_Clients] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_Clients_BirthCountry] FOREIGN KEY ([BirthCountryID]) REFERENCES [dbo].[EX_Countries] ([CountryID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_Suppliers_Countries]...';


GO
ALTER TABLE [dbo].[EX_Suppliers] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_Suppliers_Countries] FOREIGN KEY ([CountryID]) REFERENCES [dbo].[EX_Countries] ([CountryID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_BranchTransfers_EX_BranchTransferStatus]...';


GO
ALTER TABLE [dbo].[EX_BranchTransfers] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_BranchTransfers_EX_BranchTransferStatus] FOREIGN KEY ([StatusID]) REFERENCES [dbo].[EX_BranchTransferStatus] ([StatusID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_BranchTransfers_EX_BranchTransferType]...';


GO
ALTER TABLE [dbo].[EX_BranchTransfers] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_BranchTransfers_EX_BranchTransferType] FOREIGN KEY ([TypeID]) REFERENCES [dbo].[EX_BranchTransferType] ([TypeID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_BranchTransfers_Sys_Branches]...';


GO
ALTER TABLE [dbo].[EX_BranchTransfers] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_BranchTransfers_Sys_Branches] FOREIGN KEY ([BranchID]) REFERENCES [dbo].[Sys_Branches] ([BranchID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_BranchTransfersDetails_EX_BranchTransfers]...';


GO
ALTER TABLE [dbo].[EX_BranchTransfersDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_BranchTransfersDetails_EX_BranchTransfers] FOREIGN KEY ([VoucherID]) REFERENCES [dbo].[EX_BranchTransfers] ([VoucherID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_BranchTransfers_Sec_Users_UserId]...';


GO
ALTER TABLE [dbo].[EX_BranchTransfers] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_BranchTransfers_Sec_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[Sec_Users] ([UserID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_BranchTransfers_EX_Branches_BranchID1]...';


GO
ALTER TABLE [dbo].[EX_BranchTransfers] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_BranchTransfers_EX_Branches_BranchID1] FOREIGN KEY ([BranchID1]) REFERENCES [dbo].[EX_Branches] ([BranchID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_ClientMemberships_EX_Clients]...';


GO
ALTER TABLE [dbo].[EX_ClientsMemberships] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_ClientMemberships_EX_Clients] FOREIGN KEY ([ClientID]) REFERENCES [dbo].[EX_Clients] ([ClientID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_Invoices_EX_Clients]...';


GO
ALTER TABLE [dbo].[EX_Invoices] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_Invoices_EX_Clients] FOREIGN KEY ([ClientID]) REFERENCES [dbo].[EX_Clients] ([ClientID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_ClientsRepresentatives_EX_Clients]...';


GO
ALTER TABLE [dbo].[EX_ClientsRepresentatives] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_ClientsRepresentatives_EX_Clients] FOREIGN KEY ([ClientID]) REFERENCES [dbo].[EX_Clients] ([ClientID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_Clients_EX_IncomeSources]...';


GO
ALTER TABLE [dbo].[EX_Clients] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_Clients_EX_IncomeSources] FOREIGN KEY ([IncomeSourceID]) REFERENCES [dbo].[EX_IncomeSources] ([IncomeSourceID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_Clients_BirthCity]...';


GO
ALTER TABLE [dbo].[EX_Clients] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_Clients_BirthCity] FOREIGN KEY ([BirthCityID]) REFERENCES [dbo].[EX_IDSources] ([IDSourceID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_Clients_EX_ExchangePurposes]...';


GO
ALTER TABLE [dbo].[EX_Clients] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_Clients_EX_ExchangePurposes] FOREIGN KEY ([ExchangePurposeID]) REFERENCES [dbo].[EX_ExchangePurposes] ([ExchangePurposeID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_Clients_EX_IDSources]...';


GO
ALTER TABLE [dbo].[EX_Clients] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_Clients_EX_IDSources] FOREIGN KEY ([IDSourceID]) REFERENCES [dbo].[EX_IDSources] ([IDSourceID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_Clients_ExClientSectors_ClientSectorId]...';


GO
ALTER TABLE [dbo].[EX_Clients] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_Clients_ExClientSectors_ClientSectorId] FOREIGN KEY ([ClientSectorId]) REFERENCES [dbo].[ExClientSectors] ([ClientSectorId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_Clients_EX_Branches_BranchID]...';


GO
ALTER TABLE [dbo].[EX_Clients] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_Clients_EX_Branches_BranchID] FOREIGN KEY ([BranchID]) REFERENCES [dbo].[EX_Branches] ([BranchID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_Invoices_EX_InternalTransfers]...';


GO
ALTER TABLE [dbo].[EX_Invoices] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_Invoices_EX_InternalTransfers] FOREIGN KEY ([InternalTransferID]) REFERENCES [dbo].[EX_InternalTransfers] ([TransferID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_InternalTransfersDetailsTemp_EX_InternalTransfers]...';


GO
ALTER TABLE [dbo].[EX_InternalTransfersDetailsTemp] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_InternalTransfersDetailsTemp_EX_InternalTransfers] FOREIGN KEY ([TransferID]) REFERENCES [dbo].[EX_InternalTransfers] ([TransferID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_InternalTransfers_Details_EX_InternalTransfers]...';


GO
ALTER TABLE [dbo].[EX_InternalTransfersDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_InternalTransfers_Details_EX_InternalTransfers] FOREIGN KEY ([TransferID]) REFERENCES [dbo].[EX_InternalTransfers] ([TransferID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_InternalTransfersClosingDetails_EX_InternalTransfers]...';


GO
ALTER TABLE [dbo].[EX_InternalTransfersClosingDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_InternalTransfersClosingDetails_EX_InternalTransfers] FOREIGN KEY ([TransferID]) REFERENCES [dbo].[EX_InternalTransfers] ([TransferID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_InternalTransfers_Sec_Users_UserId]...';


GO
ALTER TABLE [dbo].[EX_InternalTransfers] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_InternalTransfers_Sec_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[Sec_Users] ([UserID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_InternalTransfers_Treasury_TreasuryId]...';


GO
ALTER TABLE [dbo].[EX_InternalTransfers] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_InternalTransfers_Treasury_TreasuryId] FOREIGN KEY ([TreasuryId]) REFERENCES [dbo].[Treasury] ([TreasuryId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_InternalTransfers_EX_Branches_BranchID]...';


GO
ALTER TABLE [dbo].[EX_InternalTransfers] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_InternalTransfers_EX_Branches_BranchID] FOREIGN KEY ([BranchID]) REFERENCES [dbo].[EX_Branches] ([BranchID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_InternalTransfers_Details_Ex_Currencies]...';


GO
ALTER TABLE [dbo].[EX_InternalTransfersDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_InternalTransfers_Details_Ex_Currencies] FOREIGN KEY ([CurrencyID]) REFERENCES [dbo].[Currencies] ([CurrencyID]) ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_InvoicesDetails_EX_Invoices]...';


GO
ALTER TABLE [dbo].[EX_InvoicesDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_InvoicesDetails_EX_Invoices] FOREIGN KEY ([InvoiceID]) REFERENCES [dbo].[EX_Invoices] ([InvoiceID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_Invoices_EX_Banks]...';


GO
ALTER TABLE [dbo].[EX_Invoices] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_Invoices_EX_Banks] FOREIGN KEY ([BankID]) REFERENCES [dbo].[EX_Banks] ([BankID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_Invoices_EX_InvoiceStatus]...';


GO
ALTER TABLE [dbo].[EX_Invoices] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_Invoices_EX_InvoiceStatus] FOREIGN KEY ([StatusID]) REFERENCES [dbo].[EX_InvoiceStatus] ([StatusID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_Invoices_EX_InvoicesType]...';


GO
ALTER TABLE [dbo].[EX_Invoices] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_Invoices_EX_InvoicesType] FOREIGN KEY ([InvoiceTypeID]) REFERENCES [dbo].[EX_InvoicesType] ([InvoiceTypeID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_Invoices_Treasury_TreasuryId]...';


GO
ALTER TABLE [dbo].[EX_Invoices] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_Invoices_Treasury_TreasuryId] FOREIGN KEY ([TreasuryId]) REFERENCES [dbo].[Treasury] ([TreasuryId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_Invoices_Sec_Users_UserId]...';


GO
ALTER TABLE [dbo].[EX_Invoices] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_Invoices_Sec_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[Sec_Users] ([UserID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_Invoices_EX_Branches_BranchID]...';


GO
ALTER TABLE [dbo].[EX_Invoices] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_Invoices_EX_Branches_BranchID] FOREIGN KEY ([BranchID]) REFERENCES [dbo].[EX_Branches] ([BranchID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_InvoicesDetails_EX_Currencies]...';


GO
ALTER TABLE [dbo].[EX_InvoicesDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_InvoicesDetails_EX_Currencies] FOREIGN KEY ([CurrencyID]) REFERENCES [dbo].[Currencies] ([CurrencyID]) ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_WholeInvoices_EX_Suppliers]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoices] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_WholeInvoices_EX_Suppliers] FOREIGN KEY ([SupplierID]) REFERENCES [dbo].[EX_Suppliers] ([SupplierID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_Suppliers_A_Accounts]...';


GO
ALTER TABLE [dbo].[EX_Suppliers] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_Suppliers_A_Accounts] FOREIGN KEY ([AccountID]) REFERENCES [dbo].[A_Accounts] ([AccountID]) ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_Suppliers_EX_SuppliersType]...';


GO
ALTER TABLE [dbo].[EX_Suppliers] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_Suppliers_EX_SuppliersType] FOREIGN KEY ([SupplierTypeID]) REFERENCES [dbo].[EX_SuppliersType] ([SupplierTypeID]) ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_Suppliers_EX_Branches_BranchID1]...';


GO
ALTER TABLE [dbo].[EX_Suppliers] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_Suppliers_EX_Branches_BranchID1] FOREIGN KEY ([BranchID1]) REFERENCES [dbo].[EX_Branches] ([BranchID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_WholeInvoices_Details_EX_WholeInvoices]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoicesDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_WholeInvoices_Details_EX_WholeInvoices] FOREIGN KEY ([InvoiceID]) REFERENCES [dbo].[EX_WholeInvoices] ([InvoiceID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_WholeInvoices_EX_Banks]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoices] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_WholeInvoices_EX_Banks] FOREIGN KEY ([BankID]) REFERENCES [dbo].[EX_Banks] ([BankID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_WholeInvoices_EX_InvoicesType]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoices] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_WholeInvoices_EX_InvoicesType] FOREIGN KEY ([InvoiceTypeID]) REFERENCES [dbo].[EX_InvoicesType] ([InvoiceTypeID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_WholeInvoices_EX_WholeInvoiceStatus]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoices] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_WholeInvoices_EX_WholeInvoiceStatus] FOREIGN KEY ([StatusID]) REFERENCES [dbo].[EX_WholeInvoiceStatus] ([StatusID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_WholeInvoices_Treasury_TreasuryId]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoices] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_WholeInvoices_Treasury_TreasuryId] FOREIGN KEY ([TreasuryId]) REFERENCES [dbo].[Treasury] ([TreasuryId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_WholeInvoices_EX_Branches_BranchID]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoices] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_WholeInvoices_EX_Branches_BranchID] FOREIGN KEY ([BranchID]) REFERENCES [dbo].[EX_Branches] ([BranchID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_WholeInvoices_Details_EX_Currencies]...';


GO
ALTER TABLE [dbo].[EX_WholeInvoicesDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_WholeInvoices_Details_EX_Currencies] FOREIGN KEY ([CurrencyID]) REFERENCES [dbo].[Currencies] ([CurrencyID]) ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_Sec_FormsFunctions_Sec_Forms]...';


GO
ALTER TABLE [dbo].[Sec_FormsFunctions] WITH NOCHECK
    ADD CONSTRAINT [FK_Sec_FormsFunctions_Sec_Forms] FOREIGN KEY ([FormID]) REFERENCES [dbo].[Sec_Forms] ([FormID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_Sec_FormsFunctions_Sec_Functions]...';


GO
ALTER TABLE [dbo].[Sec_FormsFunctions] WITH NOCHECK
    ADD CONSTRAINT [FK_Sec_FormsFunctions_Sec_Functions] FOREIGN KEY ([FunctionID]) REFERENCES [dbo].[Sec_Functions] ([FunctionID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_Sec_UsersFunctions_Sec_FormsFunctions]...';


GO
ALTER TABLE [dbo].[Sec_UsersFunctions] WITH NOCHECK
    ADD CONSTRAINT [FK_Sec_UsersFunctions_Sec_FormsFunctions] FOREIGN KEY ([FormFunctionID]) REFERENCES [dbo].[Sec_FormsFunctions] ([FormFunctionID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_Sec_UsersForms_Sec_Forms]...';


GO
ALTER TABLE [dbo].[Sec_UsersForms] WITH NOCHECK
    ADD CONSTRAINT [FK_Sec_UsersForms_Sec_Forms] FOREIGN KEY ([FormID]) REFERENCES [dbo].[Sec_Forms] ([FormID]) ON DELETE CASCADE ON UPDATE CASCADE;


--GO
--PRINT N'Creating Foreign Key [dbo].[FK_Sec_UsersForms_Sec_Users11]...';


--GO
--ALTER TABLE [dbo].[Sec_UsersForms] WITH NOCHECK
--    ADD CONSTRAINT [FK_Sec_UsersForms_Sec_Users11] FOREIGN KEY ([PermissionTypeId]) REFERENCES [dbo].[SecPermissionType] ([PermissionTypeId]) ON DELETE CASCADE;


GO
--PRINT N'Creating Foreign Key [dbo].[FK_Sec_UsersForms_Sec_Users1121_SecUserUserId]...';


--GO
--ALTER TABLE [dbo].[Sec_UsersForms] WITH NOCHECK
--    ADD CONSTRAINT [FK_Sec_UsersForms_Sec_Users1121_SecUserUserId] FOREIGN KEY ([SecUserUserId]) REFERENCES [dbo].[Sec_Users] ([UserID]);


GO
--PRINT N'Creating Foreign Key [dbo].[FK_Sec_UsersFunctions_Sec1112_Users]...';


--GO
--ALTER TABLE [dbo].[Sec_UsersFunctions] WITH NOCHECK
--    ADD CONSTRAINT [FK_Sec_UsersFunctions_Sec1112_Users] FOREIGN KEY ([PermissionTypeId]) REFERENCES [dbo].[SecPermissionType] ([PermissionTypeId]) ON DELETE CASCADE;


GO
--PRINT N'Creating Foreign Key [dbo].[FK_Sec_UsersFunctions_Sec_Users21321_SecUserUserId]...';


--GO
--ALTER TABLE [dbo].[Sec_UsersFunctions] WITH NOCHECK
--    ADD CONSTRAINT [FK_Sec_UsersFunctions_Sec_Users21321_SecUserUserId] FOREIGN KEY ([SecUserUserId]) REFERENCES [dbo].[Sec_Users] ([UserID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_BranchTransfersDetails_EX_Currencies]...';


GO
ALTER TABLE [dbo].[EX_BranchTransfersDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_BranchTransfersDetails_EX_Currencies] FOREIGN KEY ([CurrencyID]) REFERENCES [dbo].[Currencies] ([CurrencyID]) ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_CurrenciesValRates_EX_Currencies]...';


GO
ALTER TABLE [dbo].[EX_CurrenciesBVR] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_CurrenciesValRates_EX_Currencies] FOREIGN KEY ([CurrencyID]) REFERENCES [dbo].[Currencies] ([CurrencyID]) ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_InternalTransfersDetailsTemp_EX_Currencies]...';


GO
ALTER TABLE [dbo].[EX_InternalTransfersDetailsTemp] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_InternalTransfersDetailsTemp_EX_Currencies] FOREIGN KEY ([CurrencyID]) REFERENCES [dbo].[Currencies] ([CurrencyID]) ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_BankAccount_Currencies_CurrencyId]...';


GO
ALTER TABLE [dbo].[BankAccount] WITH NOCHECK
    ADD CONSTRAINT [FK_BankAccount_Currencies_CurrencyId] FOREIGN KEY ([CurrencyId]) REFERENCES [dbo].[Currencies] ([CurrencyID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_BankAccount_EX_Banks_BankId]...';


GO
ALTER TABLE [dbo].[BankAccount] WITH NOCHECK
    ADD CONSTRAINT [FK_BankAccount_EX_Banks_BankId] FOREIGN KEY ([BankId]) REFERENCES [dbo].[EX_Banks] ([BankID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_BanksBvr_BankAccount_BankAccountId]...';


GO
ALTER TABLE [dbo].[BanksBvr] WITH NOCHECK
    ADD CONSTRAINT [FK_BanksBvr_BankAccount_BankAccountId] FOREIGN KEY ([BankAccountId]) REFERENCES [dbo].[BankAccount] ([BankAccountId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_BanksTreasuryTransfere_Currencies_CurrencyId]...';


GO
ALTER TABLE [dbo].[BanksTreasuryTransfere] WITH NOCHECK
    ADD CONSTRAINT [FK_BanksTreasuryTransfere_Currencies_CurrencyId] FOREIGN KEY ([CurrencyId]) REFERENCES [dbo].[Currencies] ([CurrencyID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_Currencies_EX_Branches_BranchID]...';


GO
ALTER TABLE [dbo].[Currencies] WITH NOCHECK
    ADD CONSTRAINT [FK_Currencies_EX_Branches_BranchID] FOREIGN KEY ([BranchID]) REFERENCES [dbo].[EX_Branches] ([BranchID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Currencies_Treasury_TreasuryId]...';


GO
ALTER TABLE [dbo].[Currencies] WITH NOCHECK
    ADD CONSTRAINT [FK_Currencies_Treasury_TreasuryId] FOREIGN KEY ([TreasuryId]) REFERENCES [dbo].[Treasury] ([TreasuryId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_CurrencyBase_EX_Countries_CountryId]...';


GO
ALTER TABLE [dbo].[CurrencyBase] WITH NOCHECK
    ADD CONSTRAINT [FK_CurrencyBase_EX_Countries_CountryId] FOREIGN KEY ([CountryId]) REFERENCES [dbo].[EX_Countries] ([CountryID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Countries_EX_ClientJobSeverity]...';


GO
ALTER TABLE [dbo].[EX_Countries] WITH NOCHECK
    ADD CONSTRAINT [FK_Countries_EX_ClientJobSeverity] FOREIGN KEY ([SeverityID]) REFERENCES [dbo].[EX_ClientJobSeverity] ([SeverityID]) ON UPDATE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_ExClientsNote_EX_Clients_ClientId]...';


GO
ALTER TABLE [dbo].[ExClientsNote] WITH NOCHECK
    ADD CONSTRAINT [FK_ExClientsNote_EX_Clients_ClientId] FOREIGN KEY ([ClientId]) REFERENCES [dbo].[EX_Clients] ([ClientID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_ExTaswya_EX_Branches_BranchID]...';


GO
ALTER TABLE [dbo].[ExTaswya] WITH NOCHECK
    ADD CONSTRAINT [FK_ExTaswya_EX_Branches_BranchID] FOREIGN KEY ([BranchID]) REFERENCES [dbo].[EX_Branches] ([BranchID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_ExTaswya_Sec_Users_UserId]...';


GO
ALTER TABLE [dbo].[ExTaswya] WITH NOCHECK
    ADD CONSTRAINT [FK_ExTaswya_Sec_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[Sec_Users] ([UserID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_ExTaswya_Treasury_TreasuryId]...';


GO
ALTER TABLE [dbo].[ExTaswya] WITH NOCHECK
    ADD CONSTRAINT [FK_ExTaswya_Treasury_TreasuryId] FOREIGN KEY ([TreasuryId]) REFERENCES [dbo].[Treasury] ([TreasuryId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_ExTaswyaDetail_Currencies_CurrencyId]...';


GO
ALTER TABLE [dbo].[ExTaswyaDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_ExTaswyaDetail_Currencies_CurrencyId] FOREIGN KEY ([CurrencyId]) REFERENCES [dbo].[Currencies] ([CurrencyID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_ExTaswyaDetail_ExTaswya_TransferId]...';


GO
ALTER TABLE [dbo].[ExTaswyaDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_ExTaswyaDetail_ExTaswya_TransferId] FOREIGN KEY ([TransferId]) REFERENCES [dbo].[ExTaswya] ([TransferId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_ExTreasuryTransfere_EX_Branches_FromBranchID]...';


GO
ALTER TABLE [dbo].[ExTreasuryTransfere] WITH NOCHECK
    ADD CONSTRAINT [FK_ExTreasuryTransfere_EX_Branches_FromBranchID] FOREIGN KEY ([FromBranchID]) REFERENCES [dbo].[EX_Branches] ([BranchID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_ExTreasuryTransfere_EX_Branches_ToBranchID]...';


GO
ALTER TABLE [dbo].[ExTreasuryTransfere] WITH NOCHECK
    ADD CONSTRAINT [FK_ExTreasuryTransfere_EX_Branches_ToBranchID] FOREIGN KEY ([ToBranchID]) REFERENCES [dbo].[EX_Branches] ([BranchID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_ExTreasuryTransfere_Sec_Users_UserId]...';


GO
ALTER TABLE [dbo].[ExTreasuryTransfere] WITH NOCHECK
    ADD CONSTRAINT [FK_ExTreasuryTransfere_Sec_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[Sec_Users] ([UserID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_ExTreasuryTransfere_Treasury_FromTreasuryId]...';


GO
ALTER TABLE [dbo].[ExTreasuryTransfere] WITH NOCHECK
    ADD CONSTRAINT [FK_ExTreasuryTransfere_Treasury_FromTreasuryId] FOREIGN KEY ([FromTreasuryId]) REFERENCES [dbo].[Treasury] ([TreasuryId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_ExTreasuryTransfere_Treasury_ToTreasuryId]...';


GO
ALTER TABLE [dbo].[ExTreasuryTransfere] WITH NOCHECK
    ADD CONSTRAINT [FK_ExTreasuryTransfere_Treasury_ToTreasuryId] FOREIGN KEY ([ToTreasuryId]) REFERENCES [dbo].[Treasury] ([TreasuryId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_ExTreasuryTransfereDetail_Currencies_CurrencyId]...';


GO
ALTER TABLE [dbo].[ExTreasuryTransfereDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_ExTreasuryTransfereDetail_Currencies_CurrencyId] FOREIGN KEY ([CurrencyId]) REFERENCES [dbo].[Currencies] ([CurrencyID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_ExTreasuryTransfereDetail_ExTreasuryTransfere_TransferId]...';


GO
ALTER TABLE [dbo].[ExTreasuryTransfereDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_ExTreasuryTransfereDetail_ExTreasuryTransfere_TransferId] FOREIGN KEY ([TransferId]) REFERENCES [dbo].[ExTreasuryTransfere] ([TransferId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_FinYearsPeriods_FinYears_FinYearId]...';


GO
ALTER TABLE [dbo].[FinYearsPeriods] WITH NOCHECK
    ADD CONSTRAINT [FK_FinYearsPeriods_FinYears_FinYearId] FOREIGN KEY ([FinYearId]) REFERENCES [dbo].[FinYears] ([FinYearId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_SecPermissionTypeBranches_EX_Branches_BranchId]...';


GO
ALTER TABLE [dbo].[SecPermissionTypeBranches] WITH NOCHECK
    ADD CONSTRAINT [FK_SecPermissionTypeBranches_EX_Branches_BranchId] FOREIGN KEY ([BranchId]) REFERENCES [dbo].[EX_Branches] ([BranchID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_SecPermissionTypeBranches_SecPermissionType_PermissionTypeId]...';


GO
ALTER TABLE [dbo].[SecPermissionTypeBranches] WITH NOCHECK
    ADD CONSTRAINT [FK_SecPermissionTypeBranches_SecPermissionType_PermissionTypeId] FOREIGN KEY ([PermissionTypeId]) REFERENCES [dbo].[SecPermissionType] ([PermissionTypeId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_ShiftTracking_Sec_Users_FromUserId]...';


GO
ALTER TABLE [dbo].[ShiftTracking] WITH NOCHECK
    ADD CONSTRAINT [FK_ShiftTracking_Sec_Users_FromUserId] FOREIGN KEY ([FromUserId]) REFERENCES [dbo].[Sec_Users] ([UserID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_ShiftTracking_Sec_Users_ToUserId]...';


GO
ALTER TABLE [dbo].[ShiftTracking] WITH NOCHECK
    ADD CONSTRAINT [FK_ShiftTracking_Sec_Users_ToUserId] FOREIGN KEY ([ToUserId]) REFERENCES [dbo].[Sec_Users] ([UserID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_ShiftTracking_Treasury_TreasuryId]...';


GO
ALTER TABLE [dbo].[ShiftTracking] WITH NOCHECK
    ADD CONSTRAINT [FK_ShiftTracking_Treasury_TreasuryId] FOREIGN KEY ([TreasuryId]) REFERENCES [dbo].[Treasury] ([TreasuryId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Treasury_EX_Branches_BranchID]...';


GO
ALTER TABLE [dbo].[Treasury] WITH NOCHECK
    ADD CONSTRAINT [FK_Treasury_EX_Branches_BranchID] FOREIGN KEY ([BranchID]) REFERENCES [dbo].[EX_Branches] ([BranchID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_Treasury_Sec_Users_OwnerId]...';


GO
ALTER TABLE [dbo].[Treasury] WITH NOCHECK
    ADD CONSTRAINT [FK_Treasury_Sec_Users_OwnerId] FOREIGN KEY ([OwnerId]) REFERENCES [dbo].[Sec_Users] ([UserID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_Treasury_A_Accounts_AccountId]...';


GO
ALTER TABLE [dbo].[Treasury] WITH NOCHECK
    ADD CONSTRAINT [FK_Treasury_A_Accounts_AccountId] FOREIGN KEY ([AccountId]) REFERENCES [dbo].[A_Accounts] ([AccountID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_TreasuryDealers_Sec_Users_UserId]...';


GO
ALTER TABLE [dbo].[TreasuryDealers] WITH NOCHECK
    ADD CONSTRAINT [FK_TreasuryDealers_Sec_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[Sec_Users] ([UserID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_TreasuryDealers_Treasury_TreasuryId]...';


GO
ALTER TABLE [dbo].[TreasuryDealers] WITH NOCHECK
    ADD CONSTRAINT [FK_TreasuryDealers_Treasury_TreasuryId] FOREIGN KEY ([TreasuryId]) REFERENCES [dbo].[Treasury] ([TreasuryId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_UserSetting_Sec_Users_UserId]...';


GO
ALTER TABLE [dbo].[UserSetting] WITH NOCHECK
    ADD CONSTRAINT [FK_UserSetting_Sec_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[Sec_Users] ([UserID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_UserSetting_Setting_SettingID]...';


GO
ALTER TABLE [dbo].[UserSetting] WITH NOCHECK
    ADD CONSTRAINT [FK_UserSetting_Setting_SettingID] FOREIGN KEY ([SettingID]) REFERENCES [dbo].[Setting] ([SettingID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_WFListOfApprovals_EX_Branches_BranchID]...';


GO
ALTER TABLE [dbo].[WFListOfApprovals] WITH NOCHECK
    ADD CONSTRAINT [FK_WFListOfApprovals_EX_Branches_BranchID] FOREIGN KEY ([BranchID]) REFERENCES [dbo].[EX_Branches] ([BranchID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_WFListOfApprovals_WFRequestType_RequestTypeId]...';


GO
ALTER TABLE [dbo].[WFListOfApprovals] WITH NOCHECK
    ADD CONSTRAINT [FK_WFListOfApprovals_WFRequestType_RequestTypeId] FOREIGN KEY ([RequestTypeId]) REFERENCES [dbo].[WFRequestType] ([RequestTypeId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_WFRequest_EX_Branches_BranchID]...';


GO
ALTER TABLE [dbo].[WFRequest] WITH NOCHECK
    ADD CONSTRAINT [FK_WFRequest_EX_Branches_BranchID] FOREIGN KEY ([BranchID]) REFERENCES [dbo].[EX_Branches] ([BranchID]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_WFRequest_Sec_Users_UserId]...';


GO
ALTER TABLE [dbo].[WFRequest] WITH NOCHECK
    ADD CONSTRAINT [FK_WFRequest_Sec_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[Sec_Users] ([UserID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_WFRequest_WFRequestType_RequestTypeId]...';


GO
ALTER TABLE [dbo].[WFRequest] WITH NOCHECK
    ADD CONSTRAINT [FK_WFRequest_WFRequestType_RequestTypeId] FOREIGN KEY ([RequestTypeId]) REFERENCES [dbo].[WFRequestType] ([RequestTypeId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_WFRequestDetails_Sec_Users_UserId]...';


GO
ALTER TABLE [dbo].[WFRequestDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_WFRequestDetails_Sec_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[Sec_Users] ([UserID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_WFRequestDetails_WFRequest_RequestId]...';


GO
ALTER TABLE [dbo].[WFRequestDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_WFRequestDetails_WFRequest_RequestId] FOREIGN KEY ([RequestId]) REFERENCES [dbo].[WFRequest] ([RequestId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_A_Accounts_ACostCenter_CostCenterID]...';


GO
ALTER TABLE [dbo].[A_Accounts] WITH NOCHECK
    ADD CONSTRAINT [FK_A_Accounts_ACostCenter_CostCenterID] FOREIGN KEY ([CostCenterID]) REFERENCES [dbo].[ACostCenter] ([CostCenterId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_EX_ClientJob_ExClientSectors_ClientSectorId]...';


GO
ALTER TABLE [dbo].[EX_ClientJob] WITH NOCHECK
    ADD CONSTRAINT [FK_EX_ClientJob_ExClientSectors_ClientSectorId] FOREIGN KEY ([ClientSectorId]) REFERENCES [dbo].[ExClientSectors] ([ClientSectorId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Sec_Users_PermissionTypes]...';


GO
ALTER TABLE [dbo].[Sec_Users] WITH NOCHECK
    ADD CONSTRAINT [FK_Sec_Users_PermissionTypes] FOREIGN KEY ([PermissionTypeId]) REFERENCES [dbo].[SecPermissionType] ([PermissionTypeId]);


GO
PRINT N'Refreshing View [dbo].[EX_SuppliersAsBranches]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[EX_SuppliersAsBranches]';


GO
PRINT N'Refreshing View [dbo].[EX_SuppliersWithoutBranches]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[EX_SuppliersWithoutBranches]';


GO
PRINT N'Creating Function [dbo].[Exchange_GetBalance]...';


GO
CREATE FUNCTION [dbo].[Exchange_GetBalance](@AccountID int, @ValuationDate datetime,@branchId as int =1)
	RETURNS decimal(18,2)
AS
begin
	
	declare @CurrencyBalance decimal(18,2)


	select @CurrencyBalance = isnull(sum(Debit),0) - isnull(sum(Credit),0)  from A_JVs a inner join A_JVsDetails ad on ad.JVID=a.JVID
	where JVDate <=COALESCE(@ValuationDate,JVDate ) and
	(AccountID =@AccountID or
	AccountID in (select tree.AccountID from A_Accounts tree where ParentID=@AccountID  ) or 
	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID=@AccountID  )  ) or
	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID=@AccountID  )  )  )  or
	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID in (select tree4.AccountID from A_Accounts tree4 where tree4.ParentID=@AccountID  )  )  )  ) 
	)
	and a.BranchID = COALESCE(@branchId,a.BranchID )

		return @CurrencyBalance

end
GO
PRINT N'Creating Function [dbo].[Exchange_GetBalance_Credit]...';


GO
create FUNCTION [dbo].[Exchange_GetBalance_Credit](@AccountID int, @ValuationDate datetime,@branchId as int =1)
	RETURNS decimal(18,2)
AS
begin
	
	declare @CurrencyBalance decimal(18,2)


	select @CurrencyBalance =  isnull(sum(Credit),0)  from A_JVs a inner join A_JVsDetails ad on ad.JVID=a.JVID
	where JVDate <=COALESCE(@ValuationDate,JVDate ) and
	(AccountID =@AccountID or
	AccountID in (select tree.AccountID from A_Accounts tree where ParentID=@AccountID  ) or 
	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID=@AccountID  )  ) or
	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID=@AccountID  )  )  )  or
	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID in (select tree4.AccountID from A_Accounts tree4 where tree4.ParentID=@AccountID  )  )  )  ) 
	)
	and a.BranchID = COALESCE(@branchId,a.BranchID )

		return @CurrencyBalance

end
GO
PRINT N'Creating Function [dbo].[Exchange_GetBalance_Debit]...';


GO
create FUNCTION [dbo].[Exchange_GetBalance_Debit](@AccountID int, @ValuationDate datetime,@branchId as int =1)
	RETURNS decimal(18,2)
AS
begin
	
	declare @CurrencyBalance decimal(18,2)


	select @CurrencyBalance = isnull(sum(Debit),0)   from A_JVs a inner join A_JVsDetails ad on ad.JVID=a.JVID
	where JVDate <=COALESCE(@ValuationDate,JVDate ) and
	(AccountID =@AccountID or
	AccountID in (select tree.AccountID from A_Accounts tree where ParentID=@AccountID  ) or 
	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID=@AccountID  )  ) or
	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID=@AccountID  )  )  )  or
	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID in (select tree4.AccountID from A_Accounts tree4 where tree4.ParentID=@AccountID  )  )  )  ) 
	)
	and a.BranchID = COALESCE(@branchId,a.BranchID )

		return @CurrencyBalance

end
GO
PRINT N'Creating Function [dbo].[Exchange_GetBalance2]...';


GO
CREATE FUNCTION [dbo].[Exchange_GetBalance2](@AccountID int, @FromDate datetime, @ToDate datetime,@branchId as int =1)
	RETURNS decimal(18,2)
AS
begin
	
	declare @CurrencyBalance decimal(18,2)


	select @CurrencyBalance = isnull(sum(Debit),0) - isnull(sum(Credit),0)  from A_JVs a inner join A_JVsDetails ad on ad.JVID=a.JVID
	where JVDate <=COALESCE(@ToDate,JVDate ) and JVDate >=COALESCE(@FromDate,JVDate ) and
	(AccountID =@AccountID or
	AccountID in (select tree.AccountID from A_Accounts tree where ParentID=@AccountID  ) or 
	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID=@AccountID  )  ) or
	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID=@AccountID  )  )  )  or
	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID in (select tree4.AccountID from A_Accounts tree4 where tree4.ParentID=@AccountID  )  )  )  ) 
	)
	and a.BranchID = COALESCE(@branchId,a.BranchID )
		return @CurrencyBalance

end
GO
PRINT N'Creating Function [dbo].[Exchange_GetBalance2_Credit]...';


GO
create FUNCTION [dbo].[Exchange_GetBalance2_Credit](@AccountID int, @FromDate datetime, @ToDate datetime,@branchId as int =1)
	RETURNS decimal(18,2)
AS
begin
	
	declare @CurrencyBalance decimal(18,2)


	select @CurrencyBalance =  isnull(sum(Credit),0)  from A_JVs a inner join A_JVsDetails ad on ad.JVID=a.JVID
	where JVDate <=COALESCE(@ToDate,JVDate ) and JVDate >=COALESCE(@FromDate,JVDate ) and
	(AccountID =@AccountID or
	AccountID in (select tree.AccountID from A_Accounts tree where ParentID=@AccountID  ) or 
	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID=@AccountID  )  ) or
	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID=@AccountID  )  )  )  or
	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID in (select tree4.AccountID from A_Accounts tree4 where tree4.ParentID=@AccountID  )  )  )  ) 
	)
	and a.BranchID = COALESCE(@branchId,a.BranchID )
		return @CurrencyBalance

end
GO
PRINT N'Creating Function [dbo].[Exchange_GetBalance2_Debit]...';


GO
create FUNCTION [dbo].[Exchange_GetBalance2_Debit](@AccountID int, @FromDate datetime, @ToDate datetime,@branchId as int =1)
	RETURNS decimal(18,2)
AS
begin
	
	declare @CurrencyBalance decimal(18,2)


	select @CurrencyBalance =  isnull(sum(Debit),0)  from A_JVs a inner join A_JVsDetails ad on ad.JVID=a.JVID
	where JVDate <=COALESCE(@ToDate,JVDate ) and JVDate >=COALESCE(@FromDate,JVDate ) and
	(AccountID =@AccountID or
	AccountID in (select tree.AccountID from A_Accounts tree where ParentID=@AccountID  ) or 
	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID=@AccountID  )  ) or
	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID=@AccountID  )  )  )  or
	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID in (select tree4.AccountID from A_Accounts tree4 where tree4.ParentID=@AccountID  )  )  )  ) 
	)
	and a.BranchID = COALESCE(@branchId,a.BranchID )
		return @CurrencyBalance

end
GO
PRINT N'Refreshing Function [dbo].[ISIL_GetList]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ISIL_GetList]';


GO
PRINT N'Creating Function [dbo].[EX_Clients_GetSuspiciousLocal]...';


GO
CREATE FUNCTION [dbo].[EX_Clients_GetSuspiciousLocal]
(
	@ClientName nvarchar(100),
	@Percentage int
)
	RETURNS @T TABLE(LocallyWantedID int, NID nvarchar(20), Name nvarchar(100), Suspicious decimal(5,2))
BEGIN
	insert into @T
	select LocallyWantedID, NID, Name, dbo.GetNameSimilarity(Name, @ClientName) Suspicious
	from EX_LocallyWanted
	where dbo.Trim(@ClientName)!='' and (dbo.GetNameSimilarity(Name, @ClientName)>=@Percentage)
	order by dbo.GetNameSimilarity(Name, @ClientName) desc, Name
	RETURN
END
GO
PRINT N'Creating Procedure [dbo].[Exchange_after_add_CurrencyBase]...';


GO
CREATE proc [dbo].[Exchange_after_add_CurrencyBase]  @ID as int =122
as
declare @max_id as int = (select isnull(max(CurrencyID),0) from Currencies)
insert into currencies (CurrencyID,CurrencyCode,CurrencyNameEn,CurrencyNameAr,[Sign],SalePrice
						,BuyPrice,ValuationPrice,OpeningBalance,OpeningPrice,ShowInPricesScreen
						,BranchID,IsActive,IsDeleted,TreasuryId)
select  @max_id + ROW_NUMBER() OVER(ORDER BY  c.CurrencyCode) ,c.CurrencyCode,c.CurrencyNameEn,c.CurrencyNameAr,c.[Sign],0 SalePrice
						,0 BuyPrice,0 ValuationPrice,0 OpeningBalance,0 OpeningPrice, 0 ShowInPricesScreen
						,t.BranchID,0 IsActive,0 IsDeleted,t.TreasuryId
						from treasury t inner join CurrencyBase c on c.Id =@ID 
						and c.currencycode <> 0
						and convert (nvarchar(50),c.CurrencyCode) + '***' + convert (nvarchar(50),t.TreasuryId) 
						not in 
						(select convert (nvarchar(50),cc.CurrencyCode) + '***' + convert (nvarchar(50),cc.TreasuryId) 
						from Currencies cc where isnull(cc.IsDeleted,0) = 0)

						and isnull(c.IsDeleted,0) = 0
GO
PRINT N'Creating Procedure [dbo].[Exchange_after_add_treasury]...';


GO
CREATE proc [dbo].[Exchange_after_add_treasury]
--declare
@TreasuryId as int =10
as
declare @max_id as int = (select isnull(max(CurrencyID),0) from Currencies)
insert into currencies (CurrencyID,CurrencyCode,CurrencyNameEn,CurrencyNameAr,[Sign],SalePrice
						,BuyPrice,ValuationPrice,OpeningBalance,OpeningPrice,ShowInPricesScreen
						,BranchID,IsActive,IsDeleted,TreasuryId)
select  @max_id + ROW_NUMBER() OVER(ORDER BY  c.CurrencyCode) ,c.CurrencyCode,c.CurrencyNameEn,c.CurrencyNameAr,c.[Sign],0 SalePrice
						,0 BuyPrice,0 ValuationPrice,0 OpeningBalance,0 OpeningPrice, 0 ShowInPricesScreen
						,t.BranchID,0 IsActive,0 IsDeleted,t.TreasuryId
						from treasury t inner join CurrencyBase c on t.treasuryid =@treasuryid 
						and c.currencycode <> 0
						and convert (nvarchar(50),c.CurrencyCode) + '***' + convert (nvarchar(50),t.TreasuryId) 
						not in 
						(select convert (nvarchar(50),cc.CurrencyCode) + '***' + convert (nvarchar(50),cc.TreasuryId) 
						from Currencies cc where isnull(cc.IsDeleted,0) = 0)

						and isnull(c.IsDeleted,0) = 0
GO
PRINT N'Creating Procedure [dbo].[Exchange_AssetBalance]...';


GO
CREATE  Proc [dbo].[Exchange_AssetBalance] 
@Date as datetime ='2028-01-01 23:59:59',
@WayType  as int =null,
@branchId  as int =0
as


if @branchId = 0 
begin
set @branchId = null
end
--العملات
select sum(Balance)Amount , max(rate) Price,sum(Balance) * max(rate)  Total,cc2.CurrencyNameAr CurrName,max(cc.ActionTime) Date from EX_CurrenciesBVR cc inner join Currencies cc2 on cc.CurrencyID = cc2.CurrencyID
where cc.ID in
(
select m.id from(
select max(c.id) id,c.CurrencyID from EX_CurrenciesBVR c inner join Currencies c2 on c.CurrencyID = c2.CurrencyID
where c.ActionTime <= @date and c2.BranchID= COALESCE(@branchId,c2.BranchID )
group by c.CurrencyID)m
)
group by cc2.CurrencyCode,cc2.CurrencyNameAr


--banks

select 
b.ActionTime Date,
b.balance balance,
ba.NameAr BankName
from BanksBvr b
inner join BankAccount ba on ba.BankAccountId = b.BankAccountId
where b.BanksBvrId in
(
select 
max(bb.BanksBvrId)
from BanksBvr bb
where   ba.Date <= COALESCE(@date,ba.Date )
group by bb.BankAccountId
)
--suppliers
select @date date, SupplierNameAr ClientName, [dbo].[Exchange_GetBalance](AccountID ,@date,@branchId ) as balance from EX_Suppliers
where AccountID is not null


 -- branches

 select sum(Balance) * max(rate)  balance ,b.BranchNameAr BranchName ,max(cc.ActionTime) Date from EX_CurrenciesBVR cc 
 inner join Currencies cc2 on cc.CurrencyID = cc2.CurrencyID
  inner join EX_Branches b on b.BranchID = cc2.BranchID
where cc.ID in
(
select m.id from(
select max(c.id) id,c.CurrencyID from EX_CurrenciesBVR c inner join Currencies c2 on c.CurrencyID = c2.CurrencyID
where c.ActionTime <= @date 
group by c.CurrencyID)m
)
group by cc2.BranchID,b.BranchNameAr
GO
PRINT N'Creating Procedure [dbo].[Exchange_Central_statment]...';


GO
CREATE Proc [dbo].[Exchange_Central_statment] 
@branchId as int =1,
@Date as datetime ='2026-01-01 23:59:59',
@AccountLevel as int =2

as
select AccountID into #allAccountId from A_Accounts where AccountID in(select aa.AccountID from A_Accounts aa where aa.ParentID is null) or
	AccountID in (select tree.AccountID from A_Accounts tree where ParentID in(select aa.AccountID from A_Accounts aa where aa.ParentID is null)  ) or
	(AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in(select aa.AccountID from A_Accounts aa where aa.ParentID is null)  )  ) and @AccountLevel >= 2) or
	(	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID  in(select aa.AccountID from A_Accounts aa where aa.ParentID is null)  )  )  ) and @AccountLevel >= 3 ) or
	(AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID in (select tree4.AccountID from A_Accounts tree4 where tree4.ParentID in(select aa.AccountID from A_Accounts aa where aa.ParentID is null)  )  )  )  )and @AccountLevel >= 4 )


select AccountID,isnull(ParentID,0)ParentID,AccountName,
dbo.[Exchange_GetBalance](AccountID,@Date,@branchId) [Value] 
from A_Accounts 
where AccountID in (select al.AccountID from #allAccountId as al)
GO
PRINT N'Creating Procedure [dbo].[Exchange_CurrenciesBalance]...';


GO
CREATE Proc [dbo].[Exchange_CurrenciesBalance] @date as datetime ='2025-01-01 23:59:59',@branchId as int =1
,@Userid as int=2244,@Type as int =1 --1 total  --2 in box 3-in cashiers --4 in Specific chashier
as
if (@Type = 1 or @Type = 2 )
begin 
--total
--drop table #balanceInTotal
select 
c.CurrencyCode
, t.TreasuryNameAr + ' ' +c.CurrencyNameAr   as CurrencyNameAr
,convert (decimal(18,4), bvr.Balance) Balance
,convert (decimal(18,4),bvr.Rate) Rate 
, convert (decimal(18,4),bvr.Balance * bvr.Rate) TotalBalance  
,ActionTime 

into #balanceInTotal
from EX_CurrenciesBVR bvr inner join Currencies c on c.CurrencyID = bvr.CurrencyID 
inner join Treasury t on c.TreasuryId = t.TreasuryId
where 
 bvr.id in (select max (bvr2.id) from EX_CurrenciesBVR bvr2 inner join Currencies c2 on c2.CurrencyID = bvr2.CurrencyID 
			--where c2.BranchID  = 1 and bvr2.ActionTime <= '2023-01-01 23:59:59'
			where c2.BranchID  = @branchId and bvr2.ActionTime <= @date
			group by c2.CurrencyCode,c2.CurrencyNameAr,c2.TreasuryId  )
 order by CurrencyCode
 if (@Type = 1)
  begin select *, 'الاجمالي' as [Type] from #balanceInTotal  end
 end 
--With Cashiers = internaltrans - invoices
if (@Type = 3 or  @Type = 2  )
begin
--drop table #balanceInCashier
--drop table #balanceInCashier2
 --كل التحويلات الباقيه معاه داخليه  + عليات البيع والشراء التي تم تنفيذها
 select *  into #balanceInCashier from 
 (
	select id.TransferAmount ,id.CurrencyID,id.TransferType,i.TransferDate as ActionTime
	from EX_InternalTransfers i 
	inner join EX_InternalTransfersDetails id on id.TransferID = i.TransferID
	where i.BranchID  =  @branchId and id.TransferTime <= @date 
	--where i.BranchID  = 1 and id.TransferTime <= '2023-01-01 23:59:59' and i.UserId =2244
  union all
	select id.Amount ,id.CurrencyID,i.InvoiceTypeID,i.InvoiceTime
	from EX_Invoices i 
	inner join EX_InvoicesDetails id on id.InvoiceID = i.InvoiceID
	where i.BranchID  =  @branchId and i.InvoiceTime <= @date 
	--where i.BranchID  = 1 and i.InvoiceTime <= '2023-01-01 23:59:59' and i.UserId =2244
	  union all
	select id.Amount ,id.CurrencyID,i.InvoiceTypeID,i.InvoiceTime
	from EX_WholeInvoices i 
	inner join EX_WholeInvoicesDetails id on id.InvoiceID = i.InvoiceID
	where i.BranchID  = @branchId and i.InvoiceTime <= @date 
	--where i.BranchID  = 1 and i.InvoiceTime <= '2023-01-01 23:59:59' and i.UserId =2244
 )aa
  select c.CurrencyCode,c.CurrencyNameAr  
 , convert (decimal(18,4),sum(id.TransferAmount * (case when id.TransferType = 1then -1 else 1 end))) Balance  ,convert (decimal(18,4),sum(c.SalePrice)) Rate
 ,   convert (decimal(18,4),sum(id.TransferAmount * (case when id.TransferType = 1then -1 else 1 end))) * convert (decimal(18,4),sum(c.SalePrice)) TotalBalance
 ,max(id.ActionTime) ActionTime
 into #balanceInCashier2
 from #balanceInCashier id 
 inner join Currencies c on c.CurrencyID = id.CurrencyID 
 group by c.CurrencyCode,c.CurrencyNameAr 
  order by c.CurrencyCode
   if (@Type = 3)
 begin  select *, 'كل الصرافين' as [Type] from #balanceInCashier2  order by CurrencyCode end
end 
--specific cashier
if (@Type = 4 )
begin
 --كل التحويلات الباقيه معاه داخليه  + عليات البيع والشراء التي تم تنفيذها
 select *  into #balanceInCashier3 from 
 (
	select id.TransferAmount ,id.CurrencyID,id.TransferType,i.TransferDate as ActionTime
	from EX_InternalTransfers i 
	inner join EX_InternalTransfersDetails id on id.TransferID = i.TransferID
	where i.BranchID  =  @branchId and id.TransferTime <= @date and i.UserId =@Userid
	--where i.BranchID  = 1 and id.TransferTime <= '2023-01-01 23:59:59' and i.UserId =2244
  union all
	select id.Amount ,id.CurrencyID,i.InvoiceTypeID,i.InvoiceTime
	from EX_Invoices i 
	inner join EX_InvoicesDetails id on id.InvoiceID = i.InvoiceID
	where i.BranchID  =  @branchId and i.InvoiceTime <= @date and i.UserId =@Userid
	--where i.BranchID  = 1 and i.InvoiceTime <= '2023-01-01 23:59:59' and i.UserId =2244
	  union all
	select id.Amount ,id.CurrencyID,i.InvoiceTypeID,i.InvoiceTime
	from EX_WholeInvoices i 
	inner join EX_WholeInvoicesDetails id on id.InvoiceID = i.InvoiceID
	where i.BranchID  = @branchId and i.InvoiceTime <= @date and i.UserId =@Userid
	--where i.BranchID  = 1 and i.InvoiceTime <= '2023-01-01 23:59:59' and i.UserId =2244
 )aa
  select c.CurrencyCode,c.CurrencyNameAr  
 , convert (decimal(18,4),sum(id.TransferAmount * (case when id.TransferType = 1then -1 else 1 end))) Balance  ,convert (decimal(18,4),sum(c.SalePrice)) Rate
 ,   convert (decimal(18,4),sum(id.TransferAmount * (case when id.TransferType = 1then -1 else 1 end))) * convert (decimal(18,4),sum(c.SalePrice)) TotalBalance
 ,max(id.ActionTime) ActionTime
 into #balanceInCashier4
 from #balanceInCashier3 id 
 inner join Currencies c on c.CurrencyID = id.CurrencyID 
 group by c.CurrencyCode,c.CurrencyNameAr 
  order by c.CurrencyCode
  select *, 'صراف رقم ' + convert(nvarchar(50),@Userid)  as [Type] from #balanceInCashier4  order by CurrencyCode
end 
  --in  box  = BVR - In casier
  --drop table #balanceInSandook
 --كل التحويلات الباقيه معاه داخليه  + عليات البيع والشراء التي تم تنفيذها
 if (@Type = 2 )
 begin
 select  CurrencyCode	,CurrencyNameAr	,sum(Balance)	Balance,max(Rate) Rate,sum(TotalBalance) TotalBalance,max(ActionTime) ActionTime
 into #balanceInSandook
   from 
 (
select CurrencyCode	,CurrencyNameAr	,Balance	,Rate	,TotalBalance	,ActionTime from #balanceInTotal
union all 
select CurrencyCode	,CurrencyNameAr	,-1 * Balance	,Rate	,-1 *TotalBalance	,ActionTime from #balanceInCashier2
) main group by CurrencyCode	,CurrencyNameAr 
select *, 'في الصندوق' as [Type]  from #balanceInSandook  order by CurrencyCode
end
GO
PRINT N'Creating Procedure [dbo].[Exchange_CurrencyMovement]...';


GO
create Proc [dbo].[Exchange_CurrencyMovement] 
@Fdate as datetime ='2003-01-01 23:59:59'
,@Tdate as datetime ='2025-01-01 23:59:59'
,@branchId as int =1
as
	select bvr.CurrencyID,c.CurrencyCode ,c.CurrencyNameAr  , max(bvr.ID) MaxID , min(bvr.ID) MinID  
	,sum(case when bvr.Amount > 0 then  bvr.Amount else 0 end) buy
	,sum(case when bvr.Amount <= 0 then  bvr.Amount else 0 end) sale
	into #main
	from EX_CurrenciesBVR bvr
	inner join Currencies c on c.CurrencyID = bvr.CurrencyID
	where bvr.ActionTime between @Fdate and @Tdate
	and c.BranchID=@branchId 
	group by bvr.CurrencyID ,c.CurrencyCode, c.BranchID,c.CurrencyNameAr 
	select c.CurrencyCode,c.CurrencyNameAr ,Minbvr.Balance Prev_Balance ,c.buy Buy_Quantity,c.sale Sale_Quantity,Maxbvr.Balance current_Balance
	from #main c 
	inner  join EX_CurrenciesBVR Minbvr on Minbvr.ID= c.MinID
	inner join EX_CurrenciesBVR Maxbvr on Maxbvr.ID= c.MaxID
	order by c.CurrencyCode
GO
PRINT N'Creating Procedure [dbo].[Exchange_DialyKoyod]...';


GO
CREATE Proc [dbo].[Exchange_DialyKoyod] 
@branchId as int =null,
@FromDate as datetime ='2020-01-01 23:59:59',
@ToDate as datetime ='2025-01-01 23:59:59',
@JVTypeID  as int =null,
@JVStatusID as int =null

as
if @JVStatusID = 0 
begin
set @JVStatusID = null
end

if @JVTypeID = 0 
begin
set @JVTypeID = null
end

if @branchId = 0 
begin
set @branchId = null
end
select 
a.Jvid,

a.Jvno,

a.Jvdate,

a.Jvtime,

a.JvtypeId,

a.JvstatusId,

a.Remarks,

a.Generated,

a.InvoiceId,

a.WholeInvoiceId,

a.CashFlowId,

a.BranchTransferId,

a.TaswyaTransferId,

a.BranchID,

a.TreasuryTransferId,
a.IsDeleted,

t.JVTypeNameAr JvtypeName,

s.StatusNameAr JvstatusName,
ad.Credit,
ad.Debit,
isnull(ad.ForeignCredit,0) ForeignCredit,
isnull(ad.ForeignDebit,0) ForeignDebit,
tt.AccountName
,cb.CurrencyNameAr
from A_JVs a inner join A_JVsDetails ad on a.JVID = ad.JVID
inner join A_JVType t on t.JVTypeID= a.JVTypeID
inner join A_JVStatus s on s.StatusID= a.JVStatusID
inner join Currencies cb on cb.CurrencyID= ad.CurrencyID
inner join A_Accounts tt on tt.AccountID= ad.AccountID
where a.BranchID = COALESCE(@branchId,a.BranchID )

and a.JVDate >= COALESCE(@FromDate,a.JVDate )
and a.JVDate <= COALESCE(@ToDate,a.JVDate )
and a.JVTypeID = COALESCE(@JVTypeID,a.JVTypeID )
and a.JVStatusID = COALESCE(@JVStatusID,a.JVStatusID )
GO
PRINT N'Creating Procedure [dbo].[Exchange_Income_St]...';


GO
CREATE Proc [dbo].[Exchange_Income_St] 
@branchId as int =1,
@FromDate as datetime ='2020-01-01 23:59:59',
@ToDate as datetime ='2025-01-01 23:59:59'


as
select AccountID,AccountName,dbo.[Exchange_GetBalance2_Debit](AccountID,@fromdate,@todate,@branchId) Debit,dbo.[Exchange_GetBalance2_Credit](AccountID,@fromdate,@todate,@branchId) Credit
,dbo.[Exchange_GetBalance2](AccountID,@fromdate,@todate,@branchId)  balance from  A_Accounts 
where AccountID in (
select s.AccountID from AJvAccountSetting s where s.AccountName in ('Sales','LastStock','BUYS','FirstStock','Branches')
)
order by AccountID
GO
PRINT N'Creating Procedure [dbo].[Exchange_Kashf_Tahlely]...';


GO
CREATE Proc [dbo].[Exchange_Kashf_Tahlely] 
@branchId as int =1,
@FromDate as datetime ='2020-01-01 23:59:59',
@ToDate as datetime ='2025-01-01 23:59:59',
@ShowType  as int =2,
@AccountLevel as int =2,
@AccountID as int =4

as
select AccountID into #allAccountId from A_Accounts where AccountID =@AccountID or
	AccountID in (select tree.AccountID from A_Accounts tree where ParentID=@AccountID  ) or
	(AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID=@AccountID  )  ) and @AccountLevel >= 2) or
	(	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID=@AccountID  )  )  ) and @AccountLevel >= 3 ) or
	(AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID in (select tree4.AccountID from A_Accounts tree4 where tree4.ParentID=@AccountID  )  )  )  )and @AccountLevel >= 4 )

--حسابات مجمعه
if @ShowType = 1 
begin
select AccountID,isnull(ParentID,0)ParentID,AccountName,
dbo.[Exchange_GetBalance](AccountID,dateadd(dd,-1,@FromDate),@branchId) Prev_balance ,
dbo.[Exchange_GetBalance2](AccountID,@FromDate,@toDate,@branchId) Plus_Amount,
dbo.[Exchange_GetBalance](AccountID,dateadd(dd,-1,@FromDate),@branchId) + dbo.[Exchange_GetBalance2](AccountID,@FromDate,@toDate,@branchId) as balance
from A_Accounts where AccountID in (select al.AccountID from #allAccountId as al)
--AccountID =@AccountID or
--	AccountID in (select tree.AccountID from A_Accounts tree where ParentID=@AccountID  ) or
--	(AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID=@AccountID  )  ) and @AccountLevel >= 2) or
--	(	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID=@AccountID  )  )  ) and @AccountLevel >= 3 ) or
--	(AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID in (select tree4.AccountID from A_Accounts tree4 where tree4.ParentID=@AccountID  )  )  )  )and @AccountLevel >= 4 )
end

if @ShowType = 2
begin

select mm.* from
(
select AccountID,AccountName,@FromDate date,0 Debit,0 Credit,dbo.[Exchange_GetBalance](AccountID,DATEADD (dd,-1,@fromdate),@branchId)  balance,'رصيد سابق' Remarks,'' JVTypeNameAr,0 JVNo from  A_Accounts where AccountID in (select al.AccountID from #allAccountId as al)
union all
select ad.AccountID,tree.AccountName, a.JVDate date,ad.Debit,ad.Credit
,dbo.[Exchange_GetBalance](ad.AccountID,a.JVDate,@branchId)  balance ,a.Remarks,t.JVTypeNameAr,a.JVNo
from A_JVs a inner join A_JVsDetails ad on a.JVID = ad.JVID
inner join A_JVType t on t.JVTypeID= a.JVTypeID
inner join A_JVStatus s on s.StatusID= a.JVStatusID
inner join A_Accounts tree on tree.AccountID=ad.AccountID
where a.BranchID = COALESCE(@branchId,a.BranchID )
and a.JVDate >= COALESCE(@FromDate,a.JVDate )
and a.JVDate <= COALESCE(@ToDate,a.JVDate )
and 
(
ad.AccountID in (select al.AccountID from #allAccountId as al)

--ad.AccountID =@AccountID or
--	ad.AccountID in (select tree.AccountID from A_Accounts tree where ParentID=@AccountID  ) or
--	(ad.AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID=@AccountID  )  ) and @AccountLevel >= 2) or
--	(	ad.AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID=@AccountID  )  )  ) and @AccountLevel >= 3 ) or
--	(ad.AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID in (select tree4.AccountID from A_Accounts tree4 where tree4.ParentID=@AccountID  )  )  )  )and @AccountLevel >= 4 )

)
)mm order by mm.AccountID , mm.date
end
--if @JVStatusID = 0 
--begin
--set @JVStatusID = null
--end

--if @JVTypeID = 0 
--begin
--set @JVTypeID = null
--end

--if @branchId = 0 
--begin
--set @branchId = null
--end
--select 
--a.Jvid,

--a.Jvno,

--a.Jvdate,

--a.Jvtime,

--a.JvtypeId,

--a.JvstatusId,

--a.Remarks,

--a.Generated,

--a.InvoiceId,

--a.WholeInvoiceId,

--a.CashFlowId,

--a.BranchTransferId,

--a.TaswyaTransferId,

--a.BranchID,

--a.TreasuryTransferId,
--a.IsDeleted,

--t.JVTypeNameAr JvtypeName,

--s.StatusNameAr JvstatusName,
--ad.Credit,
--ad.Debit,
--isnull(ad.ForeignCredit,0) ForeignCredit,
--isnull(ad.ForeignDebit,0) ForeignDebit
--from A_JVs a inner join A_JVsDetails ad on a.JVID = ad.JVID
--inner join A_JVType t on t.JVTypeID= a.JVTypeID
--inner join A_JVStatus s on s.StatusID= a.JVStatusID
--where a.BranchID = COALESCE(@branchId,a.BranchID )
--and a.JVDate >= COALESCE(@FromDate,a.JVDate )
--and a.JVDate <= COALESCE(@ToDate,a.JVDate )
--and a.JVTypeID = COALESCE(@JVTypeID,a.JVTypeID )
--and a.JVStatusID = COALESCE(@JVStatusID,a.JVStatusID )
GO
PRINT N'Creating Procedure [dbo].[Exchange_KashfHesab]...';


GO
CREATE Proc [dbo].[Exchange_KashfHesab] 
@FromDate as datetime ='2020-01-01 23:59:59',
@ToDate as datetime ='2025-01-01 23:59:59',
@BankAccountId  as int =null,
@SupplierId  as int =null
as
if @BankAccountId = 0 
begin
set @BankAccountId = null
end

if @SupplierId = 0 
begin
set @SupplierId = null
end

select 
convert(nvarchar(50),b.ActionId) AccountId,
b.ActionTime ,
b.ActionType [Desc],
case when b.amount >= 0 then b.amount else 0 end  Debit,
case when b.amount < 0 then b.amount else 0 end  credit,
b.balance balance,
convert(nvarchar(50),ba.BankId) BankId,
ba.NameAr BankName
from BanksBvr b
inner join BankAccount ba on ba.BankAccountId = b.BankAccountId
where  ba.BankAccountId = COALESCE(@BankAccountId,ba.BankAccountId )
and  ba.Date >= COALESCE(@FromDate,ba.Date )
and ba.Date <= COALESCE(@ToDate,ba.Date )
GO
PRINT N'Creating Procedure [dbo].[Exchange_mezan]...';


GO
CREATE Proc [dbo].[Exchange_mezan] 
@branchId as int =1,
@FromDate as datetime ='2020-01-01 23:59:59',
@ToDate as datetime ='2025-01-01 23:59:59',
@AccountLevel as int =2

as
select AccountID into #allAccountId from A_Accounts 
where AccountID in( select m.AccountID from A_Accounts m where m.ParentID is null) or
	AccountID in (select tree.AccountID from A_Accounts tree where ParentID in( select m.AccountID from A_Accounts m where m.ParentID is null)  ) or
	(AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in( select m.AccountID from A_Accounts m where m.ParentID is null)  )  ) and @AccountLevel >= 2) or
	(	AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID in( select m.AccountID from A_Accounts m where m.ParentID is null)  )  )  ) and @AccountLevel >= 3 ) or
	(AccountID in (select tree.AccountID from A_Accounts tree where tree.ParentID in (select tree2.AccountID from A_Accounts tree2 where tree2.ParentID in (select tree3.AccountID from A_Accounts tree3 where tree3.ParentID in (select tree4.AccountID from A_Accounts tree4 where tree4.ParentID in( select m.AccountID from A_Accounts m where m.ParentID is null)  )  )  )  )and @AccountLevel >= 4 )


select AccountID,isnull(ParentID,0)ParentID,AccountName,
dbo.[Exchange_GetBalance_Debit](AccountID,dateadd(dd,-1,@FromDate),@branchId) Prev_balance_Debit ,
dbo.[Exchange_GetBalance_Credit](AccountID,dateadd(dd,-1,@FromDate),@branchId) Prev_balance_Credit ,
dbo.[Exchange_GetBalance2_Debit](AccountID,@FromDate,@toDate,@branchId) Plus_Amount_Debit,
dbo.[Exchange_GetBalance2_Credit](AccountID,@FromDate,@toDate,@branchId) Plus_Amount_Credit
into #result
from A_Accounts where AccountID in (select al.AccountID from #allAccountId as al)

select * ,Prev_balance_Debit + Plus_Amount_Debit as balance_Debit ,Prev_balance_Credit + Plus_Amount_Credit as balance_Credit  from #result
GO
PRINT N'Creating Procedure [dbo].[Exchange_Movement]...';


GO
CREATE Proc [dbo].[Exchange_Movement] 
@Fdate as datetime ='2003-01-01 23:59:59'
,@Tdate as datetime ='2025-01-01 23:59:59'
,@branchId as int =1
,@Userid as int=2244
as
	select i.InvoiceNo,t.InvoiceTypeNameAr,c.CurrencyNameAr
	,convert(decimal(18,4),id.ExRate) ExRate
	,convert(decimal(18,4),id.Amount) Amount
	,convert(decimal(18,4),id.Amount*id.ExRate) Total
	,isnull(u.UserNameAr,'') UserNameAr,i.InvoiceTime
,i.InvoiceID,brn.BranchNameAr , 'فواتير افراد' as [type]
	from EX_Invoices i 
	inner join EX_InvoicesDetails id on id.InvoiceID = i.InvoiceID
	inner join Currencies c on id.CurrencyID = c.CurrencyID
	inner join EX_InvoicesType t on t.InvoiceTypeID=i.InvoiceTypeID
	left join Sec_Users u on u.UserID = i.UserId
	inner join EX_Branches brn on brn.BranchID=i.BranchID
	where  i.BranchID  = coalesce( @branchId ,i.BranchID)
	and i.InvoiceTime >=  coalesce( @Fdate, i.InvoiceTime)  and i.InvoiceTime <=  coalesce(@Tdate, i.InvoiceTime)
	and i.UserId =coalesce(  @Userid,i.UserId)
GO
PRINT N'Creating Procedure [dbo].[Exchange_Profit]...';


GO
CREATE Proc [dbo].Exchange_Profit 
@branchId as int =null,
@FromDate as datetime ='2020-01-01 23:59:59',
@ToDate as datetime ='2025-01-01 23:59:59'
as
if @branchId = 0 
begin
set @branchId = null
end

--'client_sale' 
select c.CurrencyNameAr ,sum(ed.amount)amount , sum(ed.amount * ExRate) price ,sum(ExRate)/count (exrate) exrate into #cs from EX_Invoices e 
inner join EX_InvoicesDetails ed on ed.InvoiceID = e.InvoiceID
inner join Currencies c on c.CurrencyID = ed.CurrencyID
where 
e.InvoiceDate >= COALESCE(@FromDate,e.InvoiceDate )
and e.InvoiceDate <= COALESCE(@ToDate,e.InvoiceDate ) 
and e.BranchID = COALESCE(@branchId, e.BranchID )
and e.InvoiceTypeID=1
group by c.CurrencyNameAr

--client_buy

select c.CurrencyNameAr ,sum(ed.amount)amount , sum(ed.amount * ExRate) price ,sum(ExRate)/count (exrate) exrate into #cb   from EX_Invoices e 
inner join EX_InvoicesDetails ed on ed.InvoiceID = e.InvoiceID
inner join Currencies c on c.CurrencyID = ed.CurrencyID
where 
e.InvoiceDate >= COALESCE(@FromDate,e.InvoiceDate )
and e.InvoiceDate <= COALESCE(@ToDate,e.InvoiceDate ) 
and e.BranchID = COALESCE(@branchId, e.BranchID )
and e.InvoiceTypeID=2
group by c.CurrencyNameAr

--'supplier_sale' 
select c.CurrencyNameAr ,sum(ed.amount)amount , sum(ed.amount * SupplierExRate) price ,sum(SupplierExRate)/count(SupplierExRate) ExRate into #ss from EX_WholeInvoices e 
inner join EX_WholeInvoicesDetails ed on ed.InvoiceID = e.InvoiceID
inner join Currencies c on c.CurrencyID = ed.CurrencyID
where 
e.InvoiceDate >= COALESCE(@FromDate,e.InvoiceDate )
and e.InvoiceDate <= COALESCE(@ToDate,e.InvoiceDate ) 
and e.BranchID = COALESCE(@branchId, e.BranchID )
and e.InvoiceTypeID=1
group by c.CurrencyNameAr

--'supplier_buy' 
select c.CurrencyNameAr ,sum(ed.amount)amount , sum(ed.amount * SupplierExRate) price ,sum(SupplierExRate)/count(SupplierExRate) ExRate into #sb from EX_WholeInvoices e 
inner join EX_WholeInvoicesDetails ed on ed.InvoiceID = e.InvoiceID
inner join Currencies c on c.CurrencyID = ed.CurrencyID
where 
e.InvoiceDate >= COALESCE(@FromDate,e.InvoiceDate )
and e.InvoiceDate <= COALESCE(@ToDate,e.InvoiceDate ) 
and e.BranchID = COALESCE(@branchId, e.BranchID )
and e.InvoiceTypeID=2
group by c.CurrencyNameAr


select  m.CurrencyNameAr ,sum(m.amount)amount , sum(m.price) price ,sum(m.ExRate)/count(m.ExRate) ExRate into #b from 
(
select *from #sb
union all 
select *from #cb
)m
group by  m.CurrencyNameAr

select  m.CurrencyNameAr ,sum(m.amount)amount , sum(m.price) price ,sum(m.ExRate)/count(m.ExRate) ExRate into #s from 
(
select *from #ss
union all 
select *from #cs
)m
group by  m.CurrencyNameAr

select 
convert (nvarchar(50),ROW_NUMBER() OVER (ORDER BY b.CurrencyNameAr)) seq,
@ToDate [Date],
s.CurrencyNameAr CurrName

,convert (decimal(18,3),s.amount) SalesAmount
,convert (decimal(18,3),s.price) SalesVallue
,convert (decimal(18,3),b.ExRate * s.amount )SalesCost
,convert (decimal(18,3),s.price - (b.ExRate * s.amount)) TotalProfit
from #b b inner join #s s on s.CurrencyNameAr=b.CurrencyNameAr
order by  s.CurrencyNameAr
GO
PRINT N'Creating Procedure [dbo].[Exchange_SalesBuys]...';


GO
CREATE Proc [dbo].[Exchange_SalesBuys] 
@branchId as int =null,
@FromDate as datetime ='2020-01-01 23:59:59',
@ToDate as datetime ='2025-01-01 23:59:59',
@ClientId  as int =null,
@SupplierId as int =null
as
if @branchId = 0 
begin
set @branchId = null
end

if @SupplierId = 0 
begin
set @SupplierId = null
end

if @ClientId = 0 
begin
set @ClientId = null
end
--'client_sale' 
select c.CurrencyNameAr ,sum(ed.amount)amount , sum(ed.amount * ExRate) price ,sum(ExRate)/count (exrate) exrate into #cs from EX_Invoices e 
inner join EX_InvoicesDetails ed on ed.InvoiceID = e.InvoiceID
inner join Currencies c on c.CurrencyID = ed.CurrencyID
where 
e.InvoiceDate >= COALESCE(@FromDate,e.InvoiceDate )
and e.InvoiceDate <= COALESCE(@ToDate,e.InvoiceDate ) 
and e.BranchID = COALESCE(@branchId, e.BranchID )
and e.clientid = COALESCE(@ClientId, e.clientid )
and e.InvoiceTypeID=1
group by c.CurrencyNameAr

--client_buy

select c.CurrencyNameAr ,sum(ed.amount)amount , sum(ed.amount * ExRate) price ,sum(ExRate)/count (exrate) exrate into #cb   from EX_Invoices e 
inner join EX_InvoicesDetails ed on ed.InvoiceID = e.InvoiceID
inner join Currencies c on c.CurrencyID = ed.CurrencyID
where 
e.InvoiceDate >= COALESCE(@FromDate,e.InvoiceDate )
and e.InvoiceDate <= COALESCE(@ToDate,e.InvoiceDate ) 
and e.BranchID = COALESCE(@branchId, e.BranchID )
and e.clientid = COALESCE(@ClientId, e.clientid )
and e.InvoiceTypeID=2
group by c.CurrencyNameAr

--'supplier_sale' 
select c.CurrencyNameAr ,sum(ed.amount)amount , sum(ed.amount * SupplierExRate) price ,sum(SupplierExRate)/count(SupplierExRate) ExRate into #ss from EX_WholeInvoices e 
inner join EX_WholeInvoicesDetails ed on ed.InvoiceID = e.InvoiceID
inner join Currencies c on c.CurrencyID = ed.CurrencyID
where 
e.InvoiceDate >= COALESCE(@FromDate,e.InvoiceDate )
and e.InvoiceDate <= COALESCE(@ToDate,e.InvoiceDate ) 
and e.BranchID = COALESCE(@branchId, e.BranchID )
and e.SupplierID = COALESCE(@SupplierId, e.SupplierID )
and e.InvoiceTypeID=1
group by c.CurrencyNameAr

--'supplier_buy' 
select c.CurrencyNameAr ,sum(ed.amount)amount , sum(ed.amount * SupplierExRate) price ,sum(SupplierExRate)/count(SupplierExRate) ExRate into #sb from EX_WholeInvoices e 
inner join EX_WholeInvoicesDetails ed on ed.InvoiceID = e.InvoiceID
inner join Currencies c on c.CurrencyID = ed.CurrencyID
where 
e.InvoiceDate >= COALESCE(@FromDate,e.InvoiceDate )
and e.InvoiceDate <= COALESCE(@ToDate,e.InvoiceDate ) 
and e.BranchID = COALESCE(@branchId, e.BranchID )
and e.SupplierID = COALESCE(@SupplierId, e.SupplierID )
and e.InvoiceTypeID=2
group by c.CurrencyNameAr


select  m.CurrencyNameAr ,sum(m.amount)amount , sum(m.price) price ,sum(m.ExRate)/count(m.ExRate) ExRate into #b from 
(
select *from #sb
union all 
select *from #cb
)m
group by  m.CurrencyNameAr

select  m.CurrencyNameAr ,sum(m.amount)amount , sum(m.price) price ,sum(m.ExRate)/count(m.ExRate) ExRate into #s from 
(
select *from #ss
union all 
select *from #cs
)m
group by  m.CurrencyNameAr

select 
convert (nvarchar(50),ROW_NUMBER() OVER (ORDER BY b.CurrencyNameAr)) seq,
@ToDate [Date],
b.CurrencyNameAr CurrName
,convert (decimal(18,3),b.amount) Buy_Amount
,convert (decimal(18,3),b.price) BUY_VSByRiyal
,convert (decimal(18,3),b.ExRate) Buy_AVGPrice
,convert (decimal(18,3),s.amount) Sale_Amount
,convert (decimal(18,3),s.price) Sale_VSByRiyal
,convert (decimal(18,3),s.ExRate) Sale_AVGPrice
from #b b inner join #s s on s.CurrencyNameAr=b.CurrencyNameAr
order by Sale_AVGPrice
GO
PRINT N'Creating Procedure [dbo].[Exchange_TreasutyMonement]...';


GO

CREATE Proc [dbo].[Exchange_TreasutyMonement] 
@branchId as int =null,
@TreasuryId as int =null,
@FromDate as datetime ='2020-01-01 23:59:59',
@ToDate as datetime ='2025-01-01 23:59:59',
@CurrCode  as int =1

as
if @branchId = 0 
begin
set @branchId = null
end

if @TreasuryId = 0 
begin
set @TreasuryId = null
end

if @CurrCode = 0 
begin
set @CurrCode = null
end
select 
convert (varchar(50),bvr.id) seq ,
bvr.ActionTime Date ,
c.CurrencyNameAr CurrName ,
bvr.amount Move_Value ,
bvr.balance balance ,
case  when ActionType ='CSH' then 'سندات خزينه'  
when ActionType ='Delete_CSH' then 'حذف سندات الخزينة'  
when ActionType ='Update_CSH' then 'تعديل سندات الخزينة'  
when ActionType ='inv' then 'فاتوره افراد'  
when ActionType ='Delete_inv' then 'حذف فاتوره افراد'  
when left (ActionType,10) ='Update_inv' then 'تعديل فاتوره افراد'  
when ActionType ='whl' then 'فاتوره جمله'  
when ActionType ='Delete_whl' then 'حذف فاتوره جملة'  
when left(ActionType,10) ='Update_whl' then 'تعديل فاتوره جملة'  
when ActionType ='TSw' then 'تسوية'  
when ActionType ='Delete_TSW' then 'حذف تسوية'  
when left(ActionType,10) ='Update_TSW' then 'تعديل تسوية'  
when ActionType ='TRN_F' then 'تحويل من خزينة' 
when ActionType ='TRN_T' then 'تحويل الي خزينة' 
when ActionType ='Delete_TRN_F' then 'حذف التحويل' 
when ActionType ='Delete_TRN_F' then 'حذف التحويل' 
when left(ActionType,10) ='Update_TRN' then 'تعديل التحويل' 
else ''
end Move_type ,
'' Notes 
from EX_CurrenciesBVR bvr inner join Currencies c on c.CurrencyID = bvr.CurrencyID
where c.BranchID = COALESCE(@branchId, c.BranchID )
and  c.TreasuryId = COALESCE(@TreasuryId, c.TreasuryId )
and bvr.ActionTime >= COALESCE(@FromDate,bvr.ActionTime )
and bvr.ActionTime <= COALESCE(@ToDate,bvr.ActionTime )
and  c.CurrencyCode = COALESCE(@CurrCode, c.CurrencyCode )

order by bvr.id
GO
PRINT N'Creating Procedure [dbo].[Exchange_WF_GetInputRequest]...';


GO
CREATE  Proc [dbo].[Exchange_WF_GetInputRequest] 
@Userid as int=2244
as
--declare @Userid as int=2244
select distinct r.* from WFRequest r inner join WFRequestType t on t.RequestTypeid = r.RequestTypeid
inner join WFListOfApprovals a1 on a1.BranchID =r.BranchID and a1.RequestTypeId = r.RequestTypeId 
--inner join
--(select min(ap.ActionOrder) ActionOrder,ap.RequestTypeId,ap.BranchID from WFListOfApprovals ap  	
--group by ap.RequestTypeId,ap.BranchID 
--)a2 on a1.BranchID =a2.BranchID and a1.RequestTypeId = a2.RequestTypeId and a1.ActionOrder = a2.ActionOrder 
where convert(nvarchar(50),a1.RequestTypeid)+'***' + convert(nvarchar(50),a1.BranchID)+'***' + convert(nvarchar(50),a1.ActionOrder) 
									not in  ( select convert(nvarchar(50),dd.RequestTypeid)+'***' + convert(nvarchar(50),dd.BranchID)+'***' + convert(nvarchar(50),d.ActionOrder) 
									from WFRequestDetails d inner join wfrequest dd on dd.RequestId  =d.RequestId where d.ActionType in (0,1) and d.RequestId = r.RequestId)

and isnull(r.IsCompleted,0) <> 1
and a1.UserId = case when @userid= 9999990
then (select max(t.OwnerId) from ExTreasuryTransfere e inner join Treasury t on t.TreasuryId=e.FromTreasuryId where e.TransferId=convert(int,r.EntityId))
when @userid=9999991
then (select max(t.OwnerId) from ExTreasuryTransfere e inner join Treasury t on t.TreasuryId=e.ToTreasuryId where e.TransferId=convert(int,r.EntityId))
when @userid=9999992
then (select max(t.managerid) from ExTreasuryTransfere e inner join EX_Branches t on t.branchid=e.frombranchid where e.TransferId=convert(int,r.EntityId))
when @userid=9999991
then (select max(t.managerid) from ExTreasuryTransfere e inner join EX_Branches t on t.branchid=e.tobranchid where e.TransferId=convert(int,r.EntityId))
else @userid end
GO
PRINT N'Creating Procedure [dbo].[Exchange_WF_GetRequestStatus]...';


GO
CREATE  Proc [dbo].[Exchange_WF_GetRequestStatus] 
@RequestTypeid as int=1 , @entityid as nvarchar(100)='1'
as
select   'في انتظار موافقه' + uu.UserNameAr from WFRequest r inner join WFRequestType t on t.RequestTypeid = r.RequestTypeid
inner join WFListOfApprovals a1 on a1.BranchID =r.BranchID and a1.RequestTypeId = r.RequestTypeId 
inner join Sec_Users uu on uu.UserID = a1.userid
where r.RequestTypeid = @RequestTypeid and r.EntityId=@entityid
and convert(nvarchar(50),a1.RequestTypeid)+'***' + convert(nvarchar(50),a1.BranchID)+'***' + convert(nvarchar(50),a1.ActionOrder) 
									not in  ( select convert(nvarchar(50),dd.RequestTypeid)+'***' + convert(nvarchar(50),dd.BranchID)+'***' + convert(nvarchar(50),d.ActionOrder) 
									from WFRequestDetails d inner join wfrequest dd on dd.RequestId  =d.RequestId where d.ActionType in (0,1) and d.RequestId = r.RequestId)

and isnull(r.IsCompleted,0) <> 1
order by 
a1.ActionOrder
GO
PRINT N'Creating Procedure [dbo].[Exchange_WholeMovement]...';


GO
CREATE Proc [dbo].[Exchange_WholeMovement] 
@Fdate as datetime ='2003-01-01 23:59:59'
,@Tdate as datetime ='2025-01-01 23:59:59'
,@branchId as int =1
,@Userid as int=null
as
	select i.InvoiceNo,t.InvoiceTypeNameAr,c.CurrencyNameAr
	,convert(decimal(18,4),id.SystemExRate) ExRate
	,convert(decimal(18,4),id.Amount) Amount
	,convert(decimal(18,4),id.Amount*id.SystemExRate) Total
	,isnull(u.UserNameAr,'') UserNameAr,i.InvoiceTime
	,i.InvoiceID,brn.BranchNameAr , 'فواتير جملة' as [type]
	from EX_wholeInvoices i 
	inner join EX_wholeInvoicesDetails id on id.InvoiceID = i.InvoiceID
	left join Currencies c on id.CurrencyID = c.CurrencyID
	inner join EX_InvoicesType t on t.InvoiceTypeID=i.InvoiceTypeID
	left join Sec_Users u on u.UserID = i.UserId
	inner join EX_Branches brn on brn.BranchID=i.BranchID
	where i.BranchID  = coalesce( @branchId ,i.BranchID)
	and i.InvoiceTime >=  coalesce( @Fdate, i.InvoiceTime)  and i.InvoiceTime <=  coalesce(@Tdate, i.InvoiceTime)
	and i.UserId =coalesce(  @Userid,i.UserId)
GO
PRINT N'Creating Procedure [dbo].[fill_Privilage]...';


GO
CREATE proc [dbo].[fill_Privilage]
as
insert into Privilage(ScreensId,PrivilageTypeId,JobId)
select s.ScreenId,p.PrivilageTypeId,j.Id from Jobs j inner join Screens s on 1=1
inner join PrivilageType p on p.ScreensId=s.ScreenId
where convert (varchar(10),s.ScreenId) + '**' +convert (varchar(10),p.PrivilageTypeId) + '**' + convert (varchar(10),j.Id) 
not in 
(select convert (varchar(10),ScreenId) + '**' +convert (varchar(10),PrivilageTypeId) + '**' + convert (varchar(10),JobId) 
from Privilage)
GO
PRINT N'Checking existing data against newly created constraints';




GO
ALTER TABLE [dbo].[A_JVs] WITH CHECK CHECK CONSTRAINT [FK_A_JVs_A_CashFlow];

ALTER TABLE [dbo].[A_CashFlow] WITH CHECK CHECK CONSTRAINT [FK_A_CashFlow_A_CashFlowStatus];

ALTER TABLE [dbo].[A_CashFlow] WITH CHECK CHECK CONSTRAINT [FK_A_CashFlow_Sec_Users];

ALTER TABLE [dbo].[A_CashFlow] WITH CHECK CHECK CONSTRAINT [FK_A_CashFlow_EX_Suppliers];

ALTER TABLE [dbo].[A_CashFlow] WITH CHECK CHECK CONSTRAINT [FK_A_CashFlow_A_CashFlowType];

--ALTER TABLE [dbo].[A_CashFlow] WITH CHECK CHECK CONSTRAINT [FK_A_CashFlow_EX_Currencies];

--ALTER TABLE [dbo].[A_CashFlow] WITH CHECK CHECK CONSTRAINT [FK_A_CashFlow_EX_Branches_BranchID];

ALTER TABLE [dbo].[A_JVsDetails] WITH CHECK CHECK CONSTRAINT [FK_A_JVsDetails_A_JVs];

ALTER TABLE [dbo].[A_JVs] WITH CHECK CHECK CONSTRAINT [FK_A_JVs_A_JVStatus];

ALTER TABLE [dbo].[A_JVs] WITH CHECK CHECK CONSTRAINT [FK_A_JVs_A_JVType];

ALTER TABLE [dbo].[A_JVs] WITH CHECK CHECK CONSTRAINT [FK_A_JVs_EX_BranchTransfers];

ALTER TABLE [dbo].[A_JVs] WITH CHECK CHECK CONSTRAINT [FK_A_JVs_EX_Invoices];

ALTER TABLE [dbo].[A_JVs] WITH CHECK CHECK CONSTRAINT [FK_A_JVs_EX_WholeInvoices];

ALTER TABLE [dbo].[A_JVs] WITH CHECK CHECK CONSTRAINT [FK_A_JVs_EX_Branches_BranchID];

ALTER TABLE [dbo].[A_JVs] WITH CHECK CHECK CONSTRAINT [FK_A_JVs_ExTaswya_TaswyaTransferId];

ALTER TABLE [dbo].[A_JVs] WITH CHECK CHECK CONSTRAINT [FK_A_JVs_ExTreasuryTransfere_TreasuryTransferId];

ALTER TABLE [dbo].[A_JVsDetails] WITH CHECK CHECK CONSTRAINT [FK_A_JVsDetails_A_Accounts];

--ALTER TABLE [dbo].[A_JVsDetails] WITH CHECK CHECK CONSTRAINT [FK_A_JVsDetails_EX_Currencies];

--ALTER TABLE [dbo].[EX_IDSources] WITH CHECK CHECK CONSTRAINT [FK_EX_IDSources_Countries];

ALTER TABLE [dbo].[EX_Clients] WITH CHECK CHECK CONSTRAINT [FK_EX_Clients_Nationality];

ALTER TABLE [dbo].[EX_Clients] WITH CHECK CHECK CONSTRAINT [FK_EX_Clients_BirthCountry];

ALTER TABLE [dbo].[EX_Suppliers] WITH CHECK CHECK CONSTRAINT [FK_EX_Suppliers_Countries];

ALTER TABLE [dbo].[EX_BranchTransfers] WITH CHECK CHECK CONSTRAINT [FK_EX_BranchTransfers_EX_BranchTransferStatus];

ALTER TABLE [dbo].[EX_BranchTransfers] WITH CHECK CHECK CONSTRAINT [FK_EX_BranchTransfers_EX_BranchTransferType];

ALTER TABLE [dbo].[EX_BranchTransfers] WITH CHECK CHECK CONSTRAINT [FK_EX_BranchTransfers_Sys_Branches];

ALTER TABLE [dbo].[EX_BranchTransfersDetails] WITH CHECK CHECK CONSTRAINT [FK_EX_BranchTransfersDetails_EX_BranchTransfers];

ALTER TABLE [dbo].[EX_BranchTransfers] WITH CHECK CHECK CONSTRAINT [FK_EX_BranchTransfers_Sec_Users_UserId];

ALTER TABLE [dbo].[EX_BranchTransfers] WITH CHECK CHECK CONSTRAINT [FK_EX_BranchTransfers_EX_Branches_BranchID1];

ALTER TABLE [dbo].[EX_ClientsMemberships] WITH CHECK CHECK CONSTRAINT [FK_EX_ClientMemberships_EX_Clients];

ALTER TABLE [dbo].[EX_Invoices] WITH CHECK CHECK CONSTRAINT [FK_EX_Invoices_EX_Clients];

ALTER TABLE [dbo].[EX_ClientsRepresentatives] WITH CHECK CHECK CONSTRAINT [FK_EX_ClientsRepresentatives_EX_Clients];

ALTER TABLE [dbo].[EX_Clients] WITH CHECK CHECK CONSTRAINT [FK_EX_Clients_EX_IncomeSources];

ALTER TABLE [dbo].[EX_Clients] WITH CHECK CHECK CONSTRAINT [FK_EX_Clients_BirthCity];

ALTER TABLE [dbo].[EX_Clients] WITH CHECK CHECK CONSTRAINT [FK_EX_Clients_EX_ExchangePurposes];

ALTER TABLE [dbo].[EX_Clients] WITH CHECK CHECK CONSTRAINT [FK_EX_Clients_EX_IDSources];

ALTER TABLE [dbo].[EX_Clients] WITH CHECK CHECK CONSTRAINT [FK_EX_Clients_ExClientSectors_ClientSectorId];

ALTER TABLE [dbo].[EX_Clients] WITH CHECK CHECK CONSTRAINT [FK_EX_Clients_EX_Branches_BranchID];

ALTER TABLE [dbo].[EX_Invoices] WITH CHECK CHECK CONSTRAINT [FK_EX_Invoices_EX_InternalTransfers];

ALTER TABLE [dbo].[EX_InternalTransfersDetailsTemp] WITH CHECK CHECK CONSTRAINT [FK_EX_InternalTransfersDetailsTemp_EX_InternalTransfers];

ALTER TABLE [dbo].[EX_InternalTransfersDetails] WITH CHECK CHECK CONSTRAINT [FK_EX_InternalTransfers_Details_EX_InternalTransfers];

ALTER TABLE [dbo].[EX_InternalTransfersClosingDetails] WITH CHECK CHECK CONSTRAINT [FK_EX_InternalTransfersClosingDetails_EX_InternalTransfers];

ALTER TABLE [dbo].[EX_InternalTransfers] WITH CHECK CHECK CONSTRAINT [FK_EX_InternalTransfers_Sec_Users_UserId];

ALTER TABLE [dbo].[EX_InternalTransfers] WITH CHECK CHECK CONSTRAINT [FK_EX_InternalTransfers_Treasury_TreasuryId];

ALTER TABLE [dbo].[EX_InternalTransfers] WITH CHECK CHECK CONSTRAINT [FK_EX_InternalTransfers_EX_Branches_BranchID];

ALTER TABLE [dbo].[EX_InternalTransfersDetails] WITH CHECK CHECK CONSTRAINT [FK_EX_InternalTransfers_Details_Ex_Currencies];

ALTER TABLE [dbo].[EX_InvoicesDetails] WITH CHECK CHECK CONSTRAINT [FK_EX_InvoicesDetails_EX_Invoices];

ALTER TABLE [dbo].[EX_Invoices] WITH CHECK CHECK CONSTRAINT [FK_EX_Invoices_EX_Banks];

ALTER TABLE [dbo].[EX_Invoices] WITH CHECK CHECK CONSTRAINT [FK_EX_Invoices_EX_InvoiceStatus];

ALTER TABLE [dbo].[EX_Invoices] WITH CHECK CHECK CONSTRAINT [FK_EX_Invoices_EX_InvoicesType];

ALTER TABLE [dbo].[EX_Invoices] WITH CHECK CHECK CONSTRAINT [FK_EX_Invoices_Treasury_TreasuryId];

ALTER TABLE [dbo].[EX_Invoices] WITH CHECK CHECK CONSTRAINT [FK_EX_Invoices_Sec_Users_UserId];

ALTER TABLE [dbo].[EX_Invoices] WITH CHECK CHECK CONSTRAINT [FK_EX_Invoices_EX_Branches_BranchID];

ALTER TABLE [dbo].[EX_InvoicesDetails] WITH CHECK CHECK CONSTRAINT [FK_EX_InvoicesDetails_EX_Currencies];

ALTER TABLE [dbo].[EX_WholeInvoices] WITH CHECK CHECK CONSTRAINT [FK_EX_WholeInvoices_EX_Suppliers];

ALTER TABLE [dbo].[EX_Suppliers] WITH CHECK CHECK CONSTRAINT [FK_EX_Suppliers_A_Accounts];

ALTER TABLE [dbo].[EX_Suppliers] WITH CHECK CHECK CONSTRAINT [FK_EX_Suppliers_EX_SuppliersType];

ALTER TABLE [dbo].[EX_Suppliers] WITH CHECK CHECK CONSTRAINT [FK_EX_Suppliers_EX_Branches_BranchID1];

ALTER TABLE [dbo].[EX_WholeInvoicesDetails] WITH CHECK CHECK CONSTRAINT [FK_EX_WholeInvoices_Details_EX_WholeInvoices];

ALTER TABLE [dbo].[EX_WholeInvoices] WITH CHECK CHECK CONSTRAINT [FK_EX_WholeInvoices_EX_Banks];

ALTER TABLE [dbo].[EX_WholeInvoices] WITH CHECK CHECK CONSTRAINT [FK_EX_WholeInvoices_EX_InvoicesType];

ALTER TABLE [dbo].[EX_WholeInvoices] WITH CHECK CHECK CONSTRAINT [FK_EX_WholeInvoices_EX_WholeInvoiceStatus];

ALTER TABLE [dbo].[EX_WholeInvoices] WITH CHECK CHECK CONSTRAINT [FK_EX_WholeInvoices_Treasury_TreasuryId];

ALTER TABLE [dbo].[EX_WholeInvoices] WITH CHECK CHECK CONSTRAINT [FK_EX_WholeInvoices_EX_Branches_BranchID];

ALTER TABLE [dbo].[EX_WholeInvoicesDetails] WITH CHECK CHECK CONSTRAINT [FK_EX_WholeInvoices_Details_EX_Currencies];

ALTER TABLE [dbo].[Sec_FormsFunctions] WITH CHECK CHECK CONSTRAINT [FK_Sec_FormsFunctions_Sec_Forms];

ALTER TABLE [dbo].[Sec_FormsFunctions] WITH CHECK CHECK CONSTRAINT [FK_Sec_FormsFunctions_Sec_Functions];

ALTER TABLE [dbo].[Sec_UsersFunctions] WITH CHECK CHECK CONSTRAINT [FK_Sec_UsersFunctions_Sec_FormsFunctions];

ALTER TABLE [dbo].[Sec_UsersForms] WITH CHECK CHECK CONSTRAINT [FK_Sec_UsersForms_Sec_Forms];

ALTER TABLE [dbo].[Sec_UsersForms] WITH CHECK CHECK CONSTRAINT [FK_Sec_UsersForms_Sec_Users11];

ALTER TABLE [dbo].[Sec_UsersForms] WITH CHECK CHECK CONSTRAINT [FK_Sec_UsersForms_Sec_Users1121_SecUserUserId];

ALTER TABLE [dbo].[Sec_UsersFunctions] WITH CHECK CHECK CONSTRAINT [FK_Sec_UsersFunctions_Sec1112_Users];

ALTER TABLE [dbo].[Sec_UsersFunctions] WITH CHECK CHECK CONSTRAINT [FK_Sec_UsersFunctions_Sec_Users21321_SecUserUserId];

ALTER TABLE [dbo].[EX_BranchTransfersDetails] WITH CHECK CHECK CONSTRAINT [FK_EX_BranchTransfersDetails_EX_Currencies];

ALTER TABLE [dbo].[EX_CurrenciesBVR] WITH CHECK CHECK CONSTRAINT [FK_EX_CurrenciesValRates_EX_Currencies];

ALTER TABLE [dbo].[EX_InternalTransfersDetailsTemp] WITH CHECK CHECK CONSTRAINT [FK_EX_InternalTransfersDetailsTemp_EX_Currencies];

ALTER TABLE [dbo].[BankAccount] WITH CHECK CHECK CONSTRAINT [FK_BankAccount_Currencies_CurrencyId];

ALTER TABLE [dbo].[BankAccount] WITH CHECK CHECK CONSTRAINT [FK_BankAccount_EX_Banks_BankId];

ALTER TABLE [dbo].[BanksBvr] WITH CHECK CHECK CONSTRAINT [FK_BanksBvr_BankAccount_BankAccountId];

ALTER TABLE [dbo].[BanksTreasuryTransfere] WITH CHECK CHECK CONSTRAINT [FK_BanksTreasuryTransfere_Currencies_CurrencyId];

ALTER TABLE [dbo].[Currencies] WITH CHECK CHECK CONSTRAINT [FK_Currencies_EX_Branches_BranchID];

ALTER TABLE [dbo].[Currencies] WITH CHECK CHECK CONSTRAINT [FK_Currencies_Treasury_TreasuryId];

ALTER TABLE [dbo].[CurrencyBase] WITH CHECK CHECK CONSTRAINT [FK_CurrencyBase_EX_Countries_CountryId];

ALTER TABLE [dbo].[EX_Countries] WITH CHECK CHECK CONSTRAINT [FK_Countries_EX_ClientJobSeverity];

ALTER TABLE [dbo].[ExClientsNote] WITH CHECK CHECK CONSTRAINT [FK_ExClientsNote_EX_Clients_ClientId];

ALTER TABLE [dbo].[ExTaswya] WITH CHECK CHECK CONSTRAINT [FK_ExTaswya_EX_Branches_BranchID];

ALTER TABLE [dbo].[ExTaswya] WITH CHECK CHECK CONSTRAINT [FK_ExTaswya_Sec_Users_UserId];

ALTER TABLE [dbo].[ExTaswya] WITH CHECK CHECK CONSTRAINT [FK_ExTaswya_Treasury_TreasuryId];

ALTER TABLE [dbo].[ExTaswyaDetail] WITH CHECK CHECK CONSTRAINT [FK_ExTaswyaDetail_Currencies_CurrencyId];

ALTER TABLE [dbo].[ExTaswyaDetail] WITH CHECK CHECK CONSTRAINT [FK_ExTaswyaDetail_ExTaswya_TransferId];

ALTER TABLE [dbo].[ExTreasuryTransfere] WITH CHECK CHECK CONSTRAINT [FK_ExTreasuryTransfere_EX_Branches_FromBranchID];

ALTER TABLE [dbo].[ExTreasuryTransfere] WITH CHECK CHECK CONSTRAINT [FK_ExTreasuryTransfere_EX_Branches_ToBranchID];

ALTER TABLE [dbo].[ExTreasuryTransfere] WITH CHECK CHECK CONSTRAINT [FK_ExTreasuryTransfere_Sec_Users_UserId];

ALTER TABLE [dbo].[ExTreasuryTransfere] WITH CHECK CHECK CONSTRAINT [FK_ExTreasuryTransfere_Treasury_FromTreasuryId];

ALTER TABLE [dbo].[ExTreasuryTransfere] WITH CHECK CHECK CONSTRAINT [FK_ExTreasuryTransfere_Treasury_ToTreasuryId];

ALTER TABLE [dbo].[ExTreasuryTransfereDetail] WITH CHECK CHECK CONSTRAINT [FK_ExTreasuryTransfereDetail_Currencies_CurrencyId];

ALTER TABLE [dbo].[ExTreasuryTransfereDetail] WITH CHECK CHECK CONSTRAINT [FK_ExTreasuryTransfereDetail_ExTreasuryTransfere_TransferId];

ALTER TABLE [dbo].[FinYearsPeriods] WITH CHECK CHECK CONSTRAINT [FK_FinYearsPeriods_FinYears_FinYearId];

ALTER TABLE [dbo].[SecPermissionTypeBranches] WITH CHECK CHECK CONSTRAINT [FK_SecPermissionTypeBranches_EX_Branches_BranchId];

ALTER TABLE [dbo].[SecPermissionTypeBranches] WITH CHECK CHECK CONSTRAINT [FK_SecPermissionTypeBranches_SecPermissionType_PermissionTypeId];

ALTER TABLE [dbo].[ShiftTracking] WITH CHECK CHECK CONSTRAINT [FK_ShiftTracking_Sec_Users_FromUserId];

ALTER TABLE [dbo].[ShiftTracking] WITH CHECK CHECK CONSTRAINT [FK_ShiftTracking_Sec_Users_ToUserId];

ALTER TABLE [dbo].[ShiftTracking] WITH CHECK CHECK CONSTRAINT [FK_ShiftTracking_Treasury_TreasuryId];

ALTER TABLE [dbo].[Treasury] WITH CHECK CHECK CONSTRAINT [FK_Treasury_EX_Branches_BranchID];

ALTER TABLE [dbo].[Treasury] WITH CHECK CHECK CONSTRAINT [FK_Treasury_Sec_Users_OwnerId];

ALTER TABLE [dbo].[Treasury] WITH CHECK CHECK CONSTRAINT [FK_Treasury_A_Accounts_AccountId];

ALTER TABLE [dbo].[TreasuryDealers] WITH CHECK CHECK CONSTRAINT [FK_TreasuryDealers_Sec_Users_UserId];

ALTER TABLE [dbo].[TreasuryDealers] WITH CHECK CHECK CONSTRAINT [FK_TreasuryDealers_Treasury_TreasuryId];

ALTER TABLE [dbo].[UserSetting] WITH CHECK CHECK CONSTRAINT [FK_UserSetting_Sec_Users_UserId];

ALTER TABLE [dbo].[UserSetting] WITH CHECK CHECK CONSTRAINT [FK_UserSetting_Setting_SettingID];

ALTER TABLE [dbo].[WFListOfApprovals] WITH CHECK CHECK CONSTRAINT [FK_WFListOfApprovals_EX_Branches_BranchID];

ALTER TABLE [dbo].[WFListOfApprovals] WITH CHECK CHECK CONSTRAINT [FK_WFListOfApprovals_WFRequestType_RequestTypeId];

ALTER TABLE [dbo].[WFRequest] WITH CHECK CHECK CONSTRAINT [FK_WFRequest_EX_Branches_BranchID];

ALTER TABLE [dbo].[WFRequest] WITH CHECK CHECK CONSTRAINT [FK_WFRequest_Sec_Users_UserId];

ALTER TABLE [dbo].[WFRequest] WITH CHECK CHECK CONSTRAINT [FK_WFRequest_WFRequestType_RequestTypeId];

ALTER TABLE [dbo].[WFRequestDetails] WITH CHECK CHECK CONSTRAINT [FK_WFRequestDetails_Sec_Users_UserId];

ALTER TABLE [dbo].[WFRequestDetails] WITH CHECK CHECK CONSTRAINT [FK_WFRequestDetails_WFRequest_RequestId];

ALTER TABLE [dbo].[A_Accounts] WITH CHECK CHECK CONSTRAINT [FK_A_Accounts_ACostCenter_CostCenterID];

ALTER TABLE [dbo].[EX_ClientJob] WITH CHECK CHECK CONSTRAINT [FK_EX_ClientJob_ExClientSectors_ClientSectorId];

ALTER TABLE [dbo].[Sec_Users] WITH CHECK CHECK CONSTRAINT [FK_Sec_Users_PermissionTypes];


GO








-------------------------.--------


------------------------------------



PRINT N'Update complete.';


GO
